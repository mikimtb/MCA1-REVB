

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jul 03 01:00:53 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  000B1C                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _in
    46  000B1C  78                 	db	120
    47  000B1D  00                 	db	0
    48  000B1E  00                 	db	0
    49  000B1F  00                 	db	0
    50  000B20  00                 	db	0
    51  000B21  00                 	db	0
    52  000B22  00                 	db	0
    53  000B23  00                 	db	0
    54  000B24  00                 	db	0
    55  000B25  00                 	db	0
    56  000B26  00                 	db	0
    57  000B27  00                 	db	0
    58  000B28  00                 	db	0
    59  000B29  00                 	db	0
    60  000B2A  00                 	db	0
    61  000B2B  00                 	db	0
    62  000B2C  00                 	db	0
    63  000B2D  00                 	db	0
    64  000B2E  00                 	db	0
    65  000B2F  00                 	db	0
    66  000B30  00                 	db	0
    67  000B31  00                 	db	0
    68  000B32  00                 	db	0
    69  000B33  00                 	db	0
    70  000B34  00                 	db	0
    71  000B35  00                 	db	0
    72  000B36  00                 	db	0
    73  000B37  00                 	db	0
    74  000B38  00                 	db	0
    75  000B39  00                 	db	0
    76  000B3A  00                 	db	0
    77  000B3B  00                 	db	0
    78  000B3C  00                 	db	0
    79  000B3D  00                 	db	0
    80  000B3E  0000               	dw	0
    81  000B40  0000               	dw	0
    82  000B42  00                 	db	0
    83                           
    84                           ;initializer for _out
    85  000B43  82                 	db	130
    86  000B44  00                 	db	0
    87  000B45  00                 	db	0
    88  000B46  00                 	db	0
    89  000B47  00                 	db	0
    90  000B48  00                 	db	0
    91  000B49  00                 	db	0
    92  000B4A  00                 	db	0
    93  000B4B  00                 	db	0
    94  000B4C  00                 	db	0
    95  000B4D  00                 	db	0
    96  000B4E  00                 	db	0
    97  000B4F  00                 	db	0
    98  000B50  00                 	db	0
    99  000B51  00                 	db	0
   100  000B52  00                 	db	0
   101  000B53  00                 	db	0
   102  000B54  00                 	db	0
   103  000B55  00                 	db	0
   104  000B56  00                 	db	0
   105  000B57  00                 	db	0
   106  000B58  00                 	db	0
   107  000B59  00                 	db	0
   108  000B5A  00                 	db	0
   109  000B5B  00                 	db	0
   110  000B5C  00                 	db	0
   111  000B5D  00                 	db	0
   112  000B5E  00                 	db	0
   113  000B5F  00                 	db	0
   114  000B60  00                 	db	0
   115  000B61  00                 	db	0
   116  000B62  00                 	db	0
   117  000B63  00                 	db	0
   118  000B64  00                 	db	0
   119  000B65  0000               	dw	0
   120  000B67  0000               	dw	0
   121  000B69  00                 	db	0
   122                           
   123                           	psect	smallconst
   124  000300                     __psmallconst:
   125                           	opt stack 0
   126  000300  00                 	db	0
   127  000301                     _fVersion:
   128                           	opt stack 0
   129  000301  76                 	db	118
   130  000302  31                 	db	49
   131  000303  2E                 	db	46
   132  000304  30                 	db	48
   133  000305  00                 	db	0
   134  000306                     __end_of_fVersion:
   135                           	opt stack 0
   136  0000                     _ANSEL0	set	4024
   137  0000                     _ANSEL1	set	4025
   138  0000                     _BAUDCONbits	set	4010
   139  0000                     _BAUDCTLbits	set	4010
   140  0000                     _CCP1CON	set	4029
   141  0000                     _CCP1CONbits	set	4029
   142  0000                     _CCPR1L	set	4030
   143  0000                     _DFLTCON	set	3936
   144  0000                     _DTCON	set	3949
   145  0000                     _FLTCONFIG	set	3948
   146  0000                     _INTCONbits	set	4082
   147  0000                     _IPR1bits	set	3999
   148  0000                     _MAXCNTH	set	3941
   149  0000                     _MAXCNTL	set	3940
   150  0000                     _OVDCOND	set	3947
   151  0000                     _OVDCONS	set	3946
   152  0000                     _PDC0H	set	3960
   153  0000                     _PDC0L	set	3961
   154  0000                     _PDC1H	set	3958
   155  0000                     _PDC1L	set	3959
   156  0000                     _PIE1bits	set	3997
   157  0000                     _PIR1bits	set	3998
   158  0000                     _PORTDbits	set	3971
   159  0000                     _POSCNTH	set	3943
   160  0000                     _POSCNTL	set	3942
   161  0000                     _PR2	set	4043
   162  0000                     _PTCON0	set	3967
   163  0000                     _PTCON1bits	set	3966
   164  0000                     _PTPERH	set	3962
   165  0000                     _PTPERL	set	3963
   166  0000                     _PWMCON0	set	3951
   167  0000                     _PWMCON1	set	3950
   168  0000                     _QEICON	set	4022
   169  0000                     _RCONbits	set	4048
   170  0000                     _RCREG	set	4014
   171  0000                     _RCSTA	set	4011
   172  0000                     _RCSTAbits	set	4011
   173  0000                     _SPBRG	set	4015
   174  0000                     _SPBRGH	set	4016
   175  0000                     _T2CON	set	4042
   176  0000                     _TRISAbits	set	3986
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISCbits	set	3988
   179  0000                     _TRISDbits	set	3989
   180  0000                     _TXREG	set	4013
   181  0000                     _TXSTA	set	4012
   182  0000                     _TXSTAbits	set	4012
   183                           
   184                           ; #config settings
   185  000306  00                 	db	0	; dummy byte at the end
   186  0000                     
   187                           	psect	cinit
   188  000BD0                     __pcinit:
   189                           	opt stack 0
   190  000BD0                     start_initialization:
   191                           	opt stack 0
   192  000BD0                     __initialization:
   193                           	opt stack 0
   194                           
   195                           ; Initialize objects allocated to BANK0 (78 bytes)
   196                           ; load TBLPTR registers with __pidataBANK0
   197  000BD0  0E1C               	movlw	low __pidataBANK0
   198  000BD2  6EF6               	movwf	tblptrl,c
   199  000BD4  0E0B               	movlw	high __pidataBANK0
   200  000BD6  6EF7               	movwf	tblptrh,c
   201  000BD8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   202  000BDA  6EF8               	movwf	tblptru,c
   203  000BDC  EE00  F060         	lfsr	0,__pdataBANK0
   204  000BE0  EE10 F04E          	lfsr	1,78
   205  000BE4                     copy_data0:
   206  000BE4  0009               	tblrd		*+
   207  000BE6  CFF5 FFEE          	movff	tablat,postinc0
   208  000BEA  50E5               	movf	postdec1,w,c
   209  000BEC  50E1               	movf	fsr1l,w,c
   210  000BEE  E1FA               	bnz	copy_data0
   211  000BF0                     end_of_initialization:
   212                           	opt stack 0
   213  000BF0                     __end_of__initialization:
   214                           	opt stack 0
   215  000BF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216  000BF2  6EF8               	movwf	tblptru,c
   217  000BF4  0100               	movlb	0
   218  000BF6  EF84  F001         	goto	_main	;jump to C main() function
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           postdec1	equ	0xFE5
   225                           fsr1l	equ	0xFE1
   226                           
   227                           	psect	dataBANK0
   228  000060                     __pdataBANK0:
   229                           	opt stack 0
   230  000060                     _in:
   231                           	opt stack 0
   232  000060                     	ds	39
   233  000087                     _out:
   234                           	opt stack 0
   235  000087                     	ds	39
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           postdec1	equ	0xFE5
   242                           fsr1l	equ	0xFE1
   243                           
   244                           	psect	cstackBANK0
   245  0000AE                     __pcstackBANK0:
   246                           	opt stack 0
   247  0000AE                     ??___fttol:
   248                           
   249                           ; 0 bytes @ 0x0
   250  0000AE                     	ds	5
   251  0000B3                     ___fttol@sign1:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x5
   255  0000B3                     	ds	1
   256  0000B4                     ___fttol@lval:
   257                           	opt stack 0
   258                           
   259                           ; 4 bytes @ 0x6
   260  0000B4                     	ds	4
   261  0000B8                     ___fttol@exp1:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0xA
   265  0000B8                     	ds	1
   266  0000B9                     SetDCBrake_PWMDuty@duty:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0xB
   270  0000B9                     	ds	2
   271  0000BB                     ??_SetDCBrake_PWMDuty:
   272                           
   273                           ; 0 bytes @ 0xD
   274  0000BB                     	ds	2
   275  0000BD                     SetDCBrake_NominalVoltage@DCBrakeNominalVoltage:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0xF
   279  0000BD                     	ds	2
   280  0000BF                     SetDCBrake_NominalVoltage@HVSupplyVoltage:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x11
   284  0000BF                     	ds	2
   285  0000C1                     SetDCBrake_NominalVoltage@sPWMQuantum:
   286                           	opt stack 0
   287                           
   288                           ; 3 bytes @ 0x13
   289  0000C1                     	ds	3
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	cstackCOMRAM
   299  000001                     __pcstackCOMRAM:
   300                           	opt stack 0
   301  000001                     ??_HighIsr:
   302  000001                     
   303                           ; 2 bytes @ 0x0
   304  000001                     	ds	14
   305  00000F                     ??_LowIsr:
   306                           
   307                           ; 0 bytes @ 0xE
   308  00000F                     	ds	17
   309  000020                     LowIsr@a:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x1F
   313  000020                     	ds	1
   314  000021                     ?___ftpack:
   315                           	opt stack 0
   316  000021                     UARTSendByte@data:
   317                           	opt stack 0
   318  000021                     InitQEI@_DFLTCON:
   319                           	opt stack 0
   320  000021                     delay_ms@delay:
   321                           	opt stack 0
   322  000021                     SetPWM1Duty@_PDC0:
   323                           	opt stack 0
   324  000021                     SetPWM2Duty@_PDC1:
   325                           	opt stack 0
   326  000021                     Buffer_Write@buff:
   327                           	opt stack 0
   328  000021                     Buffer_Read@buff:
   329                           	opt stack 0
   330  000021                     Buffer_GetCRC8@buff:
   331                           	opt stack 0
   332  000021                     ___ftpack@arg:
   333                           	opt stack 0
   334  000021                     UARTInit@baudrate:
   335                           	opt stack 0
   336                           
   337                           ; 4 bytes @ 0x20
   338  000021                     	ds	1
   339  000022                     InitQEI@_MAXCNT:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x21
   343  000022                     	ds	1
   344  000023                     ??_delay_ms:
   345  000023                     ??_Buffer_Write:
   346  000023                     ??_Buffer_Read:
   347  000023                     ??_Buffer_GetCRC8:
   348                           
   349                           ; 0 bytes @ 0x22
   350  000023                     	ds	1
   351  000024                     InitQEI@_QEICON:
   352                           	opt stack 0
   353  000024                     ___ftpack@exp:
   354                           	opt stack 0
   355  000024                     delay_ms@i:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x23
   359  000024                     	ds	1
   360  000025                     ??_UARTInit:
   361  000025                     Buffer_Write@data:
   362                           	opt stack 0
   363  000025                     ___ftpack@sign:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x24
   367  000025                     	ds	1
   368  000026                     ??___ftpack:
   369  000026                     Buffer_Write@next:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x25
   373  000026                     	ds	1
   374  000027                     Buffer_Read@data:
   375                           	opt stack 0
   376  000027                     Buffer_GetCRC8@i:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x26
   380  000027                     	ds	1
   381  000028                     Buffer_GetCRC8@CRC:
   382                           	opt stack 0
   383  000028                     Package_AddData@p:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x27
   387  000028                     	ds	1
   388  000029                     ?___lwtoft:
   389                           	opt stack 0
   390  000029                     UARTInit@divisor:
   391                           	opt stack 0
   392  000029                     Package_Send@p:
   393                           	opt stack 0
   394  000029                     ___lwtoft@c:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x28
   398  000029                     	ds	1
   399  00002A                     Package_AddData@d:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x29
   403  00002A                     	ds	1
   404  00002B                     ??_Package_Send:
   405                           
   406                           ; 0 bytes @ 0x2A
   407  00002B                     	ds	1
   408  00002C                     ?___ftdiv:
   409                           	opt stack 0
   410  00002C                     ___ftdiv@f1:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0x2B
   414  00002C                     	ds	3
   415  00002F                     ___ftdiv@f2:
   416                           	opt stack 0
   417                           
   418                           ; 3 bytes @ 0x2E
   419  00002F                     	ds	3
   420  000032                     ??___ftdiv:
   421                           
   422                           ; 0 bytes @ 0x31
   423  000032                     	ds	3
   424  000035                     ___ftdiv@cntr:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x34
   428  000035                     	ds	1
   429  000036                     ___ftdiv@f3:
   430                           	opt stack 0
   431                           
   432                           ; 3 bytes @ 0x35
   433  000036                     	ds	3
   434  000039                     ___ftdiv@exp:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x38
   438  000039                     	ds	1
   439  00003A                     ___ftdiv@sign:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x39
   443  00003A                     	ds	1
   444  00003B                     ?___fttol:
   445                           	opt stack 0
   446  00003B                     ___fttol@f1:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0x3A
   450  00003B                     	ds	4
   451  00003F                     tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           
   459                           ; 0 bytes @ 0x3E
   460 ;;
   461 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   462 ;;
   463 ;; *************** function _main *****************
   464 ;; Defined at:
   465 ;;		line 85 in file "main.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  2   59[None  ] int 
   472 ;; Registers used:
   473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   479 ;;      Params:         0       0       0       0
   480 ;;      Locals:         0       0       0       0
   481 ;;      Temps:          0       0       0       0
   482 ;;      Totals:         0       0       0       0
   483 ;;Total ram usage:        0 bytes
   484 ;; Hardware stack levels required when called:    5
   485 ;; This function calls:
   486 ;;		_DCBrake_Catch
   487 ;;		_DCBrake_PWMInit
   488 ;;		_IR2110Disable
   489 ;;		_InitPCPWM
   490 ;;		_InitQEI
   491 ;;		_InputInit
   492 ;;		_Package_AddData
   493 ;;		_Package_Send
   494 ;;		_SetDCBrake_NominalVoltage
   495 ;;		_SetPWM1Duty
   496 ;;		_SetPWM2Duty
   497 ;;		_UARTAddressDetection_OFF
   498 ;;		_UARTInit
   499 ;;		_delay_ms
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text0
   506  000308                     __ptext0:
   507                           	opt stack 0
   508  000308                     _main:
   509                           	opt stack 26
   510                           
   511                           ;main.c: 88: UARTInit(921600);
   512                           
   513                           ;incstack = 0
   514  000308  0E00               	movlw	0
   515  00030A  6E21               	movwf	UARTInit@baudrate,c
   516  00030C  0E10               	movlw	16
   517  00030E  6E22               	movwf	UARTInit@baudrate+1,c
   518  000310  0E0E               	movlw	14
   519  000312  6E23               	movwf	UARTInit@baudrate+2,c
   520  000314  0E00               	movlw	0
   521  000316  6E24               	movwf	UARTInit@baudrate+3,c
   522  000318  EC25  F003         	call	_UARTInit	;wreg free
   523                           
   524                           ;main.c: 89: UARTAddressDetection_OFF();
   525  00031C  EC59  F006         	call	_UARTAddressDetection_OFF	;wreg free
   526                           
   527                           ;main.c: 92: InputInit();
   528  000320  EC56  F006         	call	_InputInit	;wreg free
   529                           
   530                           ;main.c: 95: DCBrake_PWMInit();
   531  000324  EC42  F006         	call	_DCBrake_PWMInit	;wreg free
   532                           
   533                           ;main.c: 97: SetDCBrake_NominalVoltage(24, 26);
   534  000328  0E00               	movlw	0
   535  00032A  0100               	movlb	0	; () banked
   536  00032C  6FBE               	movwf	(SetDCBrake_NominalVoltage@DCBrakeNominalVoltage+1)& (0+255),b
   537  00032E  0E18               	movlw	24
   538  000330  6FBD               	movwf	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage& (0+255),b
   539  000332  0E00               	movlw	0
   540  000334  0100               	movlb	0	; () banked
   541  000336  6FC0               	movwf	(SetDCBrake_NominalVoltage@HVSupplyVoltage+1)& (0+255),b
   542  000338  0E1A               	movlw	26
   543  00033A  6FBF               	movwf	SetDCBrake_NominalVoltage@HVSupplyVoltage& (0+255),b
   544  00033C  ECF3  F003         	call	_SetDCBrake_NominalVoltage	;wreg free
   545                           
   546                           ;main.c: 98: DCBrake_Catch();
   547  000340  EC5D  F006         	call	_DCBrake_Catch	;wreg free
   548                           
   549                           ;main.c: 100: InitPCPWM();
   550  000344  ECB5  F005         	call	_InitPCPWM	;wreg free
   551                           
   552                           ;main.c: 101: SetPWM1Duty(1023);
   553  000348  0E03               	movlw	3
   554  00034A  6E22               	movwf	SetPWM1Duty@_PDC0+1,c
   555  00034C  6821               	setf	SetPWM1Duty@_PDC0,c
   556  00034E  EC51  F006         	call	_SetPWM1Duty	;wreg free
   557                           
   558                           ;main.c: 102: SetPWM2Duty(1023);
   559  000352  0E03               	movlw	3
   560  000354  6E22               	movwf	SetPWM2Duty@_PDC1+1,c
   561  000356  6821               	setf	SetPWM2Duty@_PDC1,c
   562  000358  EC4C  F006         	call	_SetPWM2Duty	;wreg free
   563                           
   564                           ;main.c: 103: IR2110Disable();
   565  00035C  EC5B  F006         	call	_IR2110Disable	;wreg free
   566                           
   567                           ;main.c: 105: InitQEI(0b00000000 | 0b00011000 | 0b00000000, 0b00000000, 255);
   568  000360  0E00               	movlw	0
   569  000362  6E21               	movwf	InitQEI@_DFLTCON,c
   570  000364  0E00               	movlw	0
   571  000366  6E23               	movwf	InitQEI@_MAXCNT+1,c
   572  000368  6822               	setf	InitQEI@_MAXCNT,c
   573  00036A  0E18               	movlw	24
   574  00036C  ECD2  F005         	call	_InitQEI
   575                           
   576                           ;main.c: 107: Package_AddData(&in, fVersion[0]);
   577  000370  0E60               	movlw	low _in
   578  000372  6E28               	movwf	Package_AddData@p,c
   579  000374  0E00               	movlw	high _in
   580  000376  6E29               	movwf	Package_AddData@p+1,c
   581  000378  0E01               	movlw	low _fVersion
   582  00037A  6EF6               	movwf	tblptrl,c
   583  00037C                     	if	1	;There is more than 1 active tblptr byte
   584  00037C  0E03               	movlw	high _fVersion
   585  00037E  6EF7               	movwf	tblptrh,c
   586  000380                     	endif
   587  000380                     	if	0	;There are less than 3 active tblptr bytes
   588  000380                     	endif
   589  000380  0008               	tblrd		*
   590  000382  CFF5 F02A          	movff	tablat,Package_AddData@d
   591  000386  EC25  F006         	call	_Package_AddData	;wreg free
   592                           
   593                           ;main.c: 108: Package_AddData(&in, fVersion[1]);
   594  00038A  0E60               	movlw	low _in
   595  00038C  6E28               	movwf	Package_AddData@p,c
   596  00038E  0E00               	movlw	high _in
   597  000390  6E29               	movwf	Package_AddData@p+1,c
   598  000392  0E02               	movlw	low (_fVersion+1)
   599  000394  6EF6               	movwf	tblptrl,c
   600  000396  0E03               	movlw	high (_fVersion+1)
   601  000398  6EF7               	movwf	tblptrh,c
   602  00039A                     	if	0	;tblptru may be non-zero
   603  00039A                     	endif
   604  00039A                     	if	0	;tblptru may be non-zero
   605  00039A                     	endif
   606  00039A  0008               	tblrd		*
   607  00039C  CFF5 F02A          	movff	tablat,Package_AddData@d
   608  0003A0  EC25  F006         	call	_Package_AddData	;wreg free
   609                           
   610                           ;main.c: 109: Package_AddData(&in, fVersion[2]);
   611  0003A4  0E60               	movlw	low _in
   612  0003A6  6E28               	movwf	Package_AddData@p,c
   613  0003A8  0E00               	movlw	high _in
   614  0003AA  6E29               	movwf	Package_AddData@p+1,c
   615  0003AC  0E03               	movlw	low (_fVersion+2)
   616  0003AE  6EF6               	movwf	tblptrl,c
   617  0003B0  0E03               	movlw	high (_fVersion+2)
   618  0003B2  6EF7               	movwf	tblptrh,c
   619  0003B4                     	if	0	;tblptru may be non-zero
   620  0003B4                     	endif
   621  0003B4                     	if	0	;tblptru may be non-zero
   622  0003B4                     	endif
   623  0003B4  0008               	tblrd		*
   624  0003B6  CFF5 F02A          	movff	tablat,Package_AddData@d
   625  0003BA  EC25  F006         	call	_Package_AddData	;wreg free
   626                           
   627                           ;main.c: 110: Package_AddData(&in, fVersion[3]);
   628  0003BE  0E60               	movlw	low _in
   629  0003C0  6E28               	movwf	Package_AddData@p,c
   630  0003C2  0E00               	movlw	high _in
   631  0003C4  6E29               	movwf	Package_AddData@p+1,c
   632  0003C6  0E04               	movlw	low (_fVersion+3)
   633  0003C8  6EF6               	movwf	tblptrl,c
   634  0003CA  0E03               	movlw	high (_fVersion+3)
   635  0003CC  6EF7               	movwf	tblptrh,c
   636  0003CE                     	if	0	;tblptru may be non-zero
   637  0003CE                     	endif
   638  0003CE                     	if	0	;tblptru may be non-zero
   639  0003CE                     	endif
   640  0003CE  0008               	tblrd		*
   641  0003D0  CFF5 F02A          	movff	tablat,Package_AddData@d
   642  0003D4  EC25  F006         	call	_Package_AddData	;wreg free
   643                           
   644                           ;main.c: 112: Package_Send(&in);
   645  0003D8  0E60               	movlw	low _in
   646  0003DA  6E29               	movwf	Package_Send@p,c
   647  0003DC  0E00               	movlw	high _in
   648  0003DE  6E2A               	movwf	Package_Send@p+1,c
   649  0003E0  EC83  F004         	call	_Package_Send	;wreg free
   650                           
   651                           ;main.c: 114: delay_ms(100);
   652  0003E4  0E00               	movlw	0
   653  0003E6  6E22               	movwf	delay_ms@delay+1,c
   654  0003E8  0E64               	movlw	100
   655  0003EA  6E21               	movwf	delay_ms@delay,c
   656  0003EC  ECFD  F005         	call	_delay_ms	;wreg free
   657                           
   658                           ;main.c: 116: Package_AddData(&out, fVersion[0]);
   659  0003F0  0E87               	movlw	low _out
   660  0003F2  6E28               	movwf	Package_AddData@p,c
   661  0003F4  0E00               	movlw	high _out
   662  0003F6  6E29               	movwf	Package_AddData@p+1,c
   663  0003F8  0E01               	movlw	low _fVersion
   664  0003FA  6EF6               	movwf	tblptrl,c
   665  0003FC                     	if	1	;There is more than 1 active tblptr byte
   666  0003FC  0E03               	movlw	high _fVersion
   667  0003FE  6EF7               	movwf	tblptrh,c
   668  000400                     	endif
   669  000400                     	if	0	;There are less than 3 active tblptr bytes
   670  000400                     	endif
   671  000400  0008               	tblrd		*
   672  000402  CFF5 F02A          	movff	tablat,Package_AddData@d
   673  000406  EC25  F006         	call	_Package_AddData	;wreg free
   674                           
   675                           ;main.c: 117: Package_AddData(&out, fVersion[1]);
   676  00040A  0E87               	movlw	low _out
   677  00040C  6E28               	movwf	Package_AddData@p,c
   678  00040E  0E00               	movlw	high _out
   679  000410  6E29               	movwf	Package_AddData@p+1,c
   680  000412  0E02               	movlw	low (_fVersion+1)
   681  000414  6EF6               	movwf	tblptrl,c
   682  000416  0E03               	movlw	high (_fVersion+1)
   683  000418  6EF7               	movwf	tblptrh,c
   684  00041A                     	if	0	;tblptru may be non-zero
   685  00041A                     	endif
   686  00041A                     	if	0	;tblptru may be non-zero
   687  00041A                     	endif
   688  00041A  0008               	tblrd		*
   689  00041C  CFF5 F02A          	movff	tablat,Package_AddData@d
   690  000420  EC25  F006         	call	_Package_AddData	;wreg free
   691                           
   692                           ;main.c: 119: Package_Send(&out);
   693  000424  0E87               	movlw	low _out
   694  000426  6E29               	movwf	Package_Send@p,c
   695  000428  0E00               	movlw	high _out
   696  00042A  6E2A               	movwf	Package_Send@p+1,c
   697  00042C  EC83  F004         	call	_Package_Send	;wreg free
   698                           
   699                           ;main.c: 121: RCONbits.IPEN = 1;
   700  000430  8ED0               	bsf	4048,7,c	;volatile
   701                           
   702                           ;main.c: 122: INTCONbits.GIEH = 1;
   703  000432  8EF2               	bsf	intcon,7,c	;volatile
   704                           
   705                           ;main.c: 123: INTCONbits.GIEL = 1;
   706  000434  8CF2               	bsf	intcon,6,c	;volatile
   707                           
   708                           ;main.c: 125: delay_ms(1);
   709  000436  0E00               	movlw	0
   710  000438  6E22               	movwf	delay_ms@delay+1,c
   711  00043A  0E01               	movlw	1
   712  00043C  6E21               	movwf	delay_ms@delay,c
   713  00043E  ECFD  F005         	call	_delay_ms	;wreg free
   714  000442  D7FF               	goto	l61
   715                           
   716                           ;main.c: 131: }
   717                           ;main.c: 133: return 0;
   718                           ;	Return value of _main is never used
   719  000444  EF57  F000         	goto	start
   720  000448                     __end_of_main:
   721                           	opt stack 0
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           intcon	equ	0xFF2
   727                           postinc0	equ	0xFEE
   728                           postdec1	equ	0xFE5
   729                           fsr1l	equ	0xFE1
   730                           
   731 ;; *************** function _delay_ms *****************
   732 ;; Defined at:
   733 ;;		line 78 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  delay           2   32[COMRAM] unsigned int 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  i               2   35[COMRAM] int 
   738 ;; Return value:  Size  Location     Type
   739 ;;		None               void
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   747 ;;      Params:         2       0       0       0
   748 ;;      Locals:         2       0       0       0
   749 ;;      Temps:          1       0       0       0
   750 ;;      Totals:         5       0       0       0
   751 ;;Total ram usage:        5 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    2
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text1
   762  000BFA                     __ptext1:
   763                           	opt stack 0
   764  000BFA                     _delay_ms:
   765                           	opt stack 28
   766                           
   767                           ;main.c: 80: int i;
   768                           ;main.c: 81: for (i = 0; i < delay; i++)
   769                           
   770                           ;incstack = 0
   771  000BFA  0E00               	movlw	0
   772  000BFC  6E25               	movwf	delay_ms@i+1,c
   773  000BFE  0E00               	movlw	0
   774  000C00  6E24               	movwf	delay_ms@i,c
   775  000C02  D009               	goto	l54
   776  000C04                     l1480:
   777                           
   778                           ;main.c: 82: _delay((unsigned long)((1)*(40000000/4000.0)));
   779  000C04  0E0D               	movlw	13
   780  000C06  6E23               	movwf	??_delay_ms& (0+255),c
   781  000C08  0EFC               	movlw	252
   782  000C0A                     u647:
   783  000C0A  2EE8               	decfsz	wreg,f,c
   784  000C0C  D7FE               	goto	u647
   785  000C0E  2E23               	decfsz	??_delay_ms& (0+255),f,c
   786  000C10  D7FC               	goto	u647
   787  000C12  4A24               	infsnz	delay_ms@i,f,c
   788  000C14  2A25               	incf	delay_ms@i+1,f,c
   789  000C16                     l54:
   790  000C16  5021               	movf	delay_ms@delay,w,c
   791  000C18  5C24               	subwf	delay_ms@i,w,c
   792  000C1A  5022               	movf	delay_ms@delay+1,w,c
   793  000C1C  5825               	subwfb	delay_ms@i+1,w,c
   794  000C1E  A0D8               	btfss	status,0,c
   795  000C20  D7F1               	goto	l1480
   796  000C22  0012               	return		;funcret
   797  000C24                     __end_of_delay_ms:
   798                           	opt stack 0
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           intcon	equ	0xFF2
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           postdec1	equ	0xFE5
   807                           fsr1l	equ	0xFE1
   808                           status	equ	0xFD8
   809                           
   810 ;; *************** function _UARTInit *****************
   811 ;; Defined at:
   812 ;;		line 8 in file "uart.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  baudrate        4   32[COMRAM] unsigned long 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  divisor         2   40[COMRAM] unsigned int 
   817 ;; Return value:  Size  Location     Type
   818 ;;		None               void
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   826 ;;      Params:         4       0       0       0
   827 ;;      Locals:         2       0       0       0
   828 ;;      Temps:          4       0       0       0
   829 ;;      Totals:        10       0       0       0
   830 ;;Total ram usage:       10 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    2
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text2
   841  00064A                     __ptext2:
   842                           	opt stack 0
   843  00064A                     _UARTInit:
   844                           	opt stack 28
   845                           
   846                           ;uart.c: 10: unsigned int divisor;
   847                           ;uart.c: 12: TRISCbits.RC6 = 1;
   848                           
   849                           ;incstack = 0
   850  00064A  8C94               	bsf	3988,6,c	;volatile
   851                           
   852                           ;uart.c: 13: TRISCbits.RC7 = 1;
   853  00064C  8E94               	bsf	3988,7,c	;volatile
   854                           
   855                           ;uart.c: 16: TRISDbits.RD4 = 0;
   856  00064E  9895               	bcf	3989,4,c	;volatile
   857                           
   858                           ;uart.c: 17: PORTDbits.RD4 = 0;
   859  000650  9883               	bcf	3971,4,c	;volatile
   860                           
   861                           ;uart.c: 19: TXSTA = 0b00100110;
   862  000652  0E26               	movlw	38
   863  000654  6EAC               	movwf	4012,c	;volatile
   864                           
   865                           ;uart.c: 20: RCSTA = 0b11010000;
   866  000656  0ED0               	movlw	208
   867  000658  6EAB               	movwf	4011,c	;volatile
   868                           
   869                           ;uart.c: 22: BAUDCTLbits.BRG16 = 1;
   870  00065A  86AA               	bsf	4010,3,c	;volatile
   871                           
   872                           ;uart.c: 23: BAUDCTLbits.WUE = 0;
   873  00065C  92AA               	bcf	4010,1,c	;volatile
   874                           
   875                           ;uart.c: 24: BAUDCONbits.ABDEN = 0;
   876  00065E  90AA               	bcf	4010,0,c	;volatile
   877                           
   878                           ;uart.c: 26: switch (baudrate)
   879  000660  D015               	goto	l1506
   880  000662                     l1494:
   881                           
   882                           ;uart.c: 29: divisor = 1040;
   883  000662  0E04               	movlw	4
   884  000664  6E2A               	movwf	UARTInit@divisor+1,c
   885  000666  0E10               	movlw	16
   886  000668  D00F               	goto	L4
   887  00066A                     l1496:
   888                           
   889                           ;uart.c: 32: divisor = 520;
   890  00066A  0E02               	movlw	2
   891  00066C  6E2A               	movwf	UARTInit@divisor+1,c
   892  00066E  0E08               	movlw	8
   893  000670  D00B               	goto	L4
   894  000672                     l1498:
   895                           
   896                           ;uart.c: 35: divisor = 172;
   897  000672  0E00               	movlw	0
   898  000674  6E2A               	movwf	UARTInit@divisor+1,c
   899  000676  0EAC               	movlw	172
   900  000678  D007               	goto	L4
   901  00067A                     l1500:
   902                           
   903                           ;uart.c: 38: divisor = 86;
   904  00067A  0E00               	movlw	0
   905  00067C  6E2A               	movwf	UARTInit@divisor+1,c
   906  00067E  0E56               	movlw	86
   907  000680  D003               	goto	L4
   908  000682                     l1502:
   909                           
   910                           ;uart.c: 41: divisor = 10;
   911  000682  0E00               	movlw	0
   912  000684  6E2A               	movwf	UARTInit@divisor+1,c
   913  000686  0E0A               	movlw	10
   914  000688                     L4:
   915  000688  6E29               	movwf	UARTInit@divisor,c
   916                           
   917                           ;uart.c: 43: }
   918                           
   919                           ;uart.c: 42: break;
   920  00068A  D043               	goto	l96
   921  00068C                     l1506:
   922  00068C  C021  F025         	movff	UARTInit@baudrate,??_UARTInit
   923  000690  C022  F026         	movff	UARTInit@baudrate+1,??_UARTInit+1
   924  000694  C023  F027         	movff	UARTInit@baudrate+2,??_UARTInit+2
   925  000698  C024  F028         	movff	UARTInit@baudrate+3,??_UARTInit+3
   926                           
   927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
   928                           ; Switch size 1, requested type "space"
   929                           ; Number of cases is 1, Range of values is 0 to 0
   930                           ; switch strategies available:
   931                           ; Name         Instructions Cycles
   932                           ; simple_byte            4     3 (average)
   933                           ;	Chosen strategy is simple_byte
   934  00069C  5028               	movf	??_UARTInit+3,w,c
   935  00069E  0A00               	xorlw	0	; case 0
   936  0006A0  B4D8               	btfsc	status,2,c
   937  0006A2  D02D               	goto	l1862
   938  0006A4  D036               	goto	l96
   939  0006A6                     l1856:
   940                           
   941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   942                           ; Switch size 1, requested type "space"
   943                           ; Number of cases is 3, Range of values is 37 to 225
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte           10     6 (average)
   947                           ;	Chosen strategy is simple_byte
   948  0006A6  5026               	movf	??_UARTInit+1,w,c
   949  0006A8  0A25               	xorlw	37	; case 37
   950  0006AA  B4D8               	btfsc	status,2,c
   951  0006AC  D007               	goto	l1864
   952  0006AE  0A6E               	xorlw	110	; case 75
   953  0006B0  B4D8               	btfsc	status,2,c
   954  0006B2  D009               	goto	l1866
   955  0006B4  0AAA               	xorlw	170	; case 225
   956  0006B6  B4D8               	btfsc	status,2,c
   957  0006B8  D00B               	goto	l1868
   958  0006BA  D02B               	goto	l96
   959  0006BC                     l1864:
   960                           
   961                           ; Switch size 1, requested type "space"
   962                           ; Number of cases is 1, Range of values is 128 to 128
   963                           ; switch strategies available:
   964                           ; Name         Instructions Cycles
   965                           ; simple_byte            4     3 (average)
   966                           ;	Chosen strategy is simple_byte
   967  0006BC  5025               	movf	??_UARTInit,w,c
   968  0006BE  0A80               	xorlw	128	; case 128
   969  0006C0  B4D8               	btfsc	status,2,c
   970  0006C2  D7CF               	goto	l1494
   971  0006C4  D026               	goto	l96
   972  0006C6                     l1866:
   973                           
   974                           ; Switch size 1, requested type "space"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ;	Chosen strategy is simple_byte
   980  0006C6  5025               	movf	??_UARTInit,w,c
   981  0006C8  0A00               	xorlw	0	; case 0
   982  0006CA  B4D8               	btfsc	status,2,c
   983  0006CC  D7CE               	goto	l1496
   984  0006CE  D021               	goto	l96
   985  0006D0                     l1868:
   986                           
   987                           ; Switch size 1, requested type "space"
   988                           ; Number of cases is 1, Range of values is 0 to 0
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ;	Chosen strategy is simple_byte
   993  0006D0  5025               	movf	??_UARTInit,w,c
   994  0006D2  0A00               	xorlw	0	; case 0
   995  0006D4  B4D8               	btfsc	status,2,c
   996  0006D6  D7CD               	goto	l1498
   997  0006D8  D01C               	goto	l96
   998  0006DA                     l1858:
   999                           
  1000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1001                           ; Switch size 1, requested type "space"
  1002                           ; Number of cases is 1, Range of values is 194 to 194
  1003                           ; switch strategies available:
  1004                           ; Name         Instructions Cycles
  1005                           ; simple_byte            4     3 (average)
  1006                           ;	Chosen strategy is simple_byte
  1007  0006DA  5026               	movf	??_UARTInit+1,w,c
  1008  0006DC  0AC2               	xorlw	194	; case 194
  1009  0006DE  A4D8               	btfss	status,2,c
  1010  0006E0  D018               	goto	l96
  1011                           
  1012                           ; Switch size 1, requested type "space"
  1013                           ; Number of cases is 1, Range of values is 0 to 0
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte            4     3 (average)
  1017                           ;	Chosen strategy is simple_byte
  1018  0006E2  5025               	movf	??_UARTInit,w,c
  1019  0006E4  0A00               	xorlw	0	; case 0
  1020  0006E6  B4D8               	btfsc	status,2,c
  1021  0006E8  D7C8               	goto	l1500
  1022  0006EA  D013               	goto	l96
  1023  0006EC                     l1860:
  1024                           
  1025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1026                           ; Switch size 1, requested type "space"
  1027                           ; Number of cases is 1, Range of values is 16 to 16
  1028                           ; switch strategies available:
  1029                           ; Name         Instructions Cycles
  1030                           ; simple_byte            4     3 (average)
  1031                           ;	Chosen strategy is simple_byte
  1032  0006EC  5026               	movf	??_UARTInit+1,w,c
  1033  0006EE  0A10               	xorlw	16	; case 16
  1034  0006F0  A4D8               	btfss	status,2,c
  1035  0006F2  D00F               	goto	l96
  1036                           
  1037                           ; Switch size 1, requested type "space"
  1038                           ; Number of cases is 1, Range of values is 0 to 0
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte            4     3 (average)
  1042                           ;	Chosen strategy is simple_byte
  1043  0006F4  5025               	movf	??_UARTInit,w,c
  1044  0006F6  0A00               	xorlw	0	; case 0
  1045  0006F8  B4D8               	btfsc	status,2,c
  1046  0006FA  D7C3               	goto	l1502
  1047  0006FC  D00A               	goto	l96
  1048  0006FE                     l1862:
  1049                           
  1050                           ; Switch size 1, requested type "space"
  1051                           ; Number of cases is 3, Range of values is 0 to 14
  1052                           ; switch strategies available:
  1053                           ; Name         Instructions Cycles
  1054                           ; simple_byte           10     6 (average)
  1055                           ;	Chosen strategy is simple_byte
  1056  0006FE  5027               	movf	??_UARTInit+2,w,c
  1057  000700  0A00               	xorlw	0	; case 0
  1058  000702  B4D8               	btfsc	status,2,c
  1059  000704  D7D0               	goto	l1856
  1060  000706  0A01               	xorlw	1	; case 1
  1061  000708  B4D8               	btfsc	status,2,c
  1062  00070A  D7E7               	goto	l1858
  1063  00070C  0A0F               	xorlw	15	; case 14
  1064  00070E  B4D8               	btfsc	status,2,c
  1065  000710  D7ED               	goto	l1860
  1066  000712                     l96:
  1067                           
  1068                           ;uart.c: 45: SPBRG = divisor;
  1069  000712  C029  FFAF         	movff	UARTInit@divisor,4015	;volatile
  1070                           
  1071                           ;uart.c: 46: SPBRGH = divisor >> 8;
  1072  000716  502A               	movf	UARTInit@divisor+1,w,c
  1073  000718  6EB0               	movwf	4016,c	;volatile
  1074                           
  1075                           ;uart.c: 48: IPR1bits.RCIP = 0;
  1076  00071A  9A9F               	bcf	3999,5,c	;volatile
  1077                           
  1078                           ;uart.c: 49: PIE1bits.RCIE = 1;
  1079  00071C  8A9D               	bsf	3997,5,c	;volatile
  1080  00071E  0012               	return		;funcret
  1081  000720                     __end_of_UARTInit:
  1082                           	opt stack 0
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           intcon	equ	0xFF2
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function _UARTAddressDetection_OFF *****************
  1095 ;; Defined at:
  1096 ;;		line 95 in file "uart.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;		None               void
  1103 ;; Registers used:
  1104 ;;		None
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1110 ;;      Params:         0       0       0       0
  1111 ;;      Locals:         0       0       0       0
  1112 ;;      Temps:          0       0       0       0
  1113 ;;      Totals:         0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    2
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text3
  1125  000CB2                     __ptext3:
  1126                           	opt stack 0
  1127  000CB2                     _UARTAddressDetection_OFF:
  1128                           	opt stack 28
  1129                           
  1130                           ;uart.c: 97: RCSTAbits.ADDEN = 0;
  1131                           
  1132                           ;incstack = 0
  1133  000CB2  96AB               	bcf	4011,3,c	;volatile
  1134  000CB4  0012               	return		;funcret
  1135  000CB6                     __end_of_UARTAddressDetection_OFF:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           intcon	equ	0xFF2
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec1	equ	0xFE5
  1145                           fsr1l	equ	0xFE1
  1146                           status	equ	0xFD8
  1147                           
  1148 ;; *************** function _SetPWM2Duty *****************
  1149 ;; Defined at:
  1150 ;;		line 82 in file "pcpwm.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  _PDC1           2   32[COMRAM] unsigned int 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;		None               void
  1157 ;; Registers used:
  1158 ;;		wreg, status,2
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1164 ;;      Params:         2       0       0       0
  1165 ;;      Locals:         0       0       0       0
  1166 ;;      Temps:          0       0       0       0
  1167 ;;      Totals:         2       0       0       0
  1168 ;;Total ram usage:        2 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text4
  1179  000C98                     __ptext4:
  1180                           	opt stack 0
  1181  000C98                     _SetPWM2Duty:
  1182                           	opt stack 28
  1183                           
  1184                           ;pcpwm.c: 84: PDC0L = _PDC1 & 0x00ff;
  1185                           
  1186                           ;incstack = 0
  1187  000C98  C021  FF79         	movff	SetPWM2Duty@_PDC1,3961	;volatile
  1188                           
  1189                           ;pcpwm.c: 85: PDC0H = _PDC1 >> 8;
  1190  000C9C  5022               	movf	SetPWM2Duty@_PDC1+1,w,c
  1191  000C9E  6E78               	movwf	3960,c	;volatile
  1192  000CA0  0012               	return		;funcret
  1193  000CA2                     __end_of_SetPWM2Duty:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           intcon	equ	0xFF2
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           postdec1	equ	0xFE5
  1203                           fsr1l	equ	0xFE1
  1204                           status	equ	0xFD8
  1205                           
  1206 ;; *************** function _SetPWM1Duty *****************
  1207 ;; Defined at:
  1208 ;;		line 72 in file "pcpwm.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  _PDC0           2   32[COMRAM] unsigned int 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;		None               void
  1215 ;; Registers used:
  1216 ;;		wreg, status,2
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1222 ;;      Params:         2       0       0       0
  1223 ;;      Locals:         0       0       0       0
  1224 ;;      Temps:          0       0       0       0
  1225 ;;      Totals:         2       0       0       0
  1226 ;;Total ram usage:        2 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    2
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text5
  1237  000CA2                     __ptext5:
  1238                           	opt stack 0
  1239  000CA2                     _SetPWM1Duty:
  1240                           	opt stack 28
  1241                           
  1242                           ;pcpwm.c: 74: PDC0L = _PDC0 & 0x00ff;
  1243                           
  1244                           ;incstack = 0
  1245  000CA2  C021  FF79         	movff	SetPWM1Duty@_PDC0,3961	;volatile
  1246                           
  1247                           ;pcpwm.c: 75: PDC0H = _PDC0 >> 8;
  1248  000CA6  5022               	movf	SetPWM1Duty@_PDC0+1,w,c
  1249  000CA8  6E78               	movwf	3960,c	;volatile
  1250  000CAA  0012               	return		;funcret
  1251  000CAC                     __end_of_SetPWM1Duty:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           intcon	equ	0xFF2
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           postdec1	equ	0xFE5
  1261                           fsr1l	equ	0xFE1
  1262                           status	equ	0xFD8
  1263                           
  1264 ;; *************** function _SetDCBrake_NominalVoltage *****************
  1265 ;; Defined at:
  1266 ;;		line 51 in file "dc_brake.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  DCBrakeNomin    2   15[BANK0 ] unsigned short 
  1269 ;;  HVSupplyVolt    2   17[BANK0 ] unsigned short 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  sPWMQuantum     3   19[BANK0 ] float 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2   15[BANK0 ] int 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1281 ;;      Params:         0       4       0       0
  1282 ;;      Locals:         0       3       0       0
  1283 ;;      Temps:          0       0       0       0
  1284 ;;      Totals:         0       7       0       0
  1285 ;;Total ram usage:        7 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    4
  1288 ;; This function calls:
  1289 ;;		_SetDCBrake_PWMDuty
  1290 ;;		___ftdiv
  1291 ;;		___fttol
  1292 ;;		___lwtoft
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text6
  1299  0007E6                     __ptext6:
  1300                           	opt stack 0
  1301  0007E6                     _SetDCBrake_NominalVoltage:
  1302                           	opt stack 26
  1303                           
  1304                           ;dc_brake.c: 53: if (DCBrakeNominalVoltage >= HVSupplyVoltage)
  1305                           
  1306                           ;incstack = 0
  1307  0007E6  0100               	movlb	0	; () banked
  1308  0007E8  51BF               	movf	SetDCBrake_NominalVoltage@HVSupplyVoltage& (0+255),w,b
  1309  0007EA  0100               	movlb	0	; () banked
  1310  0007EC  5DBD               	subwf	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage& (0+255),w,b
  1311  0007EE  0100               	movlb	0	; () banked
  1312  0007F0  51C0               	movf	(SetDCBrake_NominalVoltage@HVSupplyVoltage+1)& (0+255),w,b
  1313  0007F2  0100               	movlb	0	; () banked
  1314  0007F4  59BE               	subwfb	(SetDCBrake_NominalVoltage@DCBrakeNominalVoltage+1)& (0+255),w,b
  1315  0007F6  B0D8               	btfsc	status,0,c
  1316  0007F8  D03F               	goto	l218
  1317  0007FA  D001               	goto	l1562
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;dc_brake.c: 54: return 1;
  1321                           ;	Return value of _SetDCBrake_NominalVoltage is never used
  1322  0007FC  D03D               	goto	l218
  1323  0007FE                     l1562:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;dc_brake.c: 56: float sPWMQuantum = HVSupplyVoltage / 512.0;
  1327  0007FE  C0BF  F029         	movff	SetDCBrake_NominalVoltage@HVSupplyVoltage,___lwtoft@c
  1328  000802  C0C0  F02A         	movff	SetDCBrake_NominalVoltage@HVSupplyVoltage+1,___lwtoft@c+1
  1329  000806  EC12  F006         	call	___lwtoft	;wreg free
  1330  00080A  C029  F02C         	movff	?___lwtoft,___ftdiv@f1
  1331  00080E  C02A  F02D         	movff	?___lwtoft+1,___ftdiv@f1+1
  1332  000812  C02B  F02E         	movff	?___lwtoft+2,___ftdiv@f1+2
  1333  000816  0E00               	movlw	0
  1334  000818  6E2F               	movwf	___ftdiv@f2,c
  1335  00081A  0E00               	movlw	0
  1336  00081C  6E30               	movwf	___ftdiv@f2+1,c
  1337  00081E  0E44               	movlw	68
  1338  000820  6E31               	movwf	___ftdiv@f2+2,c
  1339  000822  ECB4  F002         	call	___ftdiv	;wreg free
  1340  000826  C02C  F0C1         	movff	?___ftdiv,SetDCBrake_NominalVoltage@sPWMQuantum
  1341  00082A  C02D  F0C2         	movff	?___ftdiv+1,SetDCBrake_NominalVoltage@sPWMQuantum+1
  1342  00082E  C02E  F0C3         	movff	?___ftdiv+2,SetDCBrake_NominalVoltage@sPWMQuantum+2
  1343                           
  1344                           ;dc_brake.c: 57: SetDCBrake_PWMDuty(DCBrakeNominalVoltage / sPWMQuantum);
  1345  000832  C0C1  F02F         	movff	SetDCBrake_NominalVoltage@sPWMQuantum,___ftdiv@f2
  1346  000836  C0C2  F030         	movff	SetDCBrake_NominalVoltage@sPWMQuantum+1,___ftdiv@f2+1
  1347  00083A  C0C3  F031         	movff	SetDCBrake_NominalVoltage@sPWMQuantum+2,___ftdiv@f2+2
  1348  00083E  C0BD  F029         	movff	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage,___lwtoft@c
  1349  000842  C0BE  F02A         	movff	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage+1,___lwtoft@c+1
  1350  000846  EC12  F006         	call	___lwtoft	;wreg free
  1351  00084A  C029  F02C         	movff	?___lwtoft,___ftdiv@f1
  1352  00084E  C02A  F02D         	movff	?___lwtoft+1,___ftdiv@f1+1
  1353  000852  C02B  F02E         	movff	?___lwtoft+2,___ftdiv@f1+2
  1354  000856  ECB4  F002         	call	___ftdiv	;wreg free
  1355  00085A  C02C  F03B         	movff	?___ftdiv,___fttol@f1
  1356  00085E  C02D  F03C         	movff	?___ftdiv+1,___fttol@f1+1
  1357  000862  C02E  F03D         	movff	?___ftdiv+2,___fttol@f1+2
  1358  000866  EC24  F002         	call	___fttol	;wreg free
  1359  00086A  C03B  F0B9         	movff	?___fttol,SetDCBrake_PWMDuty@duty
  1360  00086E  C03C  F0BA         	movff	?___fttol+1,SetDCBrake_PWMDuty@duty+1
  1361  000872  EC32  F005         	call	_SetDCBrake_PWMDuty	;wreg free
  1362  000876  D000               	goto	l218
  1363  000878                     l218:
  1364  000878  0012               	return		;funcret
  1365  00087A                     __end_of_SetDCBrake_NominalVoltage:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           intcon	equ	0xFF2
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           postdec1	equ	0xFE5
  1375                           fsr1l	equ	0xFE1
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function ___lwtoft *****************
  1379 ;; Defined at:
  1380 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  c               2   40[COMRAM] unsigned int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  3   40[COMRAM] float 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1394 ;;      Params:         3       0       0       0
  1395 ;;      Locals:         0       0       0       0
  1396 ;;      Temps:          0       0       0       0
  1397 ;;      Totals:         3       0       0       0
  1398 ;;Total ram usage:        3 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    3
  1401 ;; This function calls:
  1402 ;;		___ftpack
  1403 ;; This function is called by:
  1404 ;;		_SetDCBrake_NominalVoltage
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text7
  1409  000C24                     __ptext7:
  1410                           	opt stack 0
  1411  000C24                     ___lwtoft:
  1412                           	opt stack 26
  1413                           
  1414                           ;incstack = 0
  1415  000C24  C029  F021         	movff	___lwtoft@c,___ftpack@arg
  1416  000C28  C02A  F022         	movff	___lwtoft@c+1,___ftpack@arg+1
  1417  000C2C  6A23               	clrf	___ftpack@arg+2,c
  1418  000C2E  0E8E               	movlw	142
  1419  000C30  6E24               	movwf	___ftpack@exp,c
  1420  000C32  0E00               	movlw	0
  1421  000C34  6E25               	movwf	___ftpack@sign,c
  1422  000C36  EC90  F003         	call	___ftpack	;wreg free
  1423  000C3A  C021  F029         	movff	?___ftpack,?___lwtoft
  1424  000C3E  C022  F02A         	movff	?___ftpack+1,?___lwtoft+1
  1425  000C42  C023  F02B         	movff	?___ftpack+2,?___lwtoft+2
  1426  000C46  D000               	goto	l822
  1427  000C48                     l822:
  1428  000C48  0012               	return		;funcret
  1429  000C4A                     __end_of___lwtoft:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           intcon	equ	0xFF2
  1436                           postinc0	equ	0xFEE
  1437                           wreg	equ	0xFE8
  1438                           postdec1	equ	0xFE5
  1439                           fsr1l	equ	0xFE1
  1440                           status	equ	0xFD8
  1441                           
  1442 ;; *************** function ___fttol *****************
  1443 ;; Defined at:
  1444 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  f1              3   58[COMRAM] float 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  lval            4    6[BANK0 ] unsigned long 
  1449 ;;  exp1            1   10[BANK0 ] unsigned char 
  1450 ;;  sign1           1    5[BANK0 ] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  4   58[COMRAM] long 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1460 ;;      Params:         4       0       0       0
  1461 ;;      Locals:         0       6       0       0
  1462 ;;      Temps:          0       5       0       0
  1463 ;;      Totals:         4      11       0       0
  1464 ;;Total ram usage:       15 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    2
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_SetDCBrake_NominalVoltage
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text8
  1475  000448                     __ptext8:
  1476                           	opt stack 0
  1477  000448                     ___fttol:
  1478                           	opt stack 27
  1479                           
  1480                           ;incstack = 0
  1481  000448  C03D  F0AE         	movff	___fttol@f1+2,??___fttol
  1482  00044C  0100               	movlb	0	; () banked
  1483  00044E  6BAF               	clrf	(??___fttol+1)& (0+255),b
  1484  000450  6BB0               	clrf	(??___fttol+2)& (0+255),b
  1485  000452  343C               	rlcf	___fttol@f1+1,w,c
  1486  000454  0100               	movlb	0	; () banked
  1487  000456  37AE               	rlcf	??___fttol& (0+255),f,b
  1488  000458  E301               	bnc	u531
  1489  00045A  81AF               	bsf	(??___fttol+1)& (0+255),0,b
  1490  00045C                     u531:
  1491  00045C  0100               	movlb	0	; () banked
  1492  00045E  51AE               	movf	??___fttol& (0+255),w,b
  1493  000460  0100               	movlb	0	; () banked
  1494  000462  6FB8               	movwf	___fttol@exp1& (0+255),b
  1495  000464  0100               	movlb	0	; () banked
  1496  000466  51B8               	movf	___fttol@exp1& (0+255),w,b
  1497  000468  A4D8               	btfss	status,2,c
  1498  00046A  D002               	goto	l1434
  1499  00046C  D04A               	goto	l1458
  1500                           
  1501                           ; BSR set to: 0
  1502                           
  1503                           ; BSR set to: 0
  1504  00046E  D07B               	goto	l693
  1505  000470                     l1434:
  1506                           
  1507                           ; BSR set to: 0
  1508  000470  0E17               	movlw	23
  1509  000472  0100               	movlb	0	; () banked
  1510  000474  6FAE               	movwf	??___fttol& (0+255),b
  1511  000476  C03B  F0AF         	movff	___fttol@f1,??___fttol+1
  1512  00047A  C03C  F0B0         	movff	___fttol@f1+1,??___fttol+2
  1513  00047E  C03D  F0B1         	movff	___fttol@f1+2,??___fttol+3
  1514  000482  0100               	movlb	0	; () banked
  1515  000484  29AE               	incf	??___fttol& (0+255),w,b
  1516  000486  0100               	movlb	0	; () banked
  1517  000488  6FB2               	movwf	(??___fttol+4)& (0+255),b
  1518  00048A  D005               	goto	u550
  1519  00048C                     u555:
  1520  00048C  0100               	movlb	0	; () banked
  1521  00048E  90D8               	bcf	status,0,c
  1522  000490  33B1               	rrcf	(??___fttol+3)& (0+255),f,b
  1523  000492  33B0               	rrcf	(??___fttol+2)& (0+255),f,b
  1524  000494  33AF               	rrcf	(??___fttol+1)& (0+255),f,b
  1525  000496                     u550:
  1526  000496  0100               	movlb	0	; () banked
  1527  000498  2FB2               	decfsz	(??___fttol+4)& (0+255),f,b
  1528  00049A  D7F8               	goto	u555
  1529  00049C  0100               	movlb	0	; () banked
  1530  00049E  51AF               	movf	(??___fttol+1)& (0+255),w,b
  1531  0004A0  0100               	movlb	0	; () banked
  1532  0004A2  6FB3               	movwf	___fttol@sign1& (0+255),b
  1533                           
  1534                           ; BSR set to: 0
  1535  0004A4  8E3C               	bsf	___fttol@f1+1,7,c
  1536                           
  1537                           ; BSR set to: 0
  1538  0004A6  0EFF               	movlw	255
  1539  0004A8  163B               	andwf	___fttol@f1,f,c
  1540  0004AA  0EFF               	movlw	255
  1541  0004AC  163C               	andwf	___fttol@f1+1,f,c
  1542  0004AE  0E00               	movlw	0
  1543  0004B0  163D               	andwf	___fttol@f1+2,f,c
  1544                           
  1545                           ; BSR set to: 0
  1546  0004B2  503B               	movf	___fttol@f1,w,c
  1547  0004B4  0100               	movlb	0	; () banked
  1548  0004B6  6FB4               	movwf	___fttol@lval& (0+255),b
  1549  0004B8  503C               	movf	___fttol@f1+1,w,c
  1550  0004BA  0100               	movlb	0	; () banked
  1551  0004BC  6FB5               	movwf	(___fttol@lval+1)& (0+255),b
  1552  0004BE  503D               	movf	___fttol@f1+2,w,c
  1553  0004C0  0100               	movlb	0	; () banked
  1554  0004C2  6FB6               	movwf	(___fttol@lval+2)& (0+255),b
  1555  0004C4  0100               	movlb	0	; () banked
  1556  0004C6  6BB7               	clrf	(___fttol@lval+3)& (0+255),b
  1557                           
  1558                           ; BSR set to: 0
  1559  0004C8  0E8E               	movlw	142
  1560  0004CA  0100               	movlb	0	; () banked
  1561  0004CC  5FB8               	subwf	___fttol@exp1& (0+255),f,b
  1562                           
  1563                           ; BSR set to: 0
  1564  0004CE  0100               	movlb	0	; () banked
  1565  0004D0  AFB8               	btfss	___fttol@exp1& (0+255),7,b
  1566  0004D2  D013               	goto	l1456
  1567                           
  1568                           ; BSR set to: 0
  1569  0004D4  0100               	movlb	0	; () banked
  1570  0004D6  51B8               	movf	___fttol@exp1& (0+255),w,b
  1571  0004D8  0A80               	xorlw	128
  1572  0004DA  0F8F               	addlw	143
  1573  0004DC  B0D8               	btfsc	status,0,c
  1574  0004DE  D003               	goto	l1452
  1575  0004E0  D010               	goto	l1458
  1576                           
  1577                           ; BSR set to: 0
  1578                           
  1579                           ; BSR set to: 0
  1580  0004E2  D041               	goto	l693
  1581                           
  1582                           ; BSR set to: 0
  1583  0004E4  D000               	goto	l1452
  1584  0004E6                     l1452:
  1585                           
  1586                           ; BSR set to: 0
  1587  0004E6  0100               	movlb	0	; () banked
  1588  0004E8  90D8               	bcf	status,0,c
  1589  0004EA  33B7               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1590  0004EC  33B6               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1591  0004EE  33B5               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1592  0004F0  33B4               	rrcf	___fttol@lval& (0+255),f,b
  1593                           
  1594                           ; BSR set to: 0
  1595  0004F2  0100               	movlb	0	; () banked
  1596  0004F4  3FB8               	incfsz	___fttol@exp1& (0+255),f,b
  1597  0004F6  D7F7               	goto	l1452
  1598                           
  1599                           ; BSR set to: 0
  1600  0004F8  D01E               	goto	l1466
  1601  0004FA                     l1456:
  1602                           
  1603                           ; BSR set to: 0
  1604  0004FA  0E17               	movlw	23
  1605  0004FC  0100               	movlb	0	; () banked
  1606  0004FE  65B8               	cpfsgt	___fttol@exp1& (0+255),b
  1607  000500  D013               	goto	l1464
  1608  000502                     l1458:
  1609                           
  1610                           ; BSR set to: 0
  1611  000502  0E00               	movlw	0
  1612  000504  6E3B               	movwf	?___fttol,c
  1613  000506  0E00               	movlw	0
  1614  000508  6E3C               	movwf	?___fttol+1,c
  1615  00050A  0E00               	movlw	0
  1616  00050C  6E3D               	movwf	?___fttol+2,c
  1617  00050E  0E00               	movlw	0
  1618  000510  6E3E               	movwf	?___fttol+3,c
  1619                           
  1620                           ; BSR set to: 0
  1621  000512  D029               	goto	l693
  1622                           
  1623                           ; BSR set to: 0
  1624  000514  D009               	goto	l1464
  1625  000516                     l1462:
  1626                           
  1627                           ; BSR set to: 0
  1628  000516  0100               	movlb	0	; () banked
  1629  000518  90D8               	bcf	status,0,c
  1630  00051A  37B4               	rlcf	___fttol@lval& (0+255),f,b
  1631  00051C  37B5               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1632  00051E  37B6               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1633  000520  37B7               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1634  000522  0100               	movlb	0	; () banked
  1635  000524  07B8               	decf	___fttol@exp1& (0+255),f,b
  1636  000526  D000               	goto	l1464
  1637  000528                     l1464:
  1638                           
  1639                           ; BSR set to: 0
  1640  000528  0100               	movlb	0	; () banked
  1641  00052A  51B8               	movf	___fttol@exp1& (0+255),w,b
  1642  00052C  0100               	movlb	0	; () banked
  1643  00052E  B4D8               	btfsc	status,2,c
  1644  000530  D002               	goto	l1466
  1645  000532  D7F1               	goto	l1462
  1646                           
  1647                           ; BSR set to: 0
  1648  000534  D000               	goto	l1466
  1649  000536                     l1466:
  1650                           
  1651                           ; BSR set to: 0
  1652  000536  0100               	movlb	0	; () banked
  1653  000538  51B3               	movf	___fttol@sign1& (0+255),w,b
  1654  00053A  0100               	movlb	0	; () banked
  1655  00053C  B4D8               	btfsc	status,2,c
  1656  00053E  D00A               	goto	l1470
  1657                           
  1658                           ; BSR set to: 0
  1659  000540  0100               	movlb	0	; () banked
  1660  000542  1FB7               	comf	(___fttol@lval+3)& (0+255),f,b
  1661  000544  1FB6               	comf	(___fttol@lval+2)& (0+255),f,b
  1662  000546  1FB5               	comf	(___fttol@lval+1)& (0+255),f,b
  1663  000548  6DB4               	negf	___fttol@lval& (0+255),b
  1664  00054A  0E00               	movlw	0
  1665  00054C  23B5               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1666  00054E  23B6               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1667  000550  23B7               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1668  000552  D000               	goto	l1470
  1669  000554                     l1470:
  1670                           
  1671                           ; BSR set to: 0
  1672  000554  C0B4  F03B         	movff	___fttol@lval,?___fttol
  1673  000558  C0B5  F03C         	movff	___fttol@lval+1,?___fttol+1
  1674  00055C  C0B6  F03D         	movff	___fttol@lval+2,?___fttol+2
  1675  000560  C0B7  F03E         	movff	___fttol@lval+3,?___fttol+3
  1676  000564  D000               	goto	l693
  1677  000566                     l693:
  1678                           
  1679                           ; BSR set to: 0
  1680  000566  0012               	return		;funcret
  1681  000568                     __end_of___fttol:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           intcon	equ	0xFF2
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           postdec1	equ	0xFE5
  1691                           fsr1l	equ	0xFE1
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function ___ftdiv *****************
  1695 ;; Defined at:
  1696 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  f1              3   43[COMRAM] float 
  1699 ;;  f2              3   46[COMRAM] float 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  f3              3   53[COMRAM] float 
  1702 ;;  sign            1   57[COMRAM] unsigned char 
  1703 ;;  exp             1   56[COMRAM] unsigned char 
  1704 ;;  cntr            1   52[COMRAM] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  3   43[COMRAM] float 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1714 ;;      Params:         6       0       0       0
  1715 ;;      Locals:         6       0       0       0
  1716 ;;      Temps:          3       0       0       0
  1717 ;;      Totals:        15       0       0       0
  1718 ;;Total ram usage:       15 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    3
  1721 ;; This function calls:
  1722 ;;		___ftpack
  1723 ;; This function is called by:
  1724 ;;		_SetDCBrake_NominalVoltage
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text9
  1729  000568                     __ptext9:
  1730                           	opt stack 0
  1731  000568                     ___ftdiv:
  1732                           	opt stack 26
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;incstack = 0
  1736  000568  C02E  F032         	movff	___ftdiv@f1+2,??___ftdiv
  1737  00056C  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  1738  00056E  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  1739  000570  342D               	rlcf	___ftdiv@f1+1,w,c
  1740  000572  3632               	rlcf	??___ftdiv& (0+255),f,c
  1741  000574  E301               	bnc	u481
  1742  000576  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  1743  000578                     u481:
  1744  000578  5032               	movf	??___ftdiv,w,c
  1745  00057A  6E39               	movwf	___ftdiv@exp,c
  1746  00057C  5039               	movf	___ftdiv@exp,w,c
  1747  00057E  A4D8               	btfss	status,2,c
  1748  000580  D002               	goto	l1388
  1749  000582  D00E               	goto	l1390
  1750  000584  D061               	goto	l657
  1751  000586                     l1388:
  1752  000586  C031  F032         	movff	___ftdiv@f2+2,??___ftdiv
  1753  00058A  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  1754  00058C  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  1755  00058E  3430               	rlcf	___ftdiv@f2+1,w,c
  1756  000590  3632               	rlcf	??___ftdiv& (0+255),f,c
  1757  000592  E301               	bnc	u501
  1758  000594  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  1759  000596                     u501:
  1760  000596  5032               	movf	??___ftdiv,w,c
  1761  000598  6E3A               	movwf	___ftdiv@sign,c
  1762  00059A  503A               	movf	___ftdiv@sign,w,c
  1763  00059C  A4D8               	btfss	status,2,c
  1764  00059E  D007               	goto	l1394
  1765  0005A0                     l1390:
  1766  0005A0  0E00               	movlw	0
  1767  0005A2  6E2C               	movwf	?___ftdiv,c
  1768  0005A4  0E00               	movlw	0
  1769  0005A6  6E2D               	movwf	?___ftdiv+1,c
  1770  0005A8  0E00               	movlw	0
  1771  0005AA  6E2E               	movwf	?___ftdiv+2,c
  1772  0005AC  D04D               	goto	l657
  1773  0005AE                     l1394:
  1774  0005AE  0E00               	movlw	0
  1775  0005B0  6E36               	movwf	___ftdiv@f3,c
  1776  0005B2  0E00               	movlw	0
  1777  0005B4  6E37               	movwf	___ftdiv@f3+1,c
  1778  0005B6  0E00               	movlw	0
  1779  0005B8  6E38               	movwf	___ftdiv@f3+2,c
  1780  0005BA  503A               	movf	___ftdiv@sign,w,c
  1781  0005BC  0F89               	addlw	137
  1782  0005BE  5E39               	subwf	___ftdiv@exp,f,c
  1783  0005C0  C02E  F03A         	movff	___ftdiv@f1+2,___ftdiv@sign
  1784  0005C4  5031               	movf	___ftdiv@f2+2,w,c
  1785  0005C6  1A3A               	xorwf	___ftdiv@sign,f,c
  1786  0005C8  0E80               	movlw	128
  1787  0005CA  163A               	andwf	___ftdiv@sign,f,c
  1788  0005CC  8E2D               	bsf	___ftdiv@f1+1,7,c
  1789  0005CE  0EFF               	movlw	255
  1790  0005D0  162C               	andwf	___ftdiv@f1,f,c
  1791  0005D2  0EFF               	movlw	255
  1792  0005D4  162D               	andwf	___ftdiv@f1+1,f,c
  1793  0005D6  0E00               	movlw	0
  1794  0005D8  162E               	andwf	___ftdiv@f1+2,f,c
  1795  0005DA  8E30               	bsf	___ftdiv@f2+1,7,c
  1796  0005DC  0EFF               	movlw	255
  1797  0005DE  162F               	andwf	___ftdiv@f2,f,c
  1798  0005E0  0EFF               	movlw	255
  1799  0005E2  1630               	andwf	___ftdiv@f2+1,f,c
  1800  0005E4  0E00               	movlw	0
  1801  0005E6  1631               	andwf	___ftdiv@f2+2,f,c
  1802  0005E8  0E18               	movlw	24
  1803  0005EA  6E35               	movwf	___ftdiv@cntr,c
  1804  0005EC  D000               	goto	l1414
  1805  0005EE                     l1414:
  1806  0005EE  90D8               	bcf	status,0,c
  1807  0005F0  3636               	rlcf	___ftdiv@f3,f,c
  1808  0005F2  3637               	rlcf	___ftdiv@f3+1,f,c
  1809  0005F4  3638               	rlcf	___ftdiv@f3+2,f,c
  1810  0005F6  502F               	movf	___ftdiv@f2,w,c
  1811  0005F8  5C2C               	subwf	___ftdiv@f1,w,c
  1812  0005FA  5030               	movf	___ftdiv@f2+1,w,c
  1813  0005FC  582D               	subwfb	___ftdiv@f1+1,w,c
  1814  0005FE  5031               	movf	___ftdiv@f2+2,w,c
  1815  000600  582E               	subwfb	___ftdiv@f1+2,w,c
  1816  000602  A0D8               	btfss	status,0,c
  1817  000604  D007               	goto	l660
  1818  000606  502F               	movf	___ftdiv@f2,w,c
  1819  000608  5E2C               	subwf	___ftdiv@f1,f,c
  1820  00060A  5030               	movf	___ftdiv@f2+1,w,c
  1821  00060C  5A2D               	subwfb	___ftdiv@f1+1,f,c
  1822  00060E  5031               	movf	___ftdiv@f2+2,w,c
  1823  000610  5A2E               	subwfb	___ftdiv@f1+2,f,c
  1824  000612  8036               	bsf	___ftdiv@f3,0,c
  1825  000614                     l660:
  1826  000614  90D8               	bcf	status,0,c
  1827  000616  362C               	rlcf	___ftdiv@f1,f,c
  1828  000618  362D               	rlcf	___ftdiv@f1+1,f,c
  1829  00061A  362E               	rlcf	___ftdiv@f1+2,f,c
  1830  00061C  2E35               	decfsz	___ftdiv@cntr,f,c
  1831  00061E  D7E7               	goto	l1414
  1832  000620  D000               	goto	l1424
  1833  000622                     l1424:
  1834  000622  C036  F021         	movff	___ftdiv@f3,___ftpack@arg
  1835  000626  C037  F022         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1836  00062A  C038  F023         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1837  00062E  C039  F024         	movff	___ftdiv@exp,___ftpack@exp
  1838  000632  C03A  F025         	movff	___ftdiv@sign,___ftpack@sign
  1839  000636  EC90  F003         	call	___ftpack	;wreg free
  1840  00063A  C021  F02C         	movff	?___ftpack,?___ftdiv
  1841  00063E  C022  F02D         	movff	?___ftpack+1,?___ftdiv+1
  1842  000642  C023  F02E         	movff	?___ftpack+2,?___ftdiv+2
  1843  000646  D000               	goto	l657
  1844  000648                     l657:
  1845  000648  0012               	return		;funcret
  1846  00064A                     __end_of___ftdiv:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           intcon	equ	0xFF2
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           postdec1	equ	0xFE5
  1856                           fsr1l	equ	0xFE1
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function ___ftpack *****************
  1860 ;; Defined at:
  1861 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  arg             3   32[COMRAM] unsigned um
  1864 ;;  exp             1   35[COMRAM] unsigned char 
  1865 ;;  sign            1   36[COMRAM] unsigned char 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  3   32[COMRAM] float 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1877 ;;      Params:         5       0       0       0
  1878 ;;      Locals:         0       0       0       0
  1879 ;;      Temps:          3       0       0       0
  1880 ;;      Totals:         8       0       0       0
  1881 ;;Total ram usage:        8 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    2
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		___ftdiv
  1888 ;;		___lwtoft
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text10
  1893  000720                     __ptext10:
  1894                           	opt stack 0
  1895  000720                     ___ftpack:
  1896                           	opt stack 26
  1897                           
  1898                           ;incstack = 0
  1899  000720  5024               	movf	___ftpack@exp,w,c
  1900  000722  B4D8               	btfsc	status,2,c
  1901  000724  D005               	goto	l1312
  1902  000726  5021               	movf	___ftpack@arg,w,c
  1903  000728  1022               	iorwf	___ftpack@arg+1,w,c
  1904  00072A  1023               	iorwf	___ftpack@arg+2,w,c
  1905  00072C  A4D8               	btfss	status,2,c
  1906  00072E  D00E               	goto	l1318
  1907  000730                     l1312:
  1908  000730  0E00               	movlw	0
  1909  000732  6E21               	movwf	?___ftpack,c
  1910  000734  0E00               	movlw	0
  1911  000736  6E22               	movwf	?___ftpack+1,c
  1912  000738  0E00               	movlw	0
  1913  00073A  6E23               	movwf	?___ftpack+2,c
  1914  00073C  D053               	goto	l585
  1915  00073E  D006               	goto	l1318
  1916  000740                     l1316:
  1917  000740  2A24               	incf	___ftpack@exp,f,c
  1918  000742  90D8               	bcf	status,0,c
  1919  000744  3223               	rrcf	___ftpack@arg+2,f,c
  1920  000746  3222               	rrcf	___ftpack@arg+1,f,c
  1921  000748  3221               	rrcf	___ftpack@arg,f,c
  1922  00074A  D000               	goto	l1318
  1923  00074C                     l1318:
  1924  00074C  0E00               	movlw	0
  1925  00074E  1421               	andwf	___ftpack@arg,w,c
  1926  000750  6E26               	movwf	??___ftpack& (0+255),c
  1927  000752  0E00               	movlw	0
  1928  000754  1422               	andwf	___ftpack@arg+1,w,c
  1929  000756  6E27               	movwf	(??___ftpack+1)& (0+255),c
  1930  000758  0EFE               	movlw	254
  1931  00075A  1423               	andwf	___ftpack@arg+2,w,c
  1932  00075C  6E28               	movwf	(??___ftpack+2)& (0+255),c
  1933  00075E  5026               	movf	??___ftpack,w,c
  1934  000760  1027               	iorwf	??___ftpack+1,w,c
  1935  000762  1028               	iorwf	??___ftpack+2,w,c
  1936  000764  B4D8               	btfsc	status,2,c
  1937  000766  D00E               	goto	l1324
  1938  000768  D7EB               	goto	l1316
  1939  00076A  D00C               	goto	l1324
  1940  00076C                     l1320:
  1941  00076C  2A24               	incf	___ftpack@exp,f,c
  1942  00076E  0E01               	movlw	1
  1943  000770  2621               	addwf	___ftpack@arg,f,c
  1944  000772  0E00               	movlw	0
  1945  000774  2222               	addwfc	___ftpack@arg+1,f,c
  1946  000776  0E00               	movlw	0
  1947  000778  2223               	addwfc	___ftpack@arg+2,f,c
  1948  00077A  90D8               	bcf	status,0,c
  1949  00077C  3223               	rrcf	___ftpack@arg+2,f,c
  1950  00077E  3222               	rrcf	___ftpack@arg+1,f,c
  1951  000780  3221               	rrcf	___ftpack@arg,f,c
  1952  000782  D000               	goto	l1324
  1953  000784                     l1324:
  1954  000784  0E00               	movlw	0
  1955  000786  1421               	andwf	___ftpack@arg,w,c
  1956  000788  6E26               	movwf	??___ftpack& (0+255),c
  1957  00078A  0E00               	movlw	0
  1958  00078C  1422               	andwf	___ftpack@arg+1,w,c
  1959  00078E  6E27               	movwf	(??___ftpack+1)& (0+255),c
  1960  000790  0EFF               	movlw	255
  1961  000792  1423               	andwf	___ftpack@arg+2,w,c
  1962  000794  6E28               	movwf	(??___ftpack+2)& (0+255),c
  1963  000796  5026               	movf	??___ftpack,w,c
  1964  000798  1027               	iorwf	??___ftpack+1,w,c
  1965  00079A  1028               	iorwf	??___ftpack+2,w,c
  1966  00079C  B4D8               	btfsc	status,2,c
  1967  00079E  D008               	goto	l1328
  1968  0007A0  D7E5               	goto	l1320
  1969  0007A2  D006               	goto	l1328
  1970  0007A4                     l1326:
  1971  0007A4  0624               	decf	___ftpack@exp,f,c
  1972  0007A6  90D8               	bcf	status,0,c
  1973  0007A8  3621               	rlcf	___ftpack@arg,f,c
  1974  0007AA  3622               	rlcf	___ftpack@arg+1,f,c
  1975  0007AC  3623               	rlcf	___ftpack@arg+2,f,c
  1976  0007AE  D000               	goto	l1328
  1977  0007B0                     l1328:
  1978  0007B0  BE22               	btfsc	___ftpack@arg+1,7,c
  1979  0007B2  D004               	goto	l596
  1980  0007B4  0E02               	movlw	2
  1981  0007B6  6024               	cpfslt	___ftpack@exp,c
  1982  0007B8  D7F5               	goto	l1326
  1983  0007BA  D000               	goto	l596
  1984  0007BC                     l596:
  1985  0007BC  B024               	btfsc	___ftpack@exp,0,c
  1986  0007BE  D002               	goto	l1334
  1987  0007C0  9E22               	bcf	___ftpack@arg+1,7,c
  1988  0007C2  D000               	goto	l1334
  1989  0007C4                     l1334:
  1990  0007C4  90D8               	bcf	status,0,c
  1991  0007C6  3224               	rrcf	___ftpack@exp,f,c
  1992  0007C8  5024               	movf	___ftpack@exp,w,c
  1993  0007CA  1223               	iorwf	___ftpack@arg+2,f,c
  1994  0007CC  5025               	movf	___ftpack@sign,w,c
  1995  0007CE  B4D8               	btfsc	status,2,c
  1996  0007D0  D002               	goto	l1340
  1997  0007D2  8E23               	bsf	___ftpack@arg+2,7,c
  1998  0007D4  D000               	goto	l1340
  1999  0007D6                     l1340:
  2000  0007D6  C021  F021         	movff	___ftpack@arg,?___ftpack
  2001  0007DA  C022  F022         	movff	___ftpack@arg+1,?___ftpack+1
  2002  0007DE  C023  F023         	movff	___ftpack@arg+2,?___ftpack+2
  2003  0007E2  D000               	goto	l585
  2004  0007E4                     l585:
  2005  0007E4  0012               	return		;funcret
  2006  0007E6                     __end_of___ftpack:
  2007                           	opt stack 0
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           intcon	equ	0xFF2
  2013                           postinc0	equ	0xFEE
  2014                           wreg	equ	0xFE8
  2015                           postdec1	equ	0xFE5
  2016                           fsr1l	equ	0xFE1
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _SetDCBrake_PWMDuty *****************
  2020 ;; Defined at:
  2021 ;;		line 22 in file "dc_brake.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  duty            2   11[BANK0 ] unsigned int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;		None               void
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2035 ;;      Params:         0       2       0       0
  2036 ;;      Locals:         0       0       0       0
  2037 ;;      Temps:          0       2       0       0
  2038 ;;      Totals:         0       4       0       0
  2039 ;;Total ram usage:        4 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    2
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_SetDCBrake_NominalVoltage
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text11
  2050  000A64                     __ptext11:
  2051                           	opt stack 0
  2052  000A64                     _SetDCBrake_PWMDuty:
  2053                           	opt stack 27
  2054                           
  2055                           ;dc_brake.c: 24: CCP1CONbits.DC1B0 = duty & 1;
  2056                           
  2057                           ;incstack = 0
  2058  000A64  C0B9  F0BB         	movff	SetDCBrake_PWMDuty@duty,??_SetDCBrake_PWMDuty
  2059  000A68  0E01               	movlw	1
  2060  000A6A  0100               	movlb	0	; () banked
  2061  000A6C  17BB               	andwf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2062  000A6E  0100               	movlb	0	; () banked
  2063  000A70  3BBB               	swapf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2064  000A72  50BD               	movf	4029,w,c	;volatile
  2065  000A74  0100               	movlb	0	; () banked
  2066  000A76  19BB               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2067  000A78  0BEF               	andlw	-17
  2068  000A7A  19BB               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2069  000A7C  6EBD               	movwf	4029,c	;volatile
  2070                           
  2071                           ;dc_brake.c: 25: CCP1CONbits.DC1B1 = (duty >> 1) & 1;
  2072  000A7E  90D8               	bcf	status,0,c
  2073  000A80  0100               	movlb	0	; () banked
  2074  000A82  31BA               	rrcf	(SetDCBrake_PWMDuty@duty+1)& (0+255),w,b
  2075  000A84  0100               	movlb	0	; () banked
  2076  000A86  6FBC               	movwf	(??_SetDCBrake_PWMDuty+1)& (0+255),b
  2077  000A88  0100               	movlb	0	; () banked
  2078  000A8A  31B9               	rrcf	SetDCBrake_PWMDuty@duty& (0+255),w,b
  2079  000A8C  0100               	movlb	0	; () banked
  2080  000A8E  6FBB               	movwf	??_SetDCBrake_PWMDuty& (0+255),b
  2081  000A90  0E01               	movlw	1
  2082  000A92  0100               	movlb	0	; () banked
  2083  000A94  17BB               	andwf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2084  000A96  0100               	movlb	0	; () banked
  2085  000A98  3BBB               	swapf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2086  000A9A  47BB               	rlncf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2087  000A9C  50BD               	movf	4029,w,c	;volatile
  2088  000A9E  0100               	movlb	0	; () banked
  2089  000AA0  19BB               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2090  000AA2  0BDF               	andlw	-33
  2091  000AA4  19BB               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2092  000AA6  6EBD               	movwf	4029,c	;volatile
  2093                           
  2094                           ;dc_brake.c: 26: CCPR1L = (duty >> 2);
  2095  000AA8  C0B9  F0BB         	movff	SetDCBrake_PWMDuty@duty,??_SetDCBrake_PWMDuty
  2096  000AAC  C0BA  F0BC         	movff	SetDCBrake_PWMDuty@duty+1,??_SetDCBrake_PWMDuty+1
  2097  000AB0  0100               	movlb	0	; () banked
  2098  000AB2  90D8               	bcf	status,0,c
  2099  000AB4  33BC               	rrcf	(??_SetDCBrake_PWMDuty+1)& (0+255),f,b
  2100  000AB6  33BB               	rrcf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2101  000AB8  0100               	movlb	0	; () banked
  2102  000ABA  90D8               	bcf	status,0,c
  2103  000ABC  33BC               	rrcf	(??_SetDCBrake_PWMDuty+1)& (0+255),f,b
  2104  000ABE  33BB               	rrcf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2105  000AC0  0100               	movlb	0	; () banked
  2106  000AC2  51BB               	movf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2107  000AC4  6EBE               	movwf	4030,c	;volatile
  2108                           
  2109                           ; BSR set to: 0
  2110  000AC6  0012               	return		;funcret
  2111  000AC8                     __end_of_SetDCBrake_PWMDuty:
  2112                           	opt stack 0
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           intcon	equ	0xFF2
  2118                           postinc0	equ	0xFEE
  2119                           wreg	equ	0xFE8
  2120                           postdec1	equ	0xFE5
  2121                           fsr1l	equ	0xFE1
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _Package_Send *****************
  2125 ;; Defined at:
  2126 ;;		line 4 in file "comm_protocol.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  p               2   40[COMRAM] PTR volatile struct pack
  2129 ;;		 -> out(39), in(39), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  i               1    0        unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2141 ;;      Params:         2       0       0       0
  2142 ;;      Locals:         0       0       0       0
  2143 ;;      Temps:          1       0       0       0
  2144 ;;      Totals:         3       0       0       0
  2145 ;;Total ram usage:        3 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    3
  2148 ;; This function calls:
  2149 ;;		_Buffer_GetCRC8
  2150 ;;		_Buffer_Read
  2151 ;;		_UARTSendByte
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text12
  2158  000906                     __ptext12:
  2159                           	opt stack 0
  2160  000906                     _Package_Send:
  2161                           	opt stack 27
  2162                           
  2163                           ;comm_protocol.c: 6: unsigned char i;
  2164                           ;comm_protocol.c: 7: p->CRC8 = Buffer_GetCRC8(&p->DATA);
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;incstack = 0
  2168  000906  0E02               	movlw	2
  2169  000908  2429               	addwf	Package_Send@p,w,c
  2170  00090A  6E21               	movwf	Buffer_GetCRC8@buff,c
  2171  00090C  0E00               	movlw	0
  2172  00090E  202A               	addwfc	Package_Send@p+1,w,c
  2173  000910  6E22               	movwf	Buffer_GetCRC8@buff+1,c
  2174  000912  EC64  F005         	call	_Buffer_GetCRC8	;wreg free
  2175  000916  6E2B               	movwf	??_Package_Send& (0+255),c
  2176  000918  EE20 F026          	lfsr	2,38
  2177  00091C  5029               	movf	Package_Send@p,w,c
  2178  00091E  26D9               	addwf	fsr2l,f,c
  2179  000920  502A               	movf	Package_Send@p+1,w,c
  2180  000922  22DA               	addwfc	fsr2h,f,c
  2181  000924  C02B  FFDF         	movff	??_Package_Send,indf2
  2182                           
  2183                           ;comm_protocol.c: 9: UARTSendByte(p->ADR);
  2184  000928  C029  FFD9         	movff	Package_Send@p,fsr2l
  2185  00092C  C02A  FFDA         	movff	Package_Send@p+1,fsr2h
  2186  000930  50DF               	movf	indf2,w,c
  2187  000932  EC36  F006         	call	_UARTSendByte
  2188                           
  2189                           ;comm_protocol.c: 10: while(p->NUM_OF_BYTES != 0)
  2190  000936  D012               	goto	l1626
  2191  000938                     l1622:
  2192                           
  2193                           ;comm_protocol.c: 11: {
  2194                           ;comm_protocol.c: 12: UARTSendByte(Buffer_Read(&p->DATA));
  2195  000938  0E02               	movlw	2
  2196  00093A  2429               	addwf	Package_Send@p,w,c
  2197  00093C  6E21               	movwf	Buffer_Read@buff,c
  2198  00093E  0E00               	movlw	0
  2199  000940  202A               	addwfc	Package_Send@p+1,w,c
  2200  000942  6E22               	movwf	Buffer_Read@buff+1,c
  2201  000944  EC3D  F004         	call	_Buffer_Read	;wreg free
  2202  000948  EC36  F006         	call	_UARTSendByte
  2203                           
  2204                           ;comm_protocol.c: 13: p->NUM_OF_BYTES--;
  2205  00094C  EE20 F001          	lfsr	2,1
  2206  000950  5029               	movf	Package_Send@p,w,c
  2207  000952  26D9               	addwf	fsr2l,f,c
  2208  000954  502A               	movf	Package_Send@p+1,w,c
  2209  000956  22DA               	addwfc	fsr2h,f,c
  2210  000958  06DF               	decf	indf2,f,c
  2211  00095A  D000               	goto	l1626
  2212  00095C                     l1626:
  2213  00095C  EE20 F001          	lfsr	2,1
  2214  000960  5029               	movf	Package_Send@p,w,c
  2215  000962  26D9               	addwf	fsr2l,f,c
  2216  000964  502A               	movf	Package_Send@p+1,w,c
  2217  000966  22DA               	addwfc	fsr2h,f,c
  2218  000968  50DF               	movf	indf2,w,c
  2219  00096A  A4D8               	btfss	status,2,c
  2220  00096C  D7E5               	goto	l1622
  2221                           
  2222                           ;comm_protocol.c: 14: }
  2223                           ;comm_protocol.c: 15: UARTSendByte(p->CRC8);
  2224  00096E  EE20 F026          	lfsr	2,38
  2225  000972  5029               	movf	Package_Send@p,w,c
  2226  000974  26D9               	addwf	fsr2l,f,c
  2227  000976  502A               	movf	Package_Send@p+1,w,c
  2228  000978  22DA               	addwfc	fsr2h,f,c
  2229  00097A  50DF               	movf	indf2,w,c
  2230  00097C  EC36  F006         	call	_UARTSendByte
  2231  000980  0012               	return		;funcret
  2232  000982                     __end_of_Package_Send:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           postinc0	equ	0xFEE
  2240                           wreg	equ	0xFE8
  2241                           postdec1	equ	0xFE5
  2242                           fsr1l	equ	0xFE1
  2243                           indf2	equ	0xFDF
  2244                           fsr2h	equ	0xFDA
  2245                           fsr2l	equ	0xFD9
  2246                           status	equ	0xFD8
  2247                           
  2248 ;; *************** function _UARTSendByte *****************
  2249 ;; Defined at:
  2250 ;;		line 56 in file "uart.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  data            1    wreg     unsigned char 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  data            1   32[COMRAM] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		wreg
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2264 ;;      Params:         0       0       0       0
  2265 ;;      Locals:         1       0       0       0
  2266 ;;      Temps:          0       0       0       0
  2267 ;;      Totals:         1       0       0       0
  2268 ;;Total ram usage:        1 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    2
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_Package_Send
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text13
  2279  000C6C                     __ptext13:
  2280                           	opt stack 0
  2281  000C6C                     _UARTSendByte:
  2282                           	opt stack 27
  2283                           
  2284                           ;incstack = 0
  2285                           ;UARTSendByte@data stored from wreg
  2286  000C6C  6E21               	movwf	UARTSendByte@data,c
  2287                           
  2288                           ;uart.c: 58: while (!TXSTAbits.TRMT);
  2289  000C6E  D000               	goto	l104
  2290  000C70                     l104:
  2291  000C70  A2AC               	btfss	4012,1,c	;volatile
  2292  000C72  D7FE               	goto	l104
  2293                           
  2294                           ;uart.c: 59: PORTDbits.RD4 = 1;
  2295  000C74  8883               	bsf	3971,4,c	;volatile
  2296                           
  2297                           ;uart.c: 60: TXREG = data;
  2298  000C76  C021  FFAD         	movff	UARTSendByte@data,4013	;volatile
  2299                           
  2300                           ;uart.c: 61: while (!TXSTAbits.TRMT);
  2301  000C7A  D000               	goto	l107
  2302  000C7C                     l107:
  2303  000C7C  A2AC               	btfss	4012,1,c	;volatile
  2304  000C7E  D7FE               	goto	l107
  2305                           
  2306                           ;uart.c: 62: PORTDbits.RD4 = 0;
  2307  000C80  9883               	bcf	3971,4,c	;volatile
  2308  000C82  0012               	return		;funcret
  2309  000C84                     __end_of_UARTSendByte:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           intcon	equ	0xFF2
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1l	equ	0xFE1
  2320                           indf2	equ	0xFDF
  2321                           fsr2h	equ	0xFDA
  2322                           fsr2l	equ	0xFD9
  2323                           status	equ	0xFD8
  2324                           
  2325 ;; *************** function _Buffer_Read *****************
  2326 ;; Defined at:
  2327 ;;		line 14 in file "ring_buffer.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  buff            2   32[COMRAM] PTR volatile struct circ
  2330 ;;		 -> out(39), in(39), 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  data            1   38[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2342 ;;      Params:         2       0       0       0
  2343 ;;      Locals:         1       0       0       0
  2344 ;;      Temps:          4       0       0       0
  2345 ;;      Totals:         7       0       0       0
  2346 ;;Total ram usage:        7 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_Package_Send
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text14
  2357  00087A                     __ptext14:
  2358                           	opt stack 0
  2359  00087A                     _Buffer_Read:
  2360                           	opt stack 27
  2361                           
  2362                           ;ring_buffer.c: 16: if (buff->head == buff->tail)
  2363                           
  2364                           ;incstack = 0
  2365  00087A  EE20 F022          	lfsr	2,34
  2366  00087E  5021               	movf	Buffer_Read@buff,w,c
  2367  000880  26D9               	addwf	fsr2l,f,c
  2368  000882  5022               	movf	Buffer_Read@buff+1,w,c
  2369  000884  22DA               	addwfc	fsr2h,f,c
  2370  000886  EE10 F020          	lfsr	1,32
  2371  00088A  5021               	movf	Buffer_Read@buff,w,c
  2372  00088C  26E1               	addwf	fsr1l,f,c
  2373  00088E  5022               	movf	Buffer_Read@buff+1,w,c
  2374  000890  22E2               	addwfc	fsr1h,f,c
  2375  000892  50DE               	movf	postinc2,w,c
  2376  000894  18E6               	xorwf	postinc1,w,c
  2377  000896  E106               	bnz	l1362
  2378  000898  50DE               	movf	postinc2,w,c
  2379  00089A  18E6               	xorwf	postinc1,w,c
  2380  00089C  A4D8               	btfss	status,2,c
  2381  00089E  D002               	goto	l1362
  2382                           
  2383                           ;ring_buffer.c: 17: return -1;
  2384  0008A0  0EFF               	movlw	255
  2385  0008A2  D030               	goto	l250
  2386  0008A4                     l1362:
  2387                           
  2388                           ;ring_buffer.c: 18: else
  2389                           ;ring_buffer.c: 19: {
  2390                           ;ring_buffer.c: 20: char data = buff->buffer[buff->tail];
  2391  0008A4  EE20 F022          	lfsr	2,34
  2392  0008A8  5021               	movf	Buffer_Read@buff,w,c
  2393  0008AA  26D9               	addwf	fsr2l,f,c
  2394  0008AC  5022               	movf	Buffer_Read@buff+1,w,c
  2395  0008AE  22DA               	addwfc	fsr2h,f,c
  2396  0008B0  CFDE F023          	movff	postinc2,??_Buffer_Read
  2397  0008B4  CFDD F024          	movff	postdec2,??_Buffer_Read+1
  2398  0008B8  5023               	movf	??_Buffer_Read,w,c
  2399  0008BA  2421               	addwf	Buffer_Read@buff,w,c
  2400  0008BC  6ED9               	movwf	fsr2l,c
  2401  0008BE  5024               	movf	??_Buffer_Read+1,w,c
  2402  0008C0  2022               	addwfc	Buffer_Read@buff+1,w,c
  2403  0008C2  6EDA               	movwf	fsr2h,c
  2404  0008C4  50DF               	movf	indf2,w,c
  2405  0008C6  6E27               	movwf	Buffer_Read@data,c
  2406                           
  2407                           ;ring_buffer.c: 21: buff->tail = (unsigned int)(buff->tail + 1) % 32;
  2408  0008C8  EE20 F022          	lfsr	2,34
  2409  0008CC  5021               	movf	Buffer_Read@buff,w,c
  2410  0008CE  26D9               	addwf	fsr2l,f,c
  2411  0008D0  5022               	movf	Buffer_Read@buff+1,w,c
  2412  0008D2  22DA               	addwfc	fsr2h,f,c
  2413  0008D4  CFDE F023          	movff	postinc2,??_Buffer_Read
  2414  0008D8  CFDD F024          	movff	postdec2,??_Buffer_Read+1
  2415  0008DC  0E01               	movlw	1
  2416  0008DE  2623               	addwf	??_Buffer_Read,f,c
  2417  0008E0  0E00               	movlw	0
  2418  0008E2  2224               	addwfc	??_Buffer_Read+1,f,c
  2419  0008E4  0E1F               	movlw	31
  2420  0008E6  1623               	andwf	??_Buffer_Read,f,c
  2421  0008E8  0E00               	movlw	0
  2422  0008EA  1624               	andwf	??_Buffer_Read+1,f,c
  2423  0008EC  EE20 F022          	lfsr	2,34
  2424  0008F0  5021               	movf	Buffer_Read@buff,w,c
  2425  0008F2  26D9               	addwf	fsr2l,f,c
  2426  0008F4  5022               	movf	Buffer_Read@buff+1,w,c
  2427  0008F6  22DA               	addwfc	fsr2h,f,c
  2428  0008F8  C023  FFDE         	movff	??_Buffer_Read,postinc2
  2429  0008FC  C024  FFDD         	movff	??_Buffer_Read+1,postdec2
  2430                           
  2431                           ;ring_buffer.c: 22: return data;
  2432  000900  5027               	movf	Buffer_Read@data,w,c
  2433  000902  D000               	goto	l250
  2434  000904                     l250:
  2435  000904  0012               	return		;funcret
  2436  000906                     __end_of_Buffer_Read:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           intcon	equ	0xFF2
  2443                           postinc0	equ	0xFEE
  2444                           wreg	equ	0xFE8
  2445                           postinc1	equ	0xFE6
  2446                           postdec1	equ	0xFE5
  2447                           fsr1h	equ	0xFE2
  2448                           fsr1l	equ	0xFE1
  2449                           indf2	equ	0xFDF
  2450                           postinc2	equ	0xFDE
  2451                           postdec2	equ	0xFDD
  2452                           fsr2h	equ	0xFDA
  2453                           fsr2l	equ	0xFD9
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _Buffer_GetCRC8 *****************
  2457 ;; Defined at:
  2458 ;;		line 26 in file "ring_buffer.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  buff            2   32[COMRAM] PTR volatile struct circ
  2461 ;;		 -> out(39), in(39), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  CRC             1   39[COMRAM] unsigned char 
  2464 ;;  i               1   38[COMRAM] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      unsigned char 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2474 ;;      Params:         2       0       0       0
  2475 ;;      Locals:         2       0       0       0
  2476 ;;      Temps:          4       0       0       0
  2477 ;;      Totals:         8       0       0       0
  2478 ;;Total ram usage:        8 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    2
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_Package_Send
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text15
  2489  000AC8                     __ptext15:
  2490                           	opt stack 0
  2491  000AC8                     _Buffer_GetCRC8:
  2492                           	opt stack 27
  2493                           
  2494                           ;ring_buffer.c: 28: unsigned char i;
  2495                           ;ring_buffer.c: 29: unsigned char CRC = 0;
  2496                           
  2497                           ;incstack = 0
  2498  000AC8  0E00               	movlw	0
  2499  000ACA  6E28               	movwf	Buffer_GetCRC8@CRC,c
  2500                           
  2501                           ;ring_buffer.c: 30: for (i=buff->tail; i<buff->head; i++)
  2502  000ACC  EE20 F022          	lfsr	2,34
  2503  000AD0  5021               	movf	Buffer_GetCRC8@buff,w,c
  2504  000AD2  26D9               	addwf	fsr2l,f,c
  2505  000AD4  5022               	movf	Buffer_GetCRC8@buff+1,w,c
  2506  000AD6  22DA               	addwfc	fsr2h,f,c
  2507  000AD8  50DF               	movf	indf2,w,c
  2508  000ADA  6E27               	movwf	Buffer_GetCRC8@i,c
  2509  000ADC  D00D               	goto	l1376
  2510  000ADE                     l1372:
  2511                           
  2512                           ;ring_buffer.c: 31: {
  2513                           ;ring_buffer.c: 32: CRC = CRC ^ buff->buffer[i];
  2514  000ADE  5027               	movf	Buffer_GetCRC8@i,w,c
  2515  000AE0  0D01               	mullw	1
  2516  000AE2  50F3               	movf	prodl,w,c
  2517  000AE4  2421               	addwf	Buffer_GetCRC8@buff,w,c
  2518  000AE6  6ED9               	movwf	fsr2l,c
  2519  000AE8  50F4               	movf	prodh,w,c
  2520  000AEA  2022               	addwfc	Buffer_GetCRC8@buff+1,w,c
  2521  000AEC  6EDA               	movwf	fsr2h,c
  2522  000AEE  50DF               	movf	indf2,w,c
  2523  000AF0  1828               	xorwf	Buffer_GetCRC8@CRC,w,c
  2524  000AF2  6E28               	movwf	Buffer_GetCRC8@CRC,c
  2525  000AF4  2A27               	incf	Buffer_GetCRC8@i,f,c
  2526  000AF6  D000               	goto	l1376
  2527  000AF8                     l1376:
  2528  000AF8  EE20 F020          	lfsr	2,32
  2529  000AFC  5021               	movf	Buffer_GetCRC8@buff,w,c
  2530  000AFE  26D9               	addwf	fsr2l,f,c
  2531  000B00  5022               	movf	Buffer_GetCRC8@buff+1,w,c
  2532  000B02  22DA               	addwfc	fsr2h,f,c
  2533  000B04  5027               	movf	Buffer_GetCRC8@i,w,c
  2534  000B06  6E25               	movwf	(??_Buffer_GetCRC8+2)& (0+255),c
  2535  000B08  6A26               	clrf	(??_Buffer_GetCRC8+3)& (0+255),c
  2536  000B0A  50DE               	movf	postinc2,w,c
  2537  000B0C  5C25               	subwf	??_Buffer_GetCRC8+2,w,c
  2538  000B0E  50DE               	movf	postinc2,w,c
  2539  000B10  5826               	subwfb	??_Buffer_GetCRC8+3,w,c
  2540  000B12  A0D8               	btfss	status,0,c
  2541  000B14  D7E4               	goto	l1372
  2542                           
  2543                           ;ring_buffer.c: 33: }
  2544                           ;ring_buffer.c: 34: return CRC;
  2545  000B16  5028               	movf	Buffer_GetCRC8@CRC,w,c
  2546  000B18  D000               	goto	l257
  2547  000B1A                     l257:
  2548  000B1A  0012               	return		;funcret
  2549  000B1C                     __end_of_Buffer_GetCRC8:
  2550                           	opt stack 0
  2551                           tblptru	equ	0xFF8
  2552                           tblptrh	equ	0xFF7
  2553                           tblptrl	equ	0xFF6
  2554                           tablat	equ	0xFF5
  2555                           prodh	equ	0xFF4
  2556                           prodl	equ	0xFF3
  2557                           intcon	equ	0xFF2
  2558                           postinc0	equ	0xFEE
  2559                           wreg	equ	0xFE8
  2560                           postinc1	equ	0xFE6
  2561                           postdec1	equ	0xFE5
  2562                           fsr1h	equ	0xFE2
  2563                           fsr1l	equ	0xFE1
  2564                           indf2	equ	0xFDF
  2565                           postinc2	equ	0xFDE
  2566                           postdec2	equ	0xFDD
  2567                           fsr2h	equ	0xFDA
  2568                           fsr2l	equ	0xFD9
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _Package_AddData *****************
  2572 ;; Defined at:
  2573 ;;		line 18 in file "comm_protocol.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  p               2   39[COMRAM] PTR volatile struct pack
  2576 ;;		 -> out(39), in(39), 
  2577 ;;  d               1   41[COMRAM] unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2589 ;;      Params:         3       0       0       0
  2590 ;;      Locals:         0       0       0       0
  2591 ;;      Temps:          0       0       0       0
  2592 ;;      Totals:         3       0       0       0
  2593 ;;Total ram usage:        3 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    3
  2596 ;; This function calls:
  2597 ;;		_Buffer_Write
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text16
  2604  000C4A                     __ptext16:
  2605                           	opt stack 0
  2606  000C4A                     _Package_AddData:
  2607                           	opt stack 27
  2608                           
  2609                           ;comm_protocol.c: 20: Buffer_Write(d, &p->DATA);
  2610                           
  2611                           ;incstack = 0
  2612  000C4A  0E02               	movlw	2
  2613  000C4C  2428               	addwf	Package_AddData@p,w,c
  2614  000C4E  6E21               	movwf	Buffer_Write@buff,c
  2615  000C50  0E00               	movlw	0
  2616  000C52  2029               	addwfc	Package_AddData@p+1,w,c
  2617  000C54  6E22               	movwf	Buffer_Write@buff+1,c
  2618  000C56  502A               	movf	Package_AddData@d,w,c
  2619  000C58  ECC1  F004         	call	_Buffer_Write
  2620                           
  2621                           ;comm_protocol.c: 21: p->NUM_OF_BYTES++;
  2622  000C5C  EE20 F001          	lfsr	2,1
  2623  000C60  5028               	movf	Package_AddData@p,w,c
  2624  000C62  26D9               	addwf	fsr2l,f,c
  2625  000C64  5029               	movf	Package_AddData@p+1,w,c
  2626  000C66  22DA               	addwfc	fsr2h,f,c
  2627  000C68  2ADF               	incf	indf2,f,c
  2628  000C6A  0012               	return		;funcret
  2629  000C6C                     __end_of_Package_AddData:
  2630                           	opt stack 0
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           prodh	equ	0xFF4
  2636                           prodl	equ	0xFF3
  2637                           intcon	equ	0xFF2
  2638                           postinc0	equ	0xFEE
  2639                           wreg	equ	0xFE8
  2640                           postinc1	equ	0xFE6
  2641                           postdec1	equ	0xFE5
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           indf2	equ	0xFDF
  2645                           postinc2	equ	0xFDE
  2646                           postdec2	equ	0xFDD
  2647                           fsr2h	equ	0xFDA
  2648                           fsr2l	equ	0xFD9
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _Buffer_Write *****************
  2652 ;; Defined at:
  2653 ;;		line 4 in file "ring_buffer.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  data            1    wreg     unsigned char 
  2656 ;;  buff            2   32[COMRAM] PTR volatile struct circ
  2657 ;;		 -> out(39), in(39), 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  data            1   36[COMRAM] unsigned char 
  2660 ;;  next            2   37[COMRAM] unsigned int 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;		None               void
  2663 ;; Registers used:
  2664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2670 ;;      Params:         2       0       0       0
  2671 ;;      Locals:         3       0       0       0
  2672 ;;      Temps:          2       0       0       0
  2673 ;;      Totals:         7       0       0       0
  2674 ;;Total ram usage:        7 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    2
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_Package_AddData
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text17
  2685  000982                     __ptext17:
  2686                           	opt stack 0
  2687  000982                     _Buffer_Write:
  2688                           	opt stack 27
  2689                           
  2690                           ;incstack = 0
  2691                           ;Buffer_Write@data stored from wreg
  2692  000982  6E25               	movwf	Buffer_Write@data,c
  2693                           
  2694                           ;ring_buffer.c: 6: unsigned int next = (unsigned int)(buff->head + 1) % 32;
  2695  000984  EE20 F020          	lfsr	2,32
  2696  000988  5021               	movf	Buffer_Write@buff,w,c
  2697  00098A  26D9               	addwf	fsr2l,f,c
  2698  00098C  5022               	movf	Buffer_Write@buff+1,w,c
  2699  00098E  22DA               	addwfc	fsr2h,f,c
  2700  000990  CFDE F023          	movff	postinc2,??_Buffer_Write
  2701  000994  CFDD F024          	movff	postdec2,??_Buffer_Write+1
  2702  000998  0E01               	movlw	1
  2703  00099A  2623               	addwf	??_Buffer_Write,f,c
  2704  00099C  0E00               	movlw	0
  2705  00099E  2224               	addwfc	??_Buffer_Write+1,f,c
  2706  0009A0  0E1F               	movlw	31
  2707  0009A2  1423               	andwf	??_Buffer_Write,w,c
  2708  0009A4  6E26               	movwf	Buffer_Write@next,c
  2709  0009A6  6A27               	clrf	Buffer_Write@next+1,c
  2710                           
  2711                           ;ring_buffer.c: 7: if (next != buff->tail)
  2712  0009A8  EE20 F022          	lfsr	2,34
  2713  0009AC  5021               	movf	Buffer_Write@buff,w,c
  2714  0009AE  26D9               	addwf	fsr2l,f,c
  2715  0009B0  5022               	movf	Buffer_Write@buff+1,w,c
  2716  0009B2  22DA               	addwfc	fsr2h,f,c
  2717  0009B4  5026               	movf	Buffer_Write@next,w,c
  2718  0009B6  18DE               	xorwf	postinc2,w,c
  2719  0009B8  E104               	bnz	u450
  2720  0009BA  5027               	movf	Buffer_Write@next+1,w,c
  2721  0009BC  18DE               	xorwf	postinc2,w,c
  2722  0009BE  B4D8               	btfsc	status,2,c
  2723  0009C0  D01D               	goto	l246
  2724  0009C2                     u450:
  2725                           
  2726                           ;ring_buffer.c: 8: {
  2727                           ;ring_buffer.c: 9: buff->buffer[buff->head] = data;
  2728  0009C2  EE20 F020          	lfsr	2,32
  2729  0009C6  5021               	movf	Buffer_Write@buff,w,c
  2730  0009C8  26D9               	addwf	fsr2l,f,c
  2731  0009CA  5022               	movf	Buffer_Write@buff+1,w,c
  2732  0009CC  22DA               	addwfc	fsr2h,f,c
  2733  0009CE  CFDE F023          	movff	postinc2,??_Buffer_Write
  2734  0009D2  CFDD F024          	movff	postdec2,??_Buffer_Write+1
  2735  0009D6  5023               	movf	??_Buffer_Write,w,c
  2736  0009D8  2421               	addwf	Buffer_Write@buff,w,c
  2737  0009DA  6ED9               	movwf	fsr2l,c
  2738  0009DC  5024               	movf	??_Buffer_Write+1,w,c
  2739  0009DE  2022               	addwfc	Buffer_Write@buff+1,w,c
  2740  0009E0  6EDA               	movwf	fsr2h,c
  2741  0009E2  C025  FFDF         	movff	Buffer_Write@data,indf2
  2742                           
  2743                           ;ring_buffer.c: 10: buff->head = next;
  2744  0009E6  EE20 F020          	lfsr	2,32
  2745  0009EA  5021               	movf	Buffer_Write@buff,w,c
  2746  0009EC  26D9               	addwf	fsr2l,f,c
  2747  0009EE  5022               	movf	Buffer_Write@buff+1,w,c
  2748  0009F0  22DA               	addwfc	fsr2h,f,c
  2749  0009F2  C026  FFDE         	movff	Buffer_Write@next,postinc2
  2750  0009F6  C027  FFDD         	movff	Buffer_Write@next+1,postdec2
  2751  0009FA  D000               	goto	l246
  2752  0009FC                     l246:
  2753  0009FC  0012               	return		;funcret
  2754  0009FE                     __end_of_Buffer_Write:
  2755                           	opt stack 0
  2756                           tblptru	equ	0xFF8
  2757                           tblptrh	equ	0xFF7
  2758                           tblptrl	equ	0xFF6
  2759                           tablat	equ	0xFF5
  2760                           prodh	equ	0xFF4
  2761                           prodl	equ	0xFF3
  2762                           intcon	equ	0xFF2
  2763                           postinc0	equ	0xFEE
  2764                           wreg	equ	0xFE8
  2765                           postinc1	equ	0xFE6
  2766                           postdec1	equ	0xFE5
  2767                           fsr1h	equ	0xFE2
  2768                           fsr1l	equ	0xFE1
  2769                           indf2	equ	0xFDF
  2770                           postinc2	equ	0xFDE
  2771                           postdec2	equ	0xFDD
  2772                           fsr2h	equ	0xFDA
  2773                           fsr2l	equ	0xFD9
  2774                           status	equ	0xFD8
  2775                           
  2776 ;; *************** function _InputInit *****************
  2777 ;; Defined at:
  2778 ;;		line 7 in file "input.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;		None               void
  2785 ;; Registers used:
  2786 ;;		None
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2792 ;;      Params:         0       0       0       0
  2793 ;;      Locals:         0       0       0       0
  2794 ;;      Temps:          0       0       0       0
  2795 ;;      Totals:         0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    2
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text18
  2807  000CAC                     __ptext18:
  2808                           	opt stack 0
  2809  000CAC                     _InputInit:
  2810                           	opt stack 28
  2811                           
  2812                           ;input.c: 10: TRISDbits.RD5 = 1;
  2813                           
  2814                           ;incstack = 0
  2815  000CAC  8A95               	bsf	3989,5,c	;volatile
  2816                           
  2817                           ;input.c: 11: TRISDbits.RD6 = 1;
  2818  000CAE  8C95               	bsf	3989,6,c	;volatile
  2819  000CB0  0012               	return		;funcret
  2820  000CB2                     __end_of_InputInit:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postinc1	equ	0xFE6
  2832                           postdec1	equ	0xFE5
  2833                           fsr1h	equ	0xFE2
  2834                           fsr1l	equ	0xFE1
  2835                           indf2	equ	0xFDF
  2836                           postinc2	equ	0xFDE
  2837                           postdec2	equ	0xFDD
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function _InitQEI *****************
  2843 ;; Defined at:
  2844 ;;		line 10 in file "qei.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  _QEICON         1    wreg     unsigned char 
  2847 ;;  _DFLTCON        1   32[COMRAM] unsigned char 
  2848 ;;  _MAXCNT         2   33[COMRAM] unsigned int 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  _QEICON         1   35[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;		None               void
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2860 ;;      Params:         3       0       0       0
  2861 ;;      Locals:         1       0       0       0
  2862 ;;      Temps:          0       0       0       0
  2863 ;;      Totals:         4       0       0       0
  2864 ;;Total ram usage:        4 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    2
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text19
  2875  000BA4                     __ptext19:
  2876                           	opt stack 0
  2877  000BA4                     _InitQEI:
  2878                           	opt stack 28
  2879                           
  2880                           ;incstack = 0
  2881                           ;InitQEI@_QEICON stored from wreg
  2882  000BA4  6E24               	movwf	InitQEI@_QEICON,c
  2883                           
  2884                           ;qei.c: 16: ANSEL0 = ANSEL0 & 0b11000000;
  2885  000BA6  50B8               	movf	4024,w,c	;volatile
  2886  000BA8  0BC0               	andlw	192
  2887  000BAA  6EB8               	movwf	4024,c	;volatile
  2888                           
  2889                           ;qei.c: 17: ANSEL1 = ANSEL1 & 0b00000000;
  2890  000BAC  0E00               	movlw	0
  2891  000BAE  6EB9               	movwf	4025,c	;volatile
  2892                           
  2893                           ;qei.c: 22: TRISAbits.RA2 = 1;
  2894  000BB0  8492               	bsf	3986,2,c	;volatile
  2895                           
  2896                           ;qei.c: 23: TRISAbits.RA3 = 1;
  2897  000BB2  8692               	bsf	3986,3,c	;volatile
  2898                           
  2899                           ;qei.c: 24: TRISAbits.RA4 = 1;
  2900  000BB4  8892               	bsf	3986,4,c	;volatile
  2901                           
  2902                           ;qei.c: 26: QEICON = _QEICON;
  2903  000BB6  C024  FFB6         	movff	InitQEI@_QEICON,4022	;volatile
  2904                           
  2905                           ;qei.c: 27: DFLTCON = _DFLTCON;
  2906  000BBA  C021  FF60         	movff	InitQEI@_DFLTCON,3936	;volatile
  2907                           
  2908                           ;qei.c: 28: MAXCNTL = _MAXCNT;
  2909  000BBE  C022  FF64         	movff	InitQEI@_MAXCNT,3940	;volatile
  2910                           
  2911                           ;qei.c: 29: MAXCNTH = _MAXCNT >> 8;
  2912  000BC2  5023               	movf	InitQEI@_MAXCNT+1,w,c
  2913  000BC4  6E65               	movwf	3941,c	;volatile
  2914                           
  2915                           ;qei.c: 32: POSCNTH = 0;
  2916  000BC6  0E00               	movlw	0
  2917  000BC8  6E67               	movwf	3943,c	;volatile
  2918                           
  2919                           ;qei.c: 33: POSCNTL = 0;
  2920  000BCA  0E00               	movlw	0
  2921  000BCC  6E66               	movwf	3942,c	;volatile
  2922  000BCE  0012               	return		;funcret
  2923  000BD0                     __end_of_InitQEI:
  2924                           	opt stack 0
  2925                           tblptru	equ	0xFF8
  2926                           tblptrh	equ	0xFF7
  2927                           tblptrl	equ	0xFF6
  2928                           tablat	equ	0xFF5
  2929                           prodh	equ	0xFF4
  2930                           prodl	equ	0xFF3
  2931                           intcon	equ	0xFF2
  2932                           postinc0	equ	0xFEE
  2933                           wreg	equ	0xFE8
  2934                           postinc1	equ	0xFE6
  2935                           postdec1	equ	0xFE5
  2936                           fsr1h	equ	0xFE2
  2937                           fsr1l	equ	0xFE1
  2938                           indf2	equ	0xFDF
  2939                           postinc2	equ	0xFDE
  2940                           postdec2	equ	0xFDD
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           status	equ	0xFD8
  2944                           
  2945 ;; *************** function _InitPCPWM *****************
  2946 ;; Defined at:
  2947 ;;		line 6 in file "pcpwm.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;		None               void
  2954 ;; Registers used:
  2955 ;;		wreg, status,2
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2961 ;;      Params:         0       0       0       0
  2962 ;;      Locals:         0       0       0       0
  2963 ;;      Temps:          0       0       0       0
  2964 ;;      Totals:         0       0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    2
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text20
  2976  000B6A                     __ptext20:
  2977                           	opt stack 0
  2978  000B6A                     _InitPCPWM:
  2979                           	opt stack 28
  2980                           
  2981                           ;pcpwm.c: 9: TRISB = 0x00;
  2982                           
  2983                           ;incstack = 0
  2984  000B6A  0E00               	movlw	0
  2985  000B6C  6E93               	movwf	3987,c	;volatile
  2986                           
  2987                           ;pcpwm.c: 11: TRISDbits.RD7 = 0;
  2988  000B6E  9E95               	bcf	3989,7,c	;volatile
  2989                           
  2990                           ;pcpwm.c: 13: PORTDbits.RD7 = 0;
  2991  000B70  9E83               	bcf	3971,7,c	;volatile
  2992                           
  2993                           ;pcpwm.c: 18: PTCON0 = 0b00000010;
  2994  000B72  0E02               	movlw	2
  2995  000B74  6E7F               	movwf	3967,c	;volatile
  2996                           
  2997                           ;pcpwm.c: 22: PWMCON0 = 0b00110000;
  2998  000B76  0E30               	movlw	48
  2999  000B78  6E6F               	movwf	3951,c	;volatile
  3000                           
  3001                           ;pcpwm.c: 29: PWMCON1 = 0b00000000;
  3002  000B7A  0E00               	movlw	0
  3003  000B7C  6E6E               	movwf	3950,c	;volatile
  3004                           
  3005                           ;pcpwm.c: 33: OVDCOND = 0b11111111;
  3006  000B7E  686B               	setf	3947,c	;volatile
  3007                           
  3008                           ;pcpwm.c: 37: OVDCONS = 0b00000000;
  3009  000B80  0E00               	movlw	0
  3010  000B82  6E6A               	movwf	3946,c	;volatile
  3011                           
  3012                           ;pcpwm.c: 42: FLTCONFIG = 0b00000000;
  3013  000B84  0E00               	movlw	0
  3014  000B86  6E6C               	movwf	3948,c	;volatile
  3015                           
  3016                           ;pcpwm.c: 46: PTPERL = 0x00;
  3017  000B88  0E00               	movlw	0
  3018  000B8A  6E7B               	movwf	3963,c	;volatile
  3019                           
  3020                           ;pcpwm.c: 47: PTPERH = 0x02;
  3021  000B8C  0E02               	movlw	2
  3022  000B8E  6E7A               	movwf	3962,c	;volatile
  3023                           
  3024                           ;pcpwm.c: 51: DTCON = 0b00101000;
  3025  000B90  0E28               	movlw	40
  3026  000B92  6E6D               	movwf	3949,c	;volatile
  3027                           
  3028                           ;pcpwm.c: 55: PDC0H = 0x03;
  3029  000B94  0E03               	movlw	3
  3030  000B96  6E78               	movwf	3960,c	;volatile
  3031                           
  3032                           ;pcpwm.c: 56: PDC0L = 0xff;
  3033  000B98  6879               	setf	3961,c	;volatile
  3034                           
  3035                           ;pcpwm.c: 60: PDC1H = 0x03;
  3036  000B9A  0E03               	movlw	3
  3037  000B9C  6E76               	movwf	3958,c	;volatile
  3038                           
  3039                           ;pcpwm.c: 61: PDC1L = 0xff;
  3040  000B9E  6877               	setf	3959,c	;volatile
  3041                           
  3042                           ;pcpwm.c: 65: PTCON1bits.PTEN = 1;
  3043  000BA0  8E7E               	bsf	3966,7,c	;volatile
  3044  000BA2  0012               	return		;funcret
  3045  000BA4                     __end_of_InitPCPWM:
  3046                           	opt stack 0
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           prodh	equ	0xFF4
  3052                           prodl	equ	0xFF3
  3053                           intcon	equ	0xFF2
  3054                           postinc0	equ	0xFEE
  3055                           wreg	equ	0xFE8
  3056                           postinc1	equ	0xFE6
  3057                           postdec1	equ	0xFE5
  3058                           fsr1h	equ	0xFE2
  3059                           fsr1l	equ	0xFE1
  3060                           indf2	equ	0xFDF
  3061                           postinc2	equ	0xFDE
  3062                           postdec2	equ	0xFDD
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function _IR2110Disable *****************
  3068 ;; Defined at:
  3069 ;;		line 99 in file "pcpwm.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;		None               void
  3076 ;; Registers used:
  3077 ;;		None
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3083 ;;      Params:         0       0       0       0
  3084 ;;      Locals:         0       0       0       0
  3085 ;;      Temps:          0       0       0       0
  3086 ;;      Totals:         0       0       0       0
  3087 ;;Total ram usage:        0 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    2
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text21
  3098  000CB6                     __ptext21:
  3099                           	opt stack 0
  3100  000CB6                     _IR2110Disable:
  3101                           	opt stack 28
  3102                           
  3103                           ;pcpwm.c: 101: PORTDbits.RD7 = 0;
  3104                           
  3105                           ;incstack = 0
  3106  000CB6  9E83               	bcf	3971,7,c	;volatile
  3107  000CB8  0012               	return		;funcret
  3108  000CBA                     __end_of_IR2110Disable:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           intcon	equ	0xFF2
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postinc1	equ	0xFE6
  3120                           postdec1	equ	0xFE5
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           indf2	equ	0xFDF
  3124                           postinc2	equ	0xFDE
  3125                           postdec2	equ	0xFDD
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _DCBrake_PWMInit *****************
  3131 ;; Defined at:
  3132 ;;		line 8 in file "dc_brake.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3146 ;;      Params:         0       0       0       0
  3147 ;;      Locals:         0       0       0       0
  3148 ;;      Temps:          0       0       0       0
  3149 ;;      Totals:         0       0       0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text22
  3161  000C84                     __ptext22:
  3162                           	opt stack 0
  3163  000C84                     _DCBrake_PWMInit:
  3164                           	opt stack 28
  3165                           
  3166                           ;dc_brake.c: 10: TRISCbits.RC2 = 1;
  3167                           
  3168                           ;incstack = 0
  3169  000C84  8494               	bsf	3988,2,c	;volatile
  3170                           
  3171                           ;dc_brake.c: 11: PR2 = 127;
  3172  000C86  0E7F               	movlw	127
  3173  000C88  6ECB               	movwf	4043,c	;volatile
  3174                           
  3175                           ;dc_brake.c: 12: CCP1CON = 0b00001100;
  3176  000C8A  0E0C               	movlw	12
  3177  000C8C  6EBD               	movwf	4029,c	;volatile
  3178                           
  3179                           ;dc_brake.c: 13: CCPR1L = 0x00;
  3180  000C8E  0E00               	movlw	0
  3181  000C90  6EBE               	movwf	4030,c	;volatile
  3182                           
  3183                           ;dc_brake.c: 14: T2CON = 0b00000101;
  3184  000C92  0E05               	movlw	5
  3185  000C94  6ECA               	movwf	4042,c	;volatile
  3186  000C96  0012               	return		;funcret
  3187  000C98                     __end_of_DCBrake_PWMInit:
  3188                           	opt stack 0
  3189                           tblptru	equ	0xFF8
  3190                           tblptrh	equ	0xFF7
  3191                           tblptrl	equ	0xFF6
  3192                           tablat	equ	0xFF5
  3193                           prodh	equ	0xFF4
  3194                           prodl	equ	0xFF3
  3195                           intcon	equ	0xFF2
  3196                           postinc0	equ	0xFEE
  3197                           wreg	equ	0xFE8
  3198                           postinc1	equ	0xFE6
  3199                           postdec1	equ	0xFE5
  3200                           fsr1h	equ	0xFE2
  3201                           fsr1l	equ	0xFE1
  3202                           indf2	equ	0xFDF
  3203                           postinc2	equ	0xFDE
  3204                           postdec2	equ	0xFDD
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           
  3209 ;; *************** function _DCBrake_Catch *****************
  3210 ;; Defined at:
  3211 ;;		line 40 in file "dc_brake.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		None
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3225 ;;      Params:         0       0       0       0
  3226 ;;      Locals:         0       0       0       0
  3227 ;;      Temps:          0       0       0       0
  3228 ;;      Totals:         0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    2
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text23
  3240  000CBA                     __ptext23:
  3241                           	opt stack 0
  3242  000CBA                     _DCBrake_Catch:
  3243                           	opt stack 28
  3244                           
  3245                           ;dc_brake.c: 42: TRISCbits.RC2 = 1;
  3246                           
  3247                           ;incstack = 0
  3248  000CBA  8494               	bsf	3988,2,c	;volatile
  3249  000CBC  0012               	return		;funcret
  3250  000CBE                     __end_of_DCBrake_Catch:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           prodh	equ	0xFF4
  3257                           prodl	equ	0xFF3
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           postinc1	equ	0xFE6
  3262                           postdec1	equ	0xFE5
  3263                           fsr1h	equ	0xFE2
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           postdec2	equ	0xFDD
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8
  3271                           
  3272 ;; *************** function _LowIsr *****************
  3273 ;; Defined at:
  3274 ;;		line 60 in file "main.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  a               1   31[COMRAM] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		None
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3288 ;;      Params:         0       0       0       0
  3289 ;;      Locals:         1       0       0       0
  3290 ;;      Temps:         17       0       0       0
  3291 ;;      Totals:        18       0       0       0
  3292 ;;Total ram usage:       18 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		Interrupt level 1
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	intcodelo
  3303  000018                     __pintcodelo:
  3304                           	opt stack 0
  3305  000018                     _LowIsr:
  3306                           	opt stack 26
  3307                           
  3308                           ;incstack = 0
  3309  000018  CFD8 F00F          	movff	status,??_LowIsr
  3310  00001C  CFE8 F010          	movff	wreg,??_LowIsr+1
  3311  000020  CFE0 F011          	movff	bsr,??_LowIsr+2
  3312  000024  CFFA F012          	movff	pclath,??_LowIsr+3
  3313  000028  CFFB F013          	movff	pclatu,??_LowIsr+4
  3314  00002C  CFE9 F014          	movff	fsr0l,??_LowIsr+5
  3315  000030  CFEA F015          	movff	fsr0h,??_LowIsr+6
  3316  000034  CFE1 F016          	movff	fsr1l,??_LowIsr+7
  3317  000038  CFE2 F017          	movff	fsr1h,??_LowIsr+8
  3318  00003C  CFD9 F018          	movff	fsr2l,??_LowIsr+9
  3319  000040  CFDA F019          	movff	fsr2h,??_LowIsr+10
  3320  000044  CFF3 F01A          	movff	prodl,??_LowIsr+11
  3321  000048  CFF4 F01B          	movff	prodh,??_LowIsr+12
  3322  00004C  CFF6 F01C          	movff	tblptrl,??_LowIsr+13
  3323  000050  CFF7 F01D          	movff	tblptrh,??_LowIsr+14
  3324  000054  CFF8 F01E          	movff	tblptru,??_LowIsr+15
  3325  000058  CFF5 F01F          	movff	tablat,??_LowIsr+16
  3326                           
  3327                           ;main.c: 62: if (PIR1bits.RCIF && PIE1bits.RCIE)
  3328  00005C  BA9E               	btfsc	3998,5,c	;volatile
  3329  00005E  AA9D               	btfss	3997,5,c	;volatile
  3330  000060  D003               	goto	i1l48
  3331                           
  3332                           ;main.c: 63: {
  3333                           ;main.c: 64: unsigned char a = RCREG;
  3334  000062  CFAE F020          	movff	4014,LowIsr@a	;volatile
  3335  000066  D000               	goto	i1l48
  3336  000068                     i1l48:
  3337  000068  C01F  FFF5         	movff	??_LowIsr+16,tablat
  3338  00006C  C01E  FFF8         	movff	??_LowIsr+15,tblptru
  3339  000070  C01D  FFF7         	movff	??_LowIsr+14,tblptrh
  3340  000074  C01C  FFF6         	movff	??_LowIsr+13,tblptrl
  3341  000078  C01B  FFF4         	movff	??_LowIsr+12,prodh
  3342  00007C  C01A  FFF3         	movff	??_LowIsr+11,prodl
  3343  000080  C019  FFDA         	movff	??_LowIsr+10,fsr2h
  3344  000084  C018  FFD9         	movff	??_LowIsr+9,fsr2l
  3345  000088  C017  FFE2         	movff	??_LowIsr+8,fsr1h
  3346  00008C  C016  FFE1         	movff	??_LowIsr+7,fsr1l
  3347  000090  C015  FFEA         	movff	??_LowIsr+6,fsr0h
  3348  000094  C014  FFE9         	movff	??_LowIsr+5,fsr0l
  3349  000098  C013  FFFB         	movff	??_LowIsr+4,pclatu
  3350  00009C  C012  FFFA         	movff	??_LowIsr+3,pclath
  3351  0000A0  C011  FFE0         	movff	??_LowIsr+2,bsr
  3352  0000A4  C010  FFE8         	movff	??_LowIsr+1,wreg
  3353  0000A8  C00F  FFD8         	movff	??_LowIsr,status
  3354  0000AC  0010               	retfie	
  3355  0000AE                     __end_of_LowIsr:
  3356                           	opt stack 0
  3357                           pclatu	equ	0xFFB
  3358                           pclath	equ	0xFFA
  3359                           tblptru	equ	0xFF8
  3360                           tblptrh	equ	0xFF7
  3361                           tblptrl	equ	0xFF6
  3362                           tablat	equ	0xFF5
  3363                           prodh	equ	0xFF4
  3364                           prodl	equ	0xFF3
  3365                           intcon	equ	0xFF2
  3366                           postinc0	equ	0xFEE
  3367                           fsr0h	equ	0xFEA
  3368                           fsr0l	equ	0xFE9
  3369                           wreg	equ	0xFE8
  3370                           postinc1	equ	0xFE6
  3371                           postdec1	equ	0xFE5
  3372                           fsr1h	equ	0xFE2
  3373                           fsr1l	equ	0xFE1
  3374                           bsr	equ	0xFE0
  3375                           indf2	equ	0xFDF
  3376                           postinc2	equ	0xFDE
  3377                           postdec2	equ	0xFDD
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function _HighIsr *****************
  3383 ;; Defined at:
  3384 ;;		line 69 in file "main.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;		None               void
  3391 ;; Registers used:
  3392 ;;		None
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3398 ;;      Params:         0       0       0       0
  3399 ;;      Locals:         0       0       0       0
  3400 ;;      Temps:         14       0       0       0
  3401 ;;      Totals:        14       0       0       0
  3402 ;;Total ram usage:       14 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		Interrupt level 2
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	intcode
  3412  000008                     __pintcode:
  3413                           	opt stack 0
  3414  000008                     _HighIsr:
  3415                           	opt stack 26
  3416                           
  3417                           ;incstack = 0
  3418  000008  CFFA F001          	movff	pclath,??_HighIsr
  3419  00000C  CFFB F002          	movff	pclatu,??_HighIsr+1
  3420  000010  CFE9 F003          	movff	fsr0l,??_HighIsr+2
  3421  000014  EFFF  F004         	goto	int_func
  3422                           pclatu	equ	0xFFB
  3423                           pclath	equ	0xFFA
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           prodh	equ	0xFF4
  3429                           prodl	equ	0xFF3
  3430                           intcon	equ	0xFF2
  3431                           postinc0	equ	0xFEE
  3432                           fsr0h	equ	0xFEA
  3433                           fsr0l	equ	0xFE9
  3434                           wreg	equ	0xFE8
  3435                           postinc1	equ	0xFE6
  3436                           postdec1	equ	0xFE5
  3437                           fsr1h	equ	0xFE2
  3438                           fsr1l	equ	0xFE1
  3439                           bsr	equ	0xFE0
  3440                           indf2	equ	0xFDF
  3441                           postinc2	equ	0xFDE
  3442                           postdec2	equ	0xFDD
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447                           	psect	intcode_body
  3448  0009FE                     __pintcode_body:
  3449                           	opt stack 26
  3450  0009FE                     int_func:
  3451                           	opt stack 26
  3452  0009FE  CFEA F004          	movff	fsr0h,??_HighIsr+3
  3453  000A02  CFE1 F005          	movff	fsr1l,??_HighIsr+4
  3454  000A06  CFE2 F006          	movff	fsr1h,??_HighIsr+5
  3455  000A0A  CFD9 F007          	movff	fsr2l,??_HighIsr+6
  3456  000A0E  CFDA F008          	movff	fsr2h,??_HighIsr+7
  3457  000A12  CFF3 F009          	movff	prodl,??_HighIsr+8
  3458  000A16  CFF4 F00A          	movff	prodh,??_HighIsr+9
  3459  000A1A  CFF6 F00B          	movff	tblptrl,??_HighIsr+10
  3460  000A1E  CFF7 F00C          	movff	tblptrh,??_HighIsr+11
  3461  000A22  CFF8 F00D          	movff	tblptru,??_HighIsr+12
  3462  000A26  CFF5 F00E          	movff	tablat,??_HighIsr+13
  3463  000A2A  C00E  FFF5         	movff	??_HighIsr+13,tablat
  3464  000A2E  C00D  FFF8         	movff	??_HighIsr+12,tblptru
  3465  000A32  C00C  FFF7         	movff	??_HighIsr+11,tblptrh
  3466  000A36  C00B  FFF6         	movff	??_HighIsr+10,tblptrl
  3467  000A3A  C00A  FFF4         	movff	??_HighIsr+9,prodh
  3468  000A3E  C009  FFF3         	movff	??_HighIsr+8,prodl
  3469  000A42  C008  FFDA         	movff	??_HighIsr+7,fsr2h
  3470  000A46  C007  FFD9         	movff	??_HighIsr+6,fsr2l
  3471  000A4A  C006  FFE2         	movff	??_HighIsr+5,fsr1h
  3472  000A4E  C005  FFE1         	movff	??_HighIsr+4,fsr1l
  3473  000A52  C004  FFEA         	movff	??_HighIsr+3,fsr0h
  3474  000A56  C003  FFE9         	movff	??_HighIsr+2,fsr0l
  3475  000A5A  C002  FFFB         	movff	??_HighIsr+1,pclatu
  3476  000A5E  C001  FFFA         	movff	??_HighIsr,pclath
  3477  000A62  0011               	retfie		f
  3478  000A64                     __end_of_HighIsr:
  3479                           	opt stack 0
  3480                           pclatu	equ	0xFFB
  3481                           pclath	equ	0xFFA
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           prodh	equ	0xFF4
  3487                           prodl	equ	0xFF3
  3488                           intcon	equ	0xFF2
  3489                           postinc0	equ	0xFEE
  3490                           fsr0h	equ	0xFEA
  3491                           fsr0l	equ	0xFE9
  3492                           wreg	equ	0xFE8
  3493                           postinc1	equ	0xFE6
  3494                           postdec1	equ	0xFE5
  3495                           fsr1h	equ	0xFE2
  3496                           fsr1l	equ	0xFE1
  3497                           bsr	equ	0xFE0
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           postdec2	equ	0xFDD
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           pclatu	equ	0xFFB
  3505                           pclath	equ	0xFFA
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           postinc0	equ	0xFEE
  3514                           fsr0h	equ	0xFEA
  3515                           fsr0l	equ	0xFE9
  3516                           wreg	equ	0xFE8
  3517                           postinc1	equ	0xFE6
  3518                           postdec1	equ	0xFE5
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           bsr	equ	0xFE0
  3522                           indf2	equ	0xFDF
  3523                           postinc2	equ	0xFDE
  3524                           postdec2	equ	0xFDD
  3525                           fsr2h	equ	0xFDA
  3526                           fsr2l	equ	0xFD9
  3527                           status	equ	0xFD8
  3528                           
  3529                           	psect	rparam
  3530  0000                     pclatu	equ	0xFFB
  3531                           pclath	equ	0xFFA
  3532                           tblptru	equ	0xFF8
  3533                           tblptrh	equ	0xFF7
  3534                           tblptrl	equ	0xFF6
  3535                           tablat	equ	0xFF5
  3536                           prodh	equ	0xFF4
  3537                           prodl	equ	0xFF3
  3538                           intcon	equ	0xFF2
  3539                           postinc0	equ	0xFEE
  3540                           fsr0h	equ	0xFEA
  3541                           fsr0l	equ	0xFE9
  3542                           wreg	equ	0xFE8
  3543                           postinc1	equ	0xFE6
  3544                           postdec1	equ	0xFE5
  3545                           fsr1h	equ	0xFE2
  3546                           fsr1l	equ	0xFE1
  3547                           bsr	equ	0xFE0
  3548                           indf2	equ	0xFDF
  3549                           postinc2	equ	0xFDE
  3550                           postdec2	equ	0xFDD
  3551                           fsr2h	equ	0xFDA
  3552                           fsr2l	equ	0xFD9
  3553                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    5
    Data        78
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     62      62
    BANK0           160     22     100
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    Package_AddData@p	PTR volatile struct package size(2) Largest target is 39
		 -> out(BANK0[39]), in(BANK0[39]), 

    Package_Send@p	PTR volatile struct package size(2) Largest target is 39
		 -> out(BANK0[39]), in(BANK0[39]), 

    Buffer_GetCRC8@buff	PTR volatile struct circular_buffer size(2) Largest target is 39
		 -> out(BANK0[39]), in(BANK0[39]), 

    Buffer_Read@buff	PTR volatile struct circular_buffer size(2) Largest target is 39
		 -> out(BANK0[39]), in(BANK0[39]), 

    Buffer_Write@buff	PTR volatile struct circular_buffer size(2) Largest target is 39
		 -> out(BANK0[39]), in(BANK0[39]), 


Critical Paths under _main in COMRAM

    _SetDCBrake_NominalVoltage->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft
    _SetDCBrake_PWMDuty->___fttol
    _Package_Send->_Buffer_GetCRC8
    _Package_AddData->_Buffer_Write

Critical Paths under _LowIsr in COMRAM

    None.

Critical Paths under _HighIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_SetDCBrake_NominalVoltage
    _SetDCBrake_NominalVoltage->_SetDCBrake_PWMDuty
    _SetDCBrake_PWMDuty->___fttol

Critical Paths under _LowIsr in BANK0

    None.

Critical Paths under _HighIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowIsr in BANK1

    None.

Critical Paths under _HighIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowIsr in BANK2

    None.

Critical Paths under _HighIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8018
                      _DCBrake_Catch
                    _DCBrake_PWMInit
                      _IR2110Disable
                          _InitPCPWM
                            _InitQEI
                          _InputInit
                    _Package_AddData
                       _Package_Send
          _SetDCBrake_NominalVoltage
                        _SetPWM1Duty
                        _SetPWM2Duty
           _UARTAddressDetection_OFF
                           _UARTInit
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     174
                                             32 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                            10     6      4     135
                                             32 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _UARTAddressDetection_OFF                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPWM2Duty                                          2     0      2     108
                                             32 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetPWM1Duty                                          2     0      2     108
                                             32 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetDCBrake_NominalVoltage                            7     3      4    5457
                                             15 BANK0      7     3      4
                 _SetDCBrake_PWMDuty
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2142
                                             40 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             58 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2630
                                             43 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             32 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetDCBrake_PWMDuty                                   4     2      2     130
                                             11 BANK0      4     2      2
                            ___ftdiv (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _Package_Send                                         4     2      2     745
                                             40 COMRAM     3     1      2
                     _Buffer_GetCRC8
                        _Buffer_Read
                       _UARTSendByte
 ---------------------------------------------------------------------------------
 (2) _UARTSendByte                                         1     1      0      22
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Buffer_Read                                          7     5      2     219
                                             32 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _Buffer_GetCRC8                                       8     6      2     222
                                             32 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _Package_AddData                                      3     0      3    1075
                                             39 COMRAM     3     0      3
                       _Buffer_Write
 ---------------------------------------------------------------------------------
 (2) _Buffer_Write                                         7     5      2     241
                                             32 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _InputInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitQEI                                              4     1      3     216
                                             32 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _InitPCPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR2110Disable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCBrake_PWMInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCBrake_Catch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowIsr                                              18    18      0       0
                                             14 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighIsr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DCBrake_Catch
   _DCBrake_PWMInit
   _IR2110Disable
   _InitPCPWM
   _InitQEI
   _InputInit
   _Package_AddData
     _Buffer_Write
   _Package_Send
     _Buffer_GetCRC8
     _Buffer_Read
     _UARTSendByte
   _SetDCBrake_NominalVoltage
     _SetDCBrake_PWMDuty
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _SetPWM1Duty
   _SetPWM2Duty
   _UARTAddressDetection_OFF
   _UARTInit
   _delay_ms

 _LowIsr (ROOT)

 _HighIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      64       5       62.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3E      3E       1       65.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A2       3        0.0%
DATA                 0      0      A2      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jul 03 01:00:53 2015

                              UARTInit@baudrate 0021                     ??_SetDCBrake_NominalVoltage 003F  
                                            l61 0442                                              l54 0C16  
                                            l96 0712                                              _in 0060  
                                            bsr 000FE0                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                         __end_of_Package_AddData 0C6C  
                                           l104 0C70                                             l107 0C7C  
                                           l250 0904                                             l218 0878  
                                           l246 09FC                                             l257 0B1A  
                                           l660 0614                                             l822 0C48  
                                           l585 07E4                                             l657 0648  
                                           l596 07BC                                             l693 0566  
                                 ?_Package_Send 0029                                    __CFG_CPB$OFF 000000  
                                           u501 0596                                             _PR2 000FCB  
                                           u450 09C2                                    __CFG_CPD$OFF 000000  
                                           u531 045C                                             u550 0496  
                                           u481 0578                                             u555 048C  
                                           u647 0C0A                                 Buffer_GetCRC8@i 0027  
                                           _out 0087                                             wreg 000FE8  
                                  __CFG_IESO$ON 000000                                    __CFG_LVP$OFF 000000  
                                  ___ftdiv@cntr 0035                                    ___ftdiv@sign 003A  
                                          l1320 076C                                            l1312 0730  
                                          l1340 07D6                                            l1324 0784  
                                          l1316 0740                                            l1500 067A  
                                          l1334 07C4                                            l1326 07A4  
                                          l1318 074C                                            l1414 05EE  
                                          l1502 0682                                            l1328 07B0  
                                          l1424 0622                                            l1362 08A4  
                                          l1434 0470                                            l1506 068C  
                                          l1372 0ADE                                            l1452 04E6  
                                          l1622 0938                                            l1390 05A0  
                                          l1470 0554                                            l1462 0516  
                                          l1376 0AF8                                            l1464 0528  
                                          l1456 04FA                                            l1480 0C04  
                                          l1626 095C                                            l1394 05AE  
                                          l1458 0502                                            l1466 0536  
                                          l1562 07FE                                            l1388 0586  
                                          l1494 0662                                            l1496 066A  
                                          l1498 0672                                            l1860 06EC  
                                          l1862 06FE                                            l1864 06BC  
                                          l1856 06A6                                            l1858 06DA  
                                          l1866 06C6                                            l1868 06D0  
                                          i1l48 0068                                   __CFG_FCMEN$ON 000000  
                                          _main 0308                                    ___ftpack@arg 0021  
                                  ___ftpack@exp 0024                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            fsr0l 000FE9  
                                          fsr2h 000FDA                                            fsr1l 000FE1  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          pclat 000FFA                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00AE  
                               __end_of_HighIsr 0A64                                   __CFG_MCLRE$ON 000000  
                                  ___param_bank 000010                             __end_of_Buffer_Read 0906  
                               __end_of_InitQEI 0BD0                        _UARTAddressDetection_OFF 0CB2  
                               Buffer_Read@data 0027                                 Buffer_Read@buff 0021  
                                  ___fttol@exp1 00B8                                    ___fttol@lval 00B4  
                                ??_Package_Send 002B                                           ?_main 0001  
                               __end_of___ftdiv 064A                                 __end_of___fttol 0568  
                                         _T2CON 000FCA                                           _PDC0H 000F78  
                                         _PDC1H 000F76                                           _PDC0L 000F79  
                                         _DTCON 000F6D                                           _PDC1L 000F77  
                                         _RCREG 000FAE                                           _RCSTA 000FAB  
                                         _SPBRG 000FAF                               Buffer_GetCRC8@CRC 0028  
                                         _TRISB 000F93                                           _TXREG 000FAD  
                                         _TXSTA 000FAC                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                __end_of_UARTInit 0720  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                   ??_SetPWM1Duty 0023  
                                 ??_SetPWM2Duty 0023                                  __CFG_EBTRB$OFF 000000  
                     _SetDCBrake_NominalVoltage 07E6                                   ___ftpack@sign 0025  
                                __CFG_BOREN$OFF 000000                                           tablat 000FF5  
                                         status 000FD8                                 __initialization 0BD0  
                                __CFG_HPOL$HIGH 000000                                    __end_of_main 0448  
                          __end_of_Buffer_Write 09FE                                  __CFG_OSC$HSPLL 000000  
                                __CFG_LPOL$HIGH 000000                                          ??_main 003F  
                                 ___fttol@sign1 00B3                                ?_Package_AddData 0028  
                                 __activetblptr 000002                                          _CCPR1L 000FBE  
                                        _ANSEL0 000FB8                                          _ANSEL1 000FB9  
                              __end_of___ftpack 07E6                              __size_of_InitPCPWM 003A  
                                __CFG_WDTEN$OFF 000000                                          _QEICON 000FB6  
                              __end_of_fVersion 0306                                __end_of___lwtoft 0C4A  
                                        _PTCON0 000F7F                                  __CFG_WINEN$OFF 000000  
                                        _SPBRGH 000FB0                                       ??_HighIsr 0001  
                                        _PTPERH 000F7A                                          _PTPERL 000F7B  
                                   _Buffer_Read 087A                           __end_of_DCBrake_Catch 0CBE  
                           __end_of_SetPWM1Duty 0CAC                             __end_of_SetPWM2Duty 0CA2  
                                     ??_InitQEI 0024                                __end_of_delay_ms 0C24  
                            Buffer_GetCRC8@buff 0021                                  __CFG_PWRTEN$ON 000000  
                                __CFG_SSPMX$RD1 000000                                          _LowIsr 0018  
                            __size_of_InputInit 0006                                  __CFG_STVREN$ON 000000  
                                     ??___ftdiv 0032                                       ??___fttol 00AE  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                   Package_Send@p 0029  
                                        tblptru 000FF8                        __size_of_DCBrake_PWMInit 0014  
                        __size_of_IR2110Disable 0004                                      __accesstop 0060  
                       __end_of__initialization 0BF0                                 __CFG_FLTAMX$RC1 000000  
                          __end_of_Package_Send 0982                                   ___rparam_used 000001  
                                    ___ftdiv@f1 002C                                      ___ftdiv@f2 002F  
                                    ___ftdiv@f3 0036                                 __CFG_T1OSCMX$ON 000000  
                                    ___fttol@f1 003B                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 0B1C                                       ?_UARTInit 0021  
                             __end_of_InitPCPWM 0BA4                                  InitQEI@_MAXCNT 0022  
                              Buffer_Write@data 0025                                  InitQEI@_QEICON 0024  
                              Buffer_Write@buff 0021                                      ___lwtoft@c 0029  
                              Buffer_Write@next 0026                         __size_of_Buffer_GetCRC8 0054  
                             __end_of_InputInit 0CB2                                     _SetPWM1Duty 0CA2  
                                   _SetPWM2Duty 0C98                      ??_UARTAddressDetection_OFF 0021  
SetDCBrake_NominalVoltage@DCBrakeNominalVoltage 00BD                     __size_of_SetDCBrake_PWMDuty 0064  
            __size_of_SetDCBrake_NominalVoltage 0094                           __size_of_Buffer_Write 007C  
                                       ?_LowIsr 0001                                   _IR2110Disable 0CB6  
                                    ??_UARTInit 0025                                 __CFG_WDPS$32768 000000  
                                       _CCP1CON 000FBD                                       ?___ftpack 0021  
                                       _DFLTCON 000F60                                       ?___lwtoft 0029  
                               __CFG_PWM4MX$RB5 000000                                         _MAXCNTH 000F65  
                                       _MAXCNTL 000F64                                       ?_delay_ms 0021  
                                       _OVDCOND 000F6B                                         _OVDCONS 000F6A  
                                       _POSCNTH 000F67                                         _POSCNTL 000F66  
      SetDCBrake_NominalVoltage@HVSupplyVoltage 00BF                                         _PWMCON0 000F6F  
                                       _PWMCON1 000F6E                                    _Buffer_Write 0982  
                               __CFG_PWMPIN$OFF 000000                                   ?_UARTSendByte 0001  
                              UARTSendByte@data 0021                               ??_DCBrake_PWMInit 0021  
                                       _HighIsr 0008                                         LowIsr@a 0020  
                                       _InitQEI 0BA4                                         __Hparam 0000  
                                       __Lparam 0000                                 __size_of_LowIsr 0096  
                                ?_IR2110Disable 0001                                         ___ftdiv 0568  
                                       ___fttol 0448                                    __psmallconst 0300  
                                       __pcinit 0BD0                                      ??___ftpack 0026  
                                       __ramtop 0300                                         __ptext0 0308  
                                       __ptext1 0BFA                                         __ptext2 064A  
                                       __ptext3 0CB2                                         __ptext4 0C98  
                                       __ptext5 0CA2                                         __ptext6 07E6  
                                       __ptext7 0C24                                         __ptext8 0448  
                                       __ptext9 0568                                      ??___lwtoft 002C  
                                     _FLTCONFIG 000F6C                          SetDCBrake_PWMDuty@duty 00B9  
                                    ??_delay_ms 0023            SetDCBrake_NominalVoltage@sPWMQuantum 00C1  
                         __size_of_Package_Send 007C                                  __pintcode_body 09FE  
                          end_of_initialization 0BF0                                  ??_UARTSendByte 0021  
                                 __Lmediumconst 0000                                         int_func 09FE  
                                  ?_Buffer_Read 0021                                       _RCSTAbits 000FAB  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                  _Buffer_GetCRC8 0AC8  
                                     _PORTDbits 000F83                                    _Package_Send 0906  
                                     _TRISAbits 000F92                                       _TRISCbits 000F94  
                                     _TRISDbits 000F95                        __size_of_Package_AddData 0022  
                               UARTInit@divisor 0029                                     _CCP1CONbits 000FBD  
                                   ___ftdiv@exp 0039                                       _TXSTAbits 000FAC  
                               ??_IR2110Disable 0021                                  __end_of_LowIsr 00AE  
                              __CFG_EXCLKMX$RC3 000000                          __end_of_Buffer_GetCRC8 0B1C  
                                 delay_ms@delay 0021                                     _BAUDCONbits 000FAA  
                             __size_of_UARTInit 00D6                                     _BAUDCTLbits 000FAA  
                               InitQEI@_DFLTCON 0021                                       _InitPCPWM 0B6A  
                        __size_of_DCBrake_Catch 0004                             start_initialization 0BD0  
                                  ?_SetPWM1Duty 0021                                    ?_SetPWM2Duty 0021  
                                     _InputInit 0CAC                                        ??_LowIsr 000F  
                                   __pdataBANK0 0060                                 ?_Buffer_GetCRC8 0021  
                          __end_of_UARTSendByte 0C84                               __size_of___ftpack 00C6  
                                    ?_InitPCPWM 0001                                 _DCBrake_PWMInit 0C84  
                             __size_of___lwtoft 0026                                   __pcstackBANK0 00AE  
                             __size_of_delay_ms 002A                                      ?_InputInit 0001  
                    __end_of_SetDCBrake_PWMDuty 0AC8                                        ?_HighIsr 0001  
                                      ?_InitQEI 0021                               ??_Package_AddData 002B  
                                 _DCBrake_Catch 0CBA                            __size_of_Buffer_Read 008C  
                                     __pintcode 0008                                        ?___ftdiv 002C  
                                      ?___fttol 003B                                     __pintcodelo 0018  
             __size_of_UARTAddressDetection_OFF 0004                       ?_UARTAddressDetection_OFF 0001  
                                   __smallconst 0300                                  ?_DCBrake_Catch 0001  
                                     delay_ms@i 0024                                        _IPR1bits 000F9F  
                                      _PIE1bits 000F9D                                SetPWM1Duty@_PDC0 0021  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                    ?_SetDCBrake_NominalVoltage 00BD                                        _UARTInit 064A  
                       __end_of_DCBrake_PWMInit 0C98                                SetPWM2Duty@_PDC1 0021  
                                   ??_InitPCPWM 0021                                Package_AddData@d 002A  
                              Package_AddData@p 0028                                       copy_data0 0BE4  
                                   ??_InputInit 0021                            __size_of_SetPWM1Duty 000A  
                          __size_of_SetPWM2Duty 000A                                __size_of_HighIsr 0A5C  
                              __size_of_InitQEI 002C                                        __Hrparam 0000  
                                      __Lrparam 0000                           __size_of_UARTSendByte 0018  
             __end_of_SetDCBrake_NominalVoltage 087A                                __size_of___ftdiv 00E2  
                              __size_of___fttol 0120                                        ___ftpack 0720  
                                      _fVersion 0301                                        ___lwtoft 0C24  
                                      _delay_ms 0BFA                                        __ptext10 0720  
                                      __ptext11 0A64                                        __ptext20 0B6A  
                                      __ptext12 0906                                        __ptext21 0CB6  
                                      __ptext13 0C6C                                        __ptext22 0C84  
                                      __ptext14 087A                                        __ptext23 0CBA  
                                      __ptext15 0AC8                                        __ptext16 0C4A  
                                      __ptext17 0982                                        __ptext18 0CAC  
                                      __ptext19 0BA4                                 ??_DCBrake_Catch 0021  
                                  _UARTSendByte 0C6C                                   __size_of_main 0140  
                              ??_Buffer_GetCRC8 0023                           __end_of_IR2110Disable 0CBA  
                              ?_DCBrake_PWMInit 0001                                      _INTCONbits 000FF2  
                               _Package_AddData 0C4A                                   ?_Buffer_Write 0021  
                                      intlevel1 0000                                        intlevel2 0000  
              __end_of_UARTAddressDetection_OFF 0CB6                              _SetDCBrake_PWMDuty 0A64  
                                    _PTCON1bits 000F7E                             ?_SetDCBrake_PWMDuty 00B9  
                                ??_Buffer_Write 0023                                   ??_Buffer_Read 0023  
                          ??_SetDCBrake_PWMDuty 00BB  
