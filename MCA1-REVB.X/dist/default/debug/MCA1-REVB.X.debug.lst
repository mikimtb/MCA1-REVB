

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 04 00:52:09 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  000E70                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _in
    58  000E70  78                 	db	120
    59  000E71  00                 	db	0
    60  000E72  00                 	db	0
    61  000E73  00                 	db	0
    62  000E74  00                 	db	0
    63  000E75  00                 	db	0
    64  000E76  00                 	db	0
    65  000E77  00                 	db	0
    66  000E78  00                 	db	0
    67  000E79  00                 	db	0
    68  000E7A  00                 	db	0
    69  000E7B  00                 	db	0
    70  000E7C  00                 	db	0
    71  000E7D  00                 	db	0
    72  000E7E  00                 	db	0
    73  000E7F  00                 	db	0
    74  000E80  00                 	db	0
    75  000E81  00                 	db	0
    76  000E82  00                 	db	0
    77  000E83  00                 	db	0
    78  000E84  00                 	db	0
    79  000E85  00                 	db	0
    80  000E86  00                 	db	0
    81  000E87  00                 	db	0
    82  000E88  00                 	db	0
    83  000E89  00                 	db	0
    84  000E8A  00                 	db	0
    85  000E8B  00                 	db	0
    86  000E8C  00                 	db	0
    87  000E8D  00                 	db	0
    88  000E8E  00                 	db	0
    89  000E8F  00                 	db	0
    90  000E90  00                 	db	0
    91  000E91  00                 	db	0
    92  000E92  0000               	dw	0
    93  000E94  0000               	dw	0
    94  000E96  00                 	db	0
    95                           
    96                           	psect	idataBANK0
    97  000E97                     __pidataBANK0:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _out
   101  000E97  82                 	db	130
   102  000E98  00                 	db	0
   103  000E99  00                 	db	0
   104  000E9A  00                 	db	0
   105  000E9B  00                 	db	0
   106  000E9C  00                 	db	0
   107  000E9D  00                 	db	0
   108  000E9E  00                 	db	0
   109  000E9F  00                 	db	0
   110  000EA0  00                 	db	0
   111  000EA1  00                 	db	0
   112  000EA2  00                 	db	0
   113  000EA3  00                 	db	0
   114  000EA4  00                 	db	0
   115  000EA5  00                 	db	0
   116  000EA6  00                 	db	0
   117  000EA7  00                 	db	0
   118  000EA8  00                 	db	0
   119  000EA9  00                 	db	0
   120  000EAA  00                 	db	0
   121  000EAB  00                 	db	0
   122  000EAC  00                 	db	0
   123  000EAD  00                 	db	0
   124  000EAE  00                 	db	0
   125  000EAF  00                 	db	0
   126  000EB0  00                 	db	0
   127  000EB1  00                 	db	0
   128  000EB2  00                 	db	0
   129  000EB3  00                 	db	0
   130  000EB4  00                 	db	0
   131  000EB5  00                 	db	0
   132  000EB6  00                 	db	0
   133  000EB7  00                 	db	0
   134  000EB8  00                 	db	0
   135  000EB9  0000               	dw	0
   136  000EBB  0000               	dw	0
   137  000EBD  00                 	db	0
   138                           
   139                           	psect	smallconst
   140  000300                     __psmallconst:
   141                           	opt stack 0
   142  000300  00                 	db	0
   143  000301                     _fVersion:
   144                           	opt stack 0
   145  000301  76                 	db	118
   146  000302  31                 	db	49
   147  000303  2E                 	db	46
   148  000304  30                 	db	48
   149  000305  00                 	db	0
   150  000306                     __end_of_fVersion:
   151                           	opt stack 0
   152  0000                     _DFLTCON	set	3936
   153  0000                     _DTCON	set	3949
   154  0000                     _FLTCONFIG	set	3948
   155  0000                     _MAXCNTH	set	3941
   156  0000                     _MAXCNTL	set	3940
   157  0000                     _OVDCOND	set	3947
   158  0000                     _OVDCONS	set	3946
   159  0000                     _PDC0H	set	3960
   160  0000                     _PDC0L	set	3961
   161  0000                     _PDC1H	set	3958
   162  0000                     _PDC1L	set	3959
   163  0000                     _PORTDbits	set	3971
   164  0000                     _POSCNTH	set	3943
   165  0000                     _POSCNTL	set	3942
   166  0000                     _PTCON0	set	3967
   167  0000                     _PTCON1bits	set	3966
   168  0000                     _PTPERH	set	3962
   169  0000                     _PTPERL	set	3963
   170  0000                     _PWMCON0	set	3951
   171  0000                     _PWMCON1	set	3950
   172  0000                     _TRISAbits	set	3986
   173  0000                     _TRISB	set	3987
   174  0000                     _TRISCbits	set	3988
   175  0000                     _TRISDbits	set	3989
   176  0000                     _ANSEL0	set	4024
   177  0000                     _ANSEL1	set	4025
   178  0000                     _BAUDCONbits	set	4010
   179  0000                     _BAUDCTLbits	set	4010
   180  0000                     _CCP1CON	set	4029
   181  0000                     _CCP1CONbits	set	4029
   182  0000                     _CCPR1L	set	4030
   183  0000                     _IPR1bits	set	3999
   184  0000                     _PIE1bits	set	3997
   185  0000                     _PIR1bits	set	3998
   186  0000                     _PR2	set	4043
   187  0000                     _QEICON	set	4022
   188  0000                     _RCONbits	set	4048
   189  0000                     _RCREG	set	4014
   190  0000                     _RCSTA	set	4011
   191  0000                     _RCSTAbits	set	4011
   192  0000                     _SPBRG	set	4015
   193  0000                     _SPBRGH	set	4016
   194  0000                     _T2CON	set	4042
   195  0000                     _TXREG	set	4013
   196  0000                     _TXSTA	set	4012
   197  0000                     _TXSTAbits	set	4012
   198  0000                     _INTCONbits	set	4082
   199                           
   200                           ; #config settings
   201  000306  00                 	db	0	; dummy byte at the end
   202  0000                     
   203                           	psect	cinit
   204  000CFC                     __pcinit:
   205                           	opt stack 0
   206  000CFC                     start_initialization:
   207                           	opt stack 0
   208  000CFC                     __initialization:
   209                           	opt stack 0
   210                           
   211                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   212  000CFC  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   213                           
   214                           ; Clear objects allocated to COMRAM (2 bytes)
   215  000CFE  6A45               	clrf	(__pbssCOMRAM+1)& (0+255),c
   216  000D00  6A44               	clrf	__pbssCOMRAM& (0+255),c
   217                           
   218                           ; Initialize objects allocated to BANK0 (39 bytes)
   219                           ; load TBLPTR registers with __pidataBANK0
   220  000D02  0E97               	movlw	low __pidataBANK0
   221  000D04  6EF6               	movwf	tblptrl,c
   222  000D06  0E0E               	movlw	high __pidataBANK0
   223  000D08  6EF7               	movwf	tblptrh,c
   224  000D0A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   225  000D0C  6EF8               	movwf	tblptru,c
   226  000D0E  EE00  F0A8         	lfsr	0,__pdataBANK0
   227  000D12  EE10 F027          	lfsr	1,39
   228  000D16                     copy_data0:
   229  000D16  0009               	tblrd		*+
   230  000D18  CFF5 FFEE          	movff	tablat,postinc0
   231  000D1C  50E5               	movf	postdec1,w,c
   232  000D1E  50E1               	movf	fsr1l,w,c
   233  000D20  E1FA               	bnz	copy_data0
   234                           
   235                           ; Initialize objects allocated to COMRAM (39 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  000D22  0E70               	movlw	low __pidataCOMRAM
   238  000D24  6EF6               	movwf	tblptrl,c
   239  000D26  0E0E               	movlw	high __pidataCOMRAM
   240  000D28  6EF7               	movwf	tblptrh,c
   241  000D2A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  000D2C  6EF8               	movwf	tblptru,c
   243  000D2E  EE00  F001         	lfsr	0,__pdataCOMRAM
   244  000D32  EE10 F027          	lfsr	1,39
   245  000D36                     copy_data1:
   246  000D36  0009               	tblrd		*+
   247  000D38  CFF5 FFEE          	movff	tablat,postinc0
   248  000D3C  50E5               	movf	postdec1,w,c
   249  000D3E  50E1               	movf	fsr1l,w,c
   250  000D40  E1FA               	bnz	copy_data1
   251  000D42                     end_of_initialization:
   252                           	opt stack 0
   253  000D42                     __end_of__initialization:
   254                           	opt stack 0
   255  000D42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  000D44  6EF8               	movwf	tblptru,c
   257  000D46  0100               	movlb	0
   258  000D48  EFBE  F002         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	bitbssCOMRAM
   268  000230                     __pbitbssCOMRAM:
   269                           	opt stack 0
   270  000230                     _NEW_PACKAGE_RECEIVED:
   271                           	opt stack 0
   272  000230                     	ds	1
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281                           	psect	bssCOMRAM
   282  000044                     __pbssCOMRAM:
   283                           	opt stack 0
   284  000044                     _RCV_LENGTH:
   285                           	opt stack 0
   286  000044                     	ds	1
   287  000045                     _RCV_STATE:
   288                           	opt stack 0
   289  000045                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	dataCOMRAM
   299  000001                     __pdataCOMRAM:
   300                           	opt stack 0
   301  000001                     _in:
   302                           	opt stack 0
   303  000001                     	ds	39
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	dataBANK0
   313  0000A8                     __pdataBANK0:
   314                           	opt stack 0
   315  0000A8                     _out:
   316                           	opt stack 0
   317  0000A8                     	ds	39
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	cstackBANK0
   327  000060                     __pcstackBANK0:
   328                           	opt stack 0
   329  000060                     ??_LowIsr:
   330                           
   331                           ; 0 bytes @ 0x0
   332  000060                     	ds	23
   333  000077                     ?___ftpack:
   334                           	opt stack 0
   335  000077                     InitQEI@_DFLTCON:
   336                           	opt stack 0
   337  000077                     delay_ms@delay:
   338                           	opt stack 0
   339  000077                     SetPWM1Duty@_PDC0:
   340                           	opt stack 0
   341  000077                     SetPWM2Duty@_PDC1:
   342                           	opt stack 0
   343  000077                     Buffer_Write@buff:
   344                           	opt stack 0
   345  000077                     Buffer_Read@buff:
   346                           	opt stack 0
   347  000077                     Buffer_GetCRC8@buff:
   348                           	opt stack 0
   349  000077                     ___ftpack@arg:
   350                           	opt stack 0
   351  000077                     UARTInit@baudrate:
   352                           	opt stack 0
   353                           
   354                           ; 4 bytes @ 0x17
   355  000077                     	ds	1
   356  000078                     InitQEI@_MAXCNT:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x18
   360  000078                     	ds	1
   361  000079                     ??_Buffer_Read:
   362  000079                     ??_Buffer_GetCRC8:
   363  000079                     Buffer_Write@data:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x19
   367  000079                     	ds	1
   368  00007A                     ___ftpack@exp:
   369                           	opt stack 0
   370  00007A                     Buffer_Write@next:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x1A
   374  00007A                     	ds	1
   375  00007B                     ??_UARTInit:
   376  00007B                     ___ftpack@sign:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x1B
   380  00007B                     	ds	1
   381  00007C                     ?___lwtoft:
   382                           	opt stack 0
   383  00007C                     Package_WriteDataByte@p:
   384                           	opt stack 0
   385  00007C                     ___lwtoft@c:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x1C
   389  00007C                     	ds	1
   390  00007D                     Package_Send@p:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x1D
   394  00007D                     	ds	1
   395  00007E                     Package_WriteDataByte@d:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x1E
   399  00007E                     	ds	1
   400  00007F                     ?___ftdiv:
   401                           	opt stack 0
   402  00007F                     ___ftdiv@f1:
   403                           	opt stack 0
   404                           
   405                           ; 3 bytes @ 0x1F
   406  00007F                     	ds	3
   407  000082                     ___ftdiv@f2:
   408                           	opt stack 0
   409                           
   410                           ; 3 bytes @ 0x22
   411  000082                     	ds	3
   412  000085                     ??___ftdiv:
   413                           
   414                           ; 0 bytes @ 0x25
   415  000085                     	ds	3
   416  000088                     ___ftdiv@cntr:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x28
   420  000088                     	ds	1
   421  000089                     ___ftdiv@f3:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0x29
   425  000089                     	ds	3
   426  00008C                     ___ftdiv@exp:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x2C
   430  00008C                     	ds	1
   431  00008D                     ___ftdiv@sign:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x2D
   435  00008D                     	ds	1
   436  00008E                     ?___fttol:
   437                           	opt stack 0
   438  00008E                     ___fttol@f1:
   439                           	opt stack 0
   440                           
   441                           ; 3 bytes @ 0x2E
   442  00008E                     	ds	4
   443  000092                     ??___fttol:
   444                           
   445                           ; 0 bytes @ 0x32
   446  000092                     	ds	5
   447  000097                     ___fttol@sign1:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x37
   451  000097                     	ds	1
   452  000098                     ___fttol@lval:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0x38
   456  000098                     	ds	4
   457  00009C                     ___fttol@exp1:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x3C
   461  00009C                     	ds	1
   462  00009D                     SetDCBrake_PWMDuty@duty:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x3D
   466  00009D                     	ds	2
   467  00009F                     ??_SetDCBrake_PWMDuty:
   468                           
   469                           ; 0 bytes @ 0x3F
   470  00009F                     	ds	2
   471  0000A1                     SetDCBrake_NominalVoltage@DCBrakeNominalVoltage:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x41
   475  0000A1                     	ds	2
   476  0000A3                     SetDCBrake_NominalVoltage@HVSupplyVoltage:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x43
   480  0000A3                     	ds	2
   481  0000A5                     SetDCBrake_NominalVoltage@sPWMQuantum:
   482                           	opt stack 0
   483                           
   484                           ; 3 bytes @ 0x45
   485  0000A5                     	ds	3
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           postdec1	equ	0xFE5
   492                           fsr1l	equ	0xFE1
   493                           
   494                           	psect	cstackCOMRAM
   495  000028                     __pcstackCOMRAM:
   496                           	opt stack 0
   497  000028                     ??_HighIsr:
   498  000028                     
   499                           ; 2 bytes @ 0x0
   500  000028                     	ds	14
   501  000036                     Package_GetLength@p:
   502                           	opt stack 0
   503  000036                     Package_GetADR@p:
   504                           	opt stack 0
   505  000036                     i1Buffer_Write@buff:
   506                           	opt stack 0
   507  000036                     i1Buffer_GetCRC8@buff:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0xE
   511  000036                     	ds	2
   512  000038                     ??i1_Buffer_Write:
   513  000038                     ??i1_Buffer_GetCRC8:
   514                           
   515                           ; 0 bytes @ 0x10
   516  000038                     	ds	2
   517  00003A                     i1Buffer_Write@data:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x12
   521  00003A                     	ds	1
   522  00003B                     i1Buffer_Write@next:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x13
   526  00003B                     	ds	1
   527  00003C                     i1Buffer_GetCRC8@i:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x14
   531  00003C                     	ds	1
   532  00003D                     i1Buffer_GetCRC8@CRC:
   533                           	opt stack 0
   534  00003D                     i1Package_WriteDataByte@p:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x15
   538  00003D                     	ds	1
   539  00003E                     Package_CalculateCRC8@p:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x16
   543  00003E                     	ds	1
   544  00003F                     i1Package_WriteDataByte@d:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x17
   548  00003F                     	ds	1
   549  000040                     ??_Package_CalculateCRC8:
   550  000040                     
   551                           ; 0 bytes @ 0x18
   552  000040                     	ds	1
   553  000041                     ??___ftpack:
   554  000041                     ??_delay_ms:
   555  000041                     ??_Buffer_Write:
   556  000041                     UARTSendByte@data:
   557                           	opt stack 0
   558  000041                     InitQEI@_QEICON:
   559                           	opt stack 0
   560  000041                     Buffer_Read@data:
   561                           	opt stack 0
   562  000041                     Buffer_GetCRC8@i:
   563                           	opt stack 0
   564  000041                     UARTInit@divisor:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x19
   568  000041                     	ds	1
   569  000042                     Buffer_GetCRC8@CRC:
   570                           	opt stack 0
   571  000042                     delay_ms@i:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x1A
   575  000042                     	ds	1
   576  000043                     ??_Package_Send:
   577                           
   578                           ; 0 bytes @ 0x1B
   579  000043                     	ds	1
   580  000044                     tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           postinc0	equ	0xFEE
   585                           postdec1	equ	0xFE5
   586                           fsr1l	equ	0xFE1
   587                           
   588                           ; 0 bytes @ 0x1C
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 108 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  2   84[None  ] int 
   601 ;; Registers used:
   602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   608 ;;      Params:         0       0       0       0
   609 ;;      Locals:         0       0       0       0
   610 ;;      Temps:          0       0       0       0
   611 ;;      Totals:         0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels required when called:    7
   614 ;; This function calls:
   615 ;;		_DCBrake_Catch
   616 ;;		_DCBrake_PWMInit
   617 ;;		_IR2110Disable
   618 ;;		_InitPCPWM
   619 ;;		_InitQEI
   620 ;;		_InputInit
   621 ;;		_Package_Send
   622 ;;		_Package_WriteDataByte
   623 ;;		_SetDCBrake_NominalVoltage
   624 ;;		_SetPWM1Duty
   625 ;;		_SetPWM2Duty
   626 ;;		_UARTAddressDetection_OFF
   627 ;;		_UARTInit
   628 ;;		_UARTSendByte
   629 ;;		_delay_ms
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text0
   636  00057C                     __ptext0:
   637                           	opt stack 0
   638  00057C                     _main:
   639                           	opt stack 24
   640                           
   641                           ;main.c: 113: UARTInit(115200);
   642                           
   643                           ;incstack = 0
   644  00057C  0E00               	movlw	0
   645  00057E  0100               	movlb	0	; () banked
   646  000580  6F77               	movwf	UARTInit@baudrate& (0+255),b
   647  000582  0EC2               	movlw	194
   648  000584  6F78               	movwf	(UARTInit@baudrate+1)& (0+255),b
   649  000586  0E01               	movlw	1
   650  000588  6F79               	movwf	(UARTInit@baudrate+2)& (0+255),b
   651  00058A  0E00               	movlw	0
   652  00058C  6F7A               	movwf	(UARTInit@baudrate+3)& (0+255),b
   653  00058E  ECDA  F003         	call	_UARTInit	;wreg free
   654                           
   655                           ;main.c: 114: UARTAddressDetection_OFF();
   656  000592  ECA5  F007         	call	_UARTAddressDetection_OFF	;wreg free
   657                           
   658                           ;main.c: 117: InputInit();
   659  000596  ECA2  F007         	call	_InputInit	;wreg free
   660                           
   661                           ;main.c: 120: DCBrake_PWMInit();
   662  00059A  EC7C  F007         	call	_DCBrake_PWMInit	;wreg free
   663                           
   664                           ;main.c: 122: SetDCBrake_NominalVoltage(24, 26);
   665  00059E  0E00               	movlw	0
   666  0005A0  0100               	movlb	0	; () banked
   667  0005A2  6FA2               	movwf	(SetDCBrake_NominalVoltage@DCBrakeNominalVoltage+1)& (0+255),b
   668  0005A4  0E18               	movlw	24
   669  0005A6  6FA1               	movwf	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage& (0+255),b
   670  0005A8  0E00               	movlw	0
   671  0005AA  0100               	movlb	0	; () banked
   672  0005AC  6FA4               	movwf	(SetDCBrake_NominalVoltage@HVSupplyVoltage+1)& (0+255),b
   673  0005AE  0E1A               	movlw	26
   674  0005B0  6FA3               	movwf	SetDCBrake_NominalVoltage@HVSupplyVoltage& (0+255),b
   675  0005B2  ECA0  F004         	call	_SetDCBrake_NominalVoltage	;wreg free
   676                           
   677                           ;main.c: 123: DCBrake_Catch();
   678  0005B6  ECA9  F007         	call	_DCBrake_Catch	;wreg free
   679                           
   680                           ;main.c: 125: InitPCPWM();
   681  0005BA  ECA6  F006         	call	_InitPCPWM	;wreg free
   682                           
   683                           ;main.c: 126: SetPWM1Duty(1023);
   684  0005BE  0E03               	movlw	3
   685  0005C0  0100               	movlb	0	; () banked
   686  0005C2  6F78               	movwf	(SetPWM1Duty@_PDC0+1)& (0+255),b
   687  0005C4  6977               	setf	SetPWM1Duty@_PDC0& (0+255),b
   688  0005C6  EC9C  F007         	call	_SetPWM1Duty	;wreg free
   689                           
   690                           ;main.c: 127: SetPWM2Duty(1023);
   691  0005CA  0E03               	movlw	3
   692  0005CC  0100               	movlb	0	; () banked
   693  0005CE  6F78               	movwf	(SetPWM2Duty@_PDC1+1)& (0+255),b
   694  0005D0  6977               	setf	SetPWM2Duty@_PDC1& (0+255),b
   695  0005D2  EC96  F007         	call	_SetPWM2Duty	;wreg free
   696                           
   697                           ;main.c: 128: IR2110Disable();
   698  0005D6  ECA7  F007         	call	_IR2110Disable	;wreg free
   699                           
   700                           ;main.c: 130: InitQEI(0b00000000 | 0b00011000 | 0b00000000, 0b00000000, 255);
   701  0005DA  0E00               	movlw	0
   702  0005DC  0100               	movlb	0	; () banked
   703  0005DE  6F77               	movwf	InitQEI@_DFLTCON& (0+255),b
   704  0005E0  0E00               	movlw	0
   705  0005E2  0100               	movlb	0	; () banked
   706  0005E4  6F79               	movwf	(InitQEI@_MAXCNT+1)& (0+255),b
   707  0005E6  6978               	setf	InitQEI@_MAXCNT& (0+255),b
   708  0005E8  0E18               	movlw	24
   709  0005EA  EC0B  F007         	call	_InitQEI
   710                           
   711                           ;main.c: 132: Package_WriteDataByte(&out, fVersion[0]);
   712  0005EE  0EA8               	movlw	low _out
   713  0005F0  0100               	movlb	0	; () banked
   714  0005F2  6F7C               	movwf	Package_WriteDataByte@p& (0+255),b
   715  0005F4  0E00               	movlw	high _out
   716  0005F6  0100               	movlb	0	; () banked
   717  0005F8  6F7D               	movwf	(Package_WriteDataByte@p+1)& (0+255),b
   718  0005FA  0E01               	movlw	low _fVersion
   719  0005FC  6EF6               	movwf	tblptrl,c
   720  0005FE                     	if	1	;There is more than 1 active tblptr byte
   721  0005FE  0E03               	movlw	high _fVersion
   722  000600  6EF7               	movwf	tblptrh,c
   723  000602                     	endif
   724  000602                     	if	0	;There are less than 3 active tblptr bytes
   725  000602                     	endif
   726  000602  0008               	tblrd		*
   727  000604  CFF5 F07E          	movff	tablat,Package_WriteDataByte@d
   728  000608  ECF4  F006         	call	_Package_WriteDataByte	;wreg free
   729                           
   730                           ;main.c: 133: Package_WriteDataByte(&out, fVersion[1]);
   731  00060C  0EA8               	movlw	low _out
   732  00060E  0100               	movlb	0	; () banked
   733  000610  6F7C               	movwf	Package_WriteDataByte@p& (0+255),b
   734  000612  0E00               	movlw	high _out
   735  000614  0100               	movlb	0	; () banked
   736  000616  6F7D               	movwf	(Package_WriteDataByte@p+1)& (0+255),b
   737  000618  0E02               	movlw	low (_fVersion+1)
   738  00061A  6EF6               	movwf	tblptrl,c
   739  00061C  0E03               	movlw	high (_fVersion+1)
   740  00061E  6EF7               	movwf	tblptrh,c
   741  000620                     	if	0	;tblptru may be non-zero
   742  000620                     	endif
   743  000620                     	if	0	;tblptru may be non-zero
   744  000620                     	endif
   745  000620  0008               	tblrd		*
   746  000622  CFF5 F07E          	movff	tablat,Package_WriteDataByte@d
   747  000626  ECF4  F006         	call	_Package_WriteDataByte	;wreg free
   748                           
   749                           ;main.c: 134: Package_WriteDataByte(&out, fVersion[2]);
   750  00062A  0EA8               	movlw	low _out
   751  00062C  0100               	movlb	0	; () banked
   752  00062E  6F7C               	movwf	Package_WriteDataByte@p& (0+255),b
   753  000630  0E00               	movlw	high _out
   754  000632  0100               	movlb	0	; () banked
   755  000634  6F7D               	movwf	(Package_WriteDataByte@p+1)& (0+255),b
   756  000636  0E03               	movlw	low (_fVersion+2)
   757  000638  6EF6               	movwf	tblptrl,c
   758  00063A  0E03               	movlw	high (_fVersion+2)
   759  00063C  6EF7               	movwf	tblptrh,c
   760  00063E                     	if	0	;tblptru may be non-zero
   761  00063E                     	endif
   762  00063E                     	if	0	;tblptru may be non-zero
   763  00063E                     	endif
   764  00063E  0008               	tblrd		*
   765  000640  CFF5 F07E          	movff	tablat,Package_WriteDataByte@d
   766  000644  ECF4  F006         	call	_Package_WriteDataByte	;wreg free
   767                           
   768                           ;main.c: 135: Package_WriteDataByte(&out, fVersion[3]);
   769  000648  0EA8               	movlw	low _out
   770  00064A  0100               	movlb	0	; () banked
   771  00064C  6F7C               	movwf	Package_WriteDataByte@p& (0+255),b
   772  00064E  0E00               	movlw	high _out
   773  000650  0100               	movlb	0	; () banked
   774  000652  6F7D               	movwf	(Package_WriteDataByte@p+1)& (0+255),b
   775  000654  0E04               	movlw	low (_fVersion+3)
   776  000656  6EF6               	movwf	tblptrl,c
   777  000658  0E03               	movlw	high (_fVersion+3)
   778  00065A  6EF7               	movwf	tblptrh,c
   779  00065C                     	if	0	;tblptru may be non-zero
   780  00065C                     	endif
   781  00065C                     	if	0	;tblptru may be non-zero
   782  00065C                     	endif
   783  00065C  0008               	tblrd		*
   784  00065E  CFF5 F07E          	movff	tablat,Package_WriteDataByte@d
   785  000662  ECF4  F006         	call	_Package_WriteDataByte	;wreg free
   786                           
   787                           ;main.c: 137: Package_Send(&out);
   788  000666  0EA8               	movlw	low _out
   789  000668  0100               	movlb	0	; () banked
   790  00066A  6F7D               	movwf	Package_Send@p& (0+255),b
   791  00066C  0E00               	movlw	high _out
   792  00066E  0100               	movlb	0	; () banked
   793  000670  6F7E               	movwf	(Package_Send@p+1)& (0+255),b
   794  000672  ECED  F004         	call	_Package_Send	;wreg free
   795                           
   796                           ;main.c: 139: delay_ms(100);
   797  000676  0E00               	movlw	0
   798  000678  0100               	movlb	0	; () banked
   799  00067A  6F78               	movwf	(delay_ms@delay+1)& (0+255),b
   800  00067C  0E64               	movlw	100
   801  00067E  6F77               	movwf	delay_ms@delay& (0+255),b
   802  000680  ECDD  F006         	call	_delay_ms	;wreg free
   803                           
   804                           ;main.c: 141: RCONbits.IPEN = 1;
   805  000684  8ED0               	bsf	4048,7,c	;volatile
   806                           
   807                           ;main.c: 142: INTCONbits.GIEH = 1;
   808  000686  8EF2               	bsf	intcon,7,c	;volatile
   809                           
   810                           ;main.c: 143: INTCONbits.GIEL = 1;
   811  000688  8CF2               	bsf	intcon,6,c	;volatile
   812                           
   813                           ;main.c: 145: delay_ms(1);
   814  00068A  0E00               	movlw	0
   815  00068C  0100               	movlb	0	; () banked
   816  00068E  6F78               	movwf	(delay_ms@delay+1)& (0+255),b
   817  000690  0E01               	movlw	1
   818  000692  6F77               	movwf	delay_ms@delay& (0+255),b
   819  000694  ECDD  F006         	call	_delay_ms	;wreg free
   820  000698  D000               	goto	l2404
   821  00069A                     l2404:
   822                           
   823                           ;main.c: 148: {
   824                           ;main.c: 149: if (NEW_PACKAGE_RECEIVED)
   825  00069A  A046               	btfss	_NEW_PACKAGE_RECEIVED/(0+8),_NEW_PACKAGE_RECEIVED& (0+7),c
   826  00069C  D7FE               	goto	l2404
   827                           
   828                           ;main.c: 150: {
   829                           ;main.c: 151: UARTSendByte(89);
   830  00069E  0E59               	movlw	89
   831  0006A0  EC70  F007         	call	_UARTSendByte
   832                           
   833                           ;main.c: 152: NEW_PACKAGE_RECEIVED = 0;
   834  0006A4  9046               	bcf	_NEW_PACKAGE_RECEIVED/(0+8),_NEW_PACKAGE_RECEIVED& (0+7),c
   835  0006A6  D7F9               	goto	l2404
   836                           
   837                           ;main.c: 153: }
   838                           ;main.c: 155: }
   839                           ;main.c: 157: return 0;
   840                           ;	Return value of _main is never used
   841  0006A8  EFB9  F000         	goto	start
   842  0006AC                     __end_of_main:
   843                           	opt stack 0
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           intcon	equ	0xFF2
   849                           postinc0	equ	0xFEE
   850                           postdec1	equ	0xFE5
   851                           fsr1l	equ	0xFE1
   852                           
   853 ;; *************** function _delay_ms *****************
   854 ;; Defined at:
   855 ;;		line 101 in file "main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  delay           2   23[BANK0 ] unsigned int 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  i               2   26[COMRAM] int 
   860 ;; Return value:  Size  Location     Type
   861 ;;		None               void
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   869 ;;      Params:         0       2       0       0
   870 ;;      Locals:         2       0       0       0
   871 ;;      Temps:          1       0       0       0
   872 ;;      Totals:         3       2       0       0
   873 ;;Total ram usage:        5 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    4
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text1
   884  000DBA                     __ptext1:
   885                           	opt stack 0
   886  000DBA                     _delay_ms:
   887                           	opt stack 26
   888                           
   889                           ;main.c: 103: int i;
   890                           ;main.c: 104: for (i = 0; i < delay; i++)
   891                           
   892                           ;incstack = 0
   893  000DBA  0E00               	movlw	0
   894  000DBC  6E43               	movwf	delay_ms@i+1,c
   895  000DBE  0E00               	movlw	0
   896  000DC0  6E42               	movwf	delay_ms@i,c
   897  000DC2  D009               	goto	l79
   898  000DC4                     l2188:
   899                           
   900                           ;main.c: 105: _delay((unsigned long)((1)*(40000000/4000.0)));
   901  000DC4  0E0D               	movlw	13
   902  000DC6  6E41               	movwf	??_delay_ms& (0+255),c
   903  000DC8  0EFC               	movlw	252
   904  000DCA                     u1057:
   905  000DCA  2EE8               	decfsz	wreg,f,c
   906  000DCC  D7FE               	goto	u1057
   907  000DCE  2E41               	decfsz	??_delay_ms& (0+255),f,c
   908  000DD0  D7FC               	goto	u1057
   909  000DD2  4A42               	infsnz	delay_ms@i,f,c
   910  000DD4  2A43               	incf	delay_ms@i+1,f,c
   911  000DD6                     l79:
   912  000DD6  0100               	movlb	0	; () banked
   913  000DD8  5177               	movf	delay_ms@delay& (0+255),w,b
   914  000DDA  5C42               	subwf	delay_ms@i,w,c
   915  000DDC  0100               	movlb	0	; () banked
   916  000DDE  5178               	movf	(delay_ms@delay+1)& (0+255),w,b
   917  000DE0  5843               	subwfb	delay_ms@i+1,w,c
   918  000DE2  A0D8               	btfss	status,0,c
   919  000DE4  D7EF               	goto	l2188
   920                           
   921                           ; BSR set to: 0
   922                           
   923                           ; BSR set to: 0
   924  000DE6  0012               	return		;funcret
   925  000DE8                     __end_of_delay_ms:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           intcon	equ	0xFF2
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           postdec1	equ	0xFE5
   935                           fsr1l	equ	0xFE1
   936                           status	equ	0xFD8
   937                           
   938 ;; *************** function _UARTInit *****************
   939 ;; Defined at:
   940 ;;		line 8 in file "uart.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  baudrate        4   23[BANK0 ] unsigned long 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  divisor         2   25[COMRAM] unsigned int 
   945 ;; Return value:  Size  Location     Type
   946 ;;		None               void
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   954 ;;      Params:         0       4       0       0
   955 ;;      Locals:         2       0       0       0
   956 ;;      Temps:          0       4       0       0
   957 ;;      Totals:         2       8       0       0
   958 ;;Total ram usage:       10 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    4
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text2
   969  0007B4                     __ptext2:
   970                           	opt stack 0
   971  0007B4                     _UARTInit:
   972                           	opt stack 26
   973                           
   974                           ;uart.c: 10: unsigned int divisor;
   975                           ;uart.c: 12: TRISCbits.RC6 = 1;
   976                           
   977                           ; BSR set to: 0
   978                           ;incstack = 0
   979  0007B4  8C94               	bsf	3988,6,c	;volatile
   980                           
   981                           ;uart.c: 13: TRISCbits.RC7 = 1;
   982  0007B6  8E94               	bsf	3988,7,c	;volatile
   983                           
   984                           ;uart.c: 16: TRISDbits.RD4 = 0;
   985  0007B8  9895               	bcf	3989,4,c	;volatile
   986                           
   987                           ;uart.c: 17: PORTDbits.RD4 = 0;
   988  0007BA  9883               	bcf	3971,4,c	;volatile
   989                           
   990                           ;uart.c: 19: TXSTA = 0b00100110;
   991  0007BC  0E26               	movlw	38
   992  0007BE  6EAC               	movwf	4012,c	;volatile
   993                           
   994                           ;uart.c: 20: RCSTA = 0b11010000;
   995  0007C0  0ED0               	movlw	208
   996  0007C2  6EAB               	movwf	4011,c	;volatile
   997                           
   998                           ;uart.c: 22: BAUDCTLbits.BRG16 = 1;
   999  0007C4  86AA               	bsf	4010,3,c	;volatile
  1000                           
  1001                           ;uart.c: 23: BAUDCTLbits.WUE = 0;
  1002  0007C6  92AA               	bcf	4010,1,c	;volatile
  1003                           
  1004                           ;uart.c: 24: BAUDCONbits.ABDEN = 0;
  1005  0007C8  90AA               	bcf	4010,0,c	;volatile
  1006                           
  1007                           ;uart.c: 26: switch (baudrate)
  1008  0007CA  D015               	goto	l2214
  1009  0007CC                     l2202:
  1010                           
  1011                           ;uart.c: 29: divisor = 1040;
  1012  0007CC  0E04               	movlw	4
  1013  0007CE  6E42               	movwf	UARTInit@divisor+1,c
  1014  0007D0  0E10               	movlw	16
  1015  0007D2  D00F               	goto	L4
  1016  0007D4                     l2204:
  1017                           
  1018                           ;uart.c: 32: divisor = 520;
  1019  0007D4  0E02               	movlw	2
  1020  0007D6  6E42               	movwf	UARTInit@divisor+1,c
  1021  0007D8  0E08               	movlw	8
  1022  0007DA  D00B               	goto	L4
  1023  0007DC                     l2206:
  1024                           
  1025                           ;uart.c: 35: divisor = 172;
  1026  0007DC  0E00               	movlw	0
  1027  0007DE  6E42               	movwf	UARTInit@divisor+1,c
  1028  0007E0  0EAC               	movlw	172
  1029  0007E2  D007               	goto	L4
  1030  0007E4                     l2208:
  1031                           
  1032                           ;uart.c: 38: divisor = 86;
  1033  0007E4  0E00               	movlw	0
  1034  0007E6  6E42               	movwf	UARTInit@divisor+1,c
  1035  0007E8  0E56               	movlw	86
  1036  0007EA  D003               	goto	L4
  1037  0007EC                     l2210:
  1038                           
  1039                           ;uart.c: 41: divisor = 10;
  1040  0007EC  0E00               	movlw	0
  1041  0007EE  6E42               	movwf	UARTInit@divisor+1,c
  1042  0007F0  0E0A               	movlw	10
  1043  0007F2                     L4:
  1044  0007F2  6E41               	movwf	UARTInit@divisor,c
  1045                           
  1046                           ;uart.c: 43: }
  1047                           
  1048                           ;uart.c: 42: break;
  1049  0007F4  D04D               	goto	l122
  1050  0007F6                     l2214:
  1051  0007F6  C077  F07B         	movff	UARTInit@baudrate,??_UARTInit
  1052  0007FA  C078  F07C         	movff	UARTInit@baudrate+1,??_UARTInit+1
  1053  0007FE  C079  F07D         	movff	UARTInit@baudrate+2,??_UARTInit+2
  1054  000802  C07A  F07E         	movff	UARTInit@baudrate+3,??_UARTInit+3
  1055                           
  1056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1057                           ; Switch size 1, requested type "space"
  1058                           ; Number of cases is 1, Range of values is 0 to 0
  1059                           ; switch strategies available:
  1060                           ; Name         Instructions Cycles
  1061                           ; simple_byte            4     3 (average)
  1062                           ;	Chosen strategy is simple_byte
  1063  000806  0100               	movlb	0	; () banked
  1064  000808  517E               	movf	(??_UARTInit+3)& (0+255),w,b
  1065  00080A  0A00               	xorlw	0	; case 0
  1066  00080C  B4D8               	btfsc	status,2,c
  1067  00080E  D035               	goto	l2602
  1068  000810  D03F               	goto	l122
  1069  000812                     l2596:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  1073                           ; Switch size 1, requested type "space"
  1074                           ; Number of cases is 3, Range of values is 37 to 225
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte           10     6 (average)
  1078                           ;	Chosen strategy is simple_byte
  1079  000812  0100               	movlb	0	; () banked
  1080  000814  517C               	movf	(??_UARTInit+1)& (0+255),w,b
  1081  000816  0A25               	xorlw	37	; case 37
  1082  000818  B4D8               	btfsc	status,2,c
  1083  00081A  D007               	goto	l2604
  1084  00081C  0A6E               	xorlw	110	; case 75
  1085  00081E  B4D8               	btfsc	status,2,c
  1086  000820  D00A               	goto	l2606
  1087  000822  0AAA               	xorlw	170	; case 225
  1088  000824  B4D8               	btfsc	status,2,c
  1089  000826  D00D               	goto	l2608
  1090  000828  D033               	goto	l122
  1091  00082A                     l2604:
  1092                           
  1093                           ; BSR set to: 0
  1094                           ; Switch size 1, requested type "space"
  1095                           ; Number of cases is 1, Range of values is 128 to 128
  1096                           ; switch strategies available:
  1097                           ; Name         Instructions Cycles
  1098                           ; simple_byte            4     3 (average)
  1099                           ;	Chosen strategy is simple_byte
  1100  00082A  0100               	movlb	0	; () banked
  1101  00082C  517B               	movf	??_UARTInit& (0+255),w,b
  1102  00082E  0A80               	xorlw	128	; case 128
  1103  000830  B4D8               	btfsc	status,2,c
  1104  000832  D7CC               	goto	l2202
  1105  000834  D02D               	goto	l122
  1106  000836                     l2606:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ; Switch size 1, requested type "space"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  000836  0100               	movlb	0	; () banked
  1116  000838  517B               	movf	??_UARTInit& (0+255),w,b
  1117  00083A  0A00               	xorlw	0	; case 0
  1118  00083C  B4D8               	btfsc	status,2,c
  1119  00083E  D7CA               	goto	l2204
  1120  000840  D027               	goto	l122
  1121  000842                     l2608:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ; Switch size 1, requested type "space"
  1125                           ; Number of cases is 1, Range of values is 0 to 0
  1126                           ; switch strategies available:
  1127                           ; Name         Instructions Cycles
  1128                           ; simple_byte            4     3 (average)
  1129                           ;	Chosen strategy is simple_byte
  1130  000842  0100               	movlb	0	; () banked
  1131  000844  517B               	movf	??_UARTInit& (0+255),w,b
  1132  000846  0A00               	xorlw	0	; case 0
  1133  000848  B4D8               	btfsc	status,2,c
  1134  00084A  D7C8               	goto	l2206
  1135  00084C  D021               	goto	l122
  1136  00084E                     l2598:
  1137                           
  1138                           ; BSR set to: 0
  1139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1140                           ; Switch size 1, requested type "space"
  1141                           ; Number of cases is 1, Range of values is 194 to 194
  1142                           ; switch strategies available:
  1143                           ; Name         Instructions Cycles
  1144                           ; simple_byte            4     3 (average)
  1145                           ;	Chosen strategy is simple_byte
  1146  00084E  0100               	movlb	0	; () banked
  1147  000850  517C               	movf	(??_UARTInit+1)& (0+255),w,b
  1148  000852  0AC2               	xorlw	194	; case 194
  1149  000854  A4D8               	btfss	status,2,c
  1150  000856  D01C               	goto	l122
  1151                           
  1152                           ; BSR set to: 0
  1153                           ; Switch size 1, requested type "space"
  1154                           ; Number of cases is 1, Range of values is 0 to 0
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte            4     3 (average)
  1158                           ;	Chosen strategy is simple_byte
  1159  000858  0100               	movlb	0	; () banked
  1160  00085A  517B               	movf	??_UARTInit& (0+255),w,b
  1161  00085C  0A00               	xorlw	0	; case 0
  1162  00085E  B4D8               	btfsc	status,2,c
  1163  000860  D7C1               	goto	l2208
  1164  000862  D016               	goto	l122
  1165  000864                     l2600:
  1166                           
  1167                           ; BSR set to: 0
  1168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1169                           ; Switch size 1, requested type "space"
  1170                           ; Number of cases is 1, Range of values is 16 to 16
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175  000864  0100               	movlb	0	; () banked
  1176  000866  517C               	movf	(??_UARTInit+1)& (0+255),w,b
  1177  000868  0A10               	xorlw	16	; case 16
  1178  00086A  A4D8               	btfss	status,2,c
  1179  00086C  D011               	goto	l122
  1180                           
  1181                           ; BSR set to: 0
  1182                           ; Switch size 1, requested type "space"
  1183                           ; Number of cases is 1, Range of values is 0 to 0
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte            4     3 (average)
  1187                           ;	Chosen strategy is simple_byte
  1188  00086E  0100               	movlb	0	; () banked
  1189  000870  517B               	movf	??_UARTInit& (0+255),w,b
  1190  000872  0A00               	xorlw	0	; case 0
  1191  000874  B4D8               	btfsc	status,2,c
  1192  000876  D7BA               	goto	l2210
  1193  000878  D00B               	goto	l122
  1194  00087A                     l2602:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ; Switch size 1, requested type "space"
  1198                           ; Number of cases is 3, Range of values is 0 to 14
  1199                           ; switch strategies available:
  1200                           ; Name         Instructions Cycles
  1201                           ; simple_byte           10     6 (average)
  1202                           ;	Chosen strategy is simple_byte
  1203  00087A  0100               	movlb	0	; () banked
  1204  00087C  517D               	movf	(??_UARTInit+2)& (0+255),w,b
  1205  00087E  0A00               	xorlw	0	; case 0
  1206  000880  B4D8               	btfsc	status,2,c
  1207  000882  D7C7               	goto	l2596
  1208  000884  0A01               	xorlw	1	; case 1
  1209  000886  B4D8               	btfsc	status,2,c
  1210  000888  D7E2               	goto	l2598
  1211  00088A  0A0F               	xorlw	15	; case 14
  1212  00088C  B4D8               	btfsc	status,2,c
  1213  00088E  D7EA               	goto	l2600
  1214  000890                     l122:
  1215                           
  1216                           ;uart.c: 45: SPBRG = divisor;
  1217  000890  C041  FFAF         	movff	UARTInit@divisor,4015	;volatile
  1218                           
  1219                           ;uart.c: 46: SPBRGH = divisor >> 8;
  1220  000894  5042               	movf	UARTInit@divisor+1,w,c
  1221  000896  6EB0               	movwf	4016,c	;volatile
  1222                           
  1223                           ;uart.c: 48: IPR1bits.RCIP = 0;
  1224  000898  9A9F               	bcf	3999,5,c	;volatile
  1225                           
  1226                           ;uart.c: 49: PIE1bits.RCIE = 1;
  1227  00089A  8A9D               	bsf	3997,5,c	;volatile
  1228  00089C  0012               	return		;funcret
  1229  00089E                     __end_of_UARTInit:
  1230                           	opt stack 0
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           intcon	equ	0xFF2
  1236                           postinc0	equ	0xFEE
  1237                           wreg	equ	0xFE8
  1238                           postdec1	equ	0xFE5
  1239                           fsr1l	equ	0xFE1
  1240                           status	equ	0xFD8
  1241                           
  1242 ;; *************** function _UARTAddressDetection_OFF *****************
  1243 ;; Defined at:
  1244 ;;		line 95 in file "uart.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;		None               void
  1251 ;; Registers used:
  1252 ;;		None
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1258 ;;      Params:         0       0       0       0
  1259 ;;      Locals:         0       0       0       0
  1260 ;;      Temps:          0       0       0       0
  1261 ;;      Totals:         0       0       0       0
  1262 ;;Total ram usage:        0 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    4
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text3
  1273  000F4A                     __ptext3:
  1274                           	opt stack 0
  1275  000F4A                     _UARTAddressDetection_OFF:
  1276                           	opt stack 26
  1277                           
  1278                           ;uart.c: 97: RCSTAbits.ADDEN = 0;
  1279                           
  1280                           ;incstack = 0
  1281  000F4A  96AB               	bcf	4011,3,c	;volatile
  1282  000F4C  0012               	return		;funcret
  1283  000F4E                     __end_of_UARTAddressDetection_OFF:
  1284                           	opt stack 0
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           intcon	equ	0xFF2
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           postdec1	equ	0xFE5
  1293                           fsr1l	equ	0xFE1
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _SetPWM2Duty *****************
  1297 ;; Defined at:
  1298 ;;		line 82 in file "pcpwm.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  _PDC1           2   23[BANK0 ] unsigned int 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1312 ;;      Params:         0       2       0       0
  1313 ;;      Locals:         0       0       0       0
  1314 ;;      Temps:          0       0       0       0
  1315 ;;      Totals:         0       2       0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    4
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text4
  1327  000F2C                     __ptext4:
  1328                           	opt stack 0
  1329  000F2C                     _SetPWM2Duty:
  1330                           	opt stack 26
  1331                           
  1332                           ;pcpwm.c: 84: PDC0L = _PDC1 & 0x00ff;
  1333                           
  1334                           ;incstack = 0
  1335  000F2C  C077  FF79         	movff	SetPWM2Duty@_PDC1,3961	;volatile
  1336                           
  1337                           ;pcpwm.c: 85: PDC0H = _PDC1 >> 8;
  1338  000F30  0100               	movlb	0	; () banked
  1339  000F32  5178               	movf	(SetPWM2Duty@_PDC1+1)& (0+255),w,b
  1340  000F34  6E78               	movwf	3960,c	;volatile
  1341                           
  1342                           ; BSR set to: 0
  1343  000F36  0012               	return		;funcret
  1344  000F38                     __end_of_SetPWM2Duty:
  1345                           	opt stack 0
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           intcon	equ	0xFF2
  1351                           postinc0	equ	0xFEE
  1352                           wreg	equ	0xFE8
  1353                           postdec1	equ	0xFE5
  1354                           fsr1l	equ	0xFE1
  1355                           status	equ	0xFD8
  1356                           
  1357 ;; *************** function _SetPWM1Duty *****************
  1358 ;; Defined at:
  1359 ;;		line 72 in file "pcpwm.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  _PDC0           2   23[BANK0 ] unsigned int 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;		None               void
  1366 ;; Registers used:
  1367 ;;		wreg, status,2
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1373 ;;      Params:         0       2       0       0
  1374 ;;      Locals:         0       0       0       0
  1375 ;;      Temps:          0       0       0       0
  1376 ;;      Totals:         0       2       0       0
  1377 ;;Total ram usage:        2 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    4
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text5
  1388  000F38                     __ptext5:
  1389                           	opt stack 0
  1390  000F38                     _SetPWM1Duty:
  1391                           	opt stack 26
  1392                           
  1393                           ;pcpwm.c: 74: PDC0L = _PDC0 & 0x00ff;
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;incstack = 0
  1397  000F38  C077  FF79         	movff	SetPWM1Duty@_PDC0,3961	;volatile
  1398                           
  1399                           ;pcpwm.c: 75: PDC0H = _PDC0 >> 8;
  1400  000F3C  0100               	movlb	0	; () banked
  1401  000F3E  5178               	movf	(SetPWM1Duty@_PDC0+1)& (0+255),w,b
  1402  000F40  6E78               	movwf	3960,c	;volatile
  1403                           
  1404                           ; BSR set to: 0
  1405  000F42  0012               	return		;funcret
  1406  000F44                     __end_of_SetPWM1Duty:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           intcon	equ	0xFF2
  1413                           postinc0	equ	0xFEE
  1414                           wreg	equ	0xFE8
  1415                           postdec1	equ	0xFE5
  1416                           fsr1l	equ	0xFE1
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _SetDCBrake_NominalVoltage *****************
  1420 ;; Defined at:
  1421 ;;		line 51 in file "dc_brake.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  DCBrakeNomin    2   65[BANK0 ] unsigned short 
  1424 ;;  HVSupplyVolt    2   67[BANK0 ] unsigned short 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  sPWMQuantum     3   69[BANK0 ] float 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  2   65[BANK0 ] int 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1436 ;;      Params:         0       4       0       0
  1437 ;;      Locals:         0       3       0       0
  1438 ;;      Temps:          0       0       0       0
  1439 ;;      Totals:         0       7       0       0
  1440 ;;Total ram usage:        7 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    6
  1443 ;; This function calls:
  1444 ;;		_SetDCBrake_PWMDuty
  1445 ;;		___ftdiv
  1446 ;;		___fttol
  1447 ;;		___lwtoft
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text6
  1454  000940                     __ptext6:
  1455                           	opt stack 0
  1456  000940                     _SetDCBrake_NominalVoltage:
  1457                           	opt stack 24
  1458                           
  1459                           ;dc_brake.c: 53: if (DCBrakeNominalVoltage >= HVSupplyVoltage)
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;incstack = 0
  1463  000940  0100               	movlb	0	; () banked
  1464  000942  51A3               	movf	SetDCBrake_NominalVoltage@HVSupplyVoltage& (0+255),w,b
  1465  000944  0100               	movlb	0	; () banked
  1466  000946  5DA1               	subwf	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage& (0+255),w,b
  1467  000948  0100               	movlb	0	; () banked
  1468  00094A  51A4               	movf	(SetDCBrake_NominalVoltage@HVSupplyVoltage+1)& (0+255),w,b
  1469  00094C  0100               	movlb	0	; () banked
  1470  00094E  59A2               	subwfb	(SetDCBrake_NominalVoltage@DCBrakeNominalVoltage+1)& (0+255),w,b
  1471  000950  B0D8               	btfsc	status,0,c
  1472  000952  D042               	goto	l244
  1473  000954  D001               	goto	l2268
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;dc_brake.c: 54: return 1;
  1477                           ;	Return value of _SetDCBrake_NominalVoltage is never used
  1478  000956  D040               	goto	l244
  1479  000958                     l2268:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;dc_brake.c: 56: float sPWMQuantum = HVSupplyVoltage / 512.0;
  1483  000958  C0A3  F07C         	movff	SetDCBrake_NominalVoltage@HVSupplyVoltage,___lwtoft@c
  1484  00095C  C0A4  F07D         	movff	SetDCBrake_NominalVoltage@HVSupplyVoltage+1,___lwtoft@c+1
  1485  000960  EC22  F007         	call	___lwtoft	;wreg free
  1486  000964  C07C  F07F         	movff	?___lwtoft,___ftdiv@f1
  1487  000968  C07D  F080         	movff	?___lwtoft+1,___ftdiv@f1+1
  1488  00096C  C07E  F081         	movff	?___lwtoft+2,___ftdiv@f1+2
  1489  000970  0E00               	movlw	0
  1490  000972  0100               	movlb	0	; () banked
  1491  000974  6F82               	movwf	___ftdiv@f2& (0+255),b
  1492  000976  0E00               	movlw	0
  1493  000978  0100               	movlb	0	; () banked
  1494  00097A  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
  1495  00097C  0E44               	movlw	68
  1496  00097E  0100               	movlb	0	; () banked
  1497  000980  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
  1498  000982  EC84  F001         	call	___ftdiv	;wreg free
  1499  000986  C07F  F0A5         	movff	?___ftdiv,SetDCBrake_NominalVoltage@sPWMQuantum
  1500  00098A  C080  F0A6         	movff	?___ftdiv+1,SetDCBrake_NominalVoltage@sPWMQuantum+1
  1501  00098E  C081  F0A7         	movff	?___ftdiv+2,SetDCBrake_NominalVoltage@sPWMQuantum+2
  1502                           
  1503                           ;dc_brake.c: 57: SetDCBrake_PWMDuty(DCBrakeNominalVoltage / sPWMQuantum);
  1504  000992  C0A5  F082         	movff	SetDCBrake_NominalVoltage@sPWMQuantum,___ftdiv@f2
  1505  000996  C0A6  F083         	movff	SetDCBrake_NominalVoltage@sPWMQuantum+1,___ftdiv@f2+1
  1506  00099A  C0A7  F084         	movff	SetDCBrake_NominalVoltage@sPWMQuantum+2,___ftdiv@f2+2
  1507  00099E  C0A1  F07C         	movff	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage,___lwtoft@c
  1508  0009A2  C0A2  F07D         	movff	SetDCBrake_NominalVoltage@DCBrakeNominalVoltage+1,___lwtoft@c+1
  1509  0009A6  EC22  F007         	call	___lwtoft	;wreg free
  1510  0009AA  C07C  F07F         	movff	?___lwtoft,___ftdiv@f1
  1511  0009AE  C07D  F080         	movff	?___lwtoft+1,___ftdiv@f1+1
  1512  0009B2  C07E  F081         	movff	?___lwtoft+2,___ftdiv@f1+2
  1513  0009B6  EC84  F001         	call	___ftdiv	;wreg free
  1514  0009BA  C07F  F08E         	movff	?___ftdiv,___fttol@f1
  1515  0009BE  C080  F08F         	movff	?___ftdiv+1,___fttol@f1+1
  1516  0009C2  C081  F090         	movff	?___ftdiv+2,___fttol@f1+2
  1517  0009C6  EC25  F002         	call	___fttol	;wreg free
  1518  0009CA  C08E  F09D         	movff	?___fttol,SetDCBrake_PWMDuty@duty
  1519  0009CE  C08F  F09E         	movff	?___fttol+1,SetDCBrake_PWMDuty@duty+1
  1520  0009D2  ECF1  F005         	call	_SetDCBrake_PWMDuty	;wreg free
  1521  0009D6  D000               	goto	l244
  1522  0009D8                     l244:
  1523  0009D8  0012               	return		;funcret
  1524  0009DA                     __end_of_SetDCBrake_NominalVoltage:
  1525                           	opt stack 0
  1526                           tblptru	equ	0xFF8
  1527                           tblptrh	equ	0xFF7
  1528                           tblptrl	equ	0xFF6
  1529                           tablat	equ	0xFF5
  1530                           intcon	equ	0xFF2
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1l	equ	0xFE1
  1535                           status	equ	0xFD8
  1536                           
  1537 ;; *************** function ___lwtoft *****************
  1538 ;; Defined at:
  1539 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  c               2   28[BANK0 ] unsigned int 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  3   28[BANK0 ] float 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1553 ;;      Params:         0       3       0       0
  1554 ;;      Locals:         0       0       0       0
  1555 ;;      Temps:          0       0       0       0
  1556 ;;      Totals:         0       3       0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    5
  1560 ;; This function calls:
  1561 ;;		___ftpack
  1562 ;; This function is called by:
  1563 ;;		_SetDCBrake_NominalVoltage
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text7
  1568  000E44                     __ptext7:
  1569                           	opt stack 0
  1570  000E44                     ___lwtoft:
  1571                           	opt stack 24
  1572                           
  1573                           ;incstack = 0
  1574  000E44  C07C  F077         	movff	___lwtoft@c,___ftpack@arg
  1575  000E48  C07D  F078         	movff	___lwtoft@c+1,___ftpack@arg+1
  1576  000E4C  0100               	movlb	0	; () banked
  1577  000E4E  6B79               	clrf	(___ftpack@arg+2)& (0+255),b
  1578  000E50  0E8E               	movlw	142
  1579  000E52  0100               	movlb	0	; () banked
  1580  000E54  6F7A               	movwf	___ftpack@exp& (0+255),b
  1581  000E56  0E00               	movlw	0
  1582  000E58  0100               	movlb	0	; () banked
  1583  000E5A  6F7B               	movwf	___ftpack@sign& (0+255),b
  1584  000E5C  EC56  F003         	call	___ftpack	;wreg free
  1585  000E60  C077  F07C         	movff	?___ftpack,?___lwtoft
  1586  000E64  C078  F07D         	movff	?___ftpack+1,?___lwtoft+1
  1587  000E68  C079  F07E         	movff	?___ftpack+2,?___lwtoft+2
  1588  000E6C  D000               	goto	l874
  1589  000E6E                     l874:
  1590  000E6E  0012               	return		;funcret
  1591  000E70                     __end_of___lwtoft:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           intcon	equ	0xFF2
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1l	equ	0xFE1
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function ___fttol *****************
  1605 ;; Defined at:
  1606 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  f1              3   46[BANK0 ] float 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  lval            4   56[BANK0 ] unsigned long 
  1611 ;;  exp1            1   60[BANK0 ] unsigned char 
  1612 ;;  sign1           1   55[BANK0 ] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  4   46[BANK0 ] long 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1622 ;;      Params:         0       4       0       0
  1623 ;;      Locals:         0       6       0       0
  1624 ;;      Temps:          0       5       0       0
  1625 ;;      Totals:         0      15       0       0
  1626 ;;Total ram usage:       15 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    4
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_SetDCBrake_NominalVoltage
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text8
  1637  00044A                     __ptext8:
  1638                           	opt stack 0
  1639  00044A                     ___fttol:
  1640                           	opt stack 25
  1641                           
  1642                           ;incstack = 0
  1643  00044A  C090  F092         	movff	___fttol@f1+2,??___fttol
  1644  00044E  0100               	movlb	0	; () banked
  1645  000450  6B93               	clrf	(??___fttol+1)& (0+255),b
  1646  000452  6B94               	clrf	(??___fttol+2)& (0+255),b
  1647  000454  0100               	movlb	0	; () banked
  1648  000456  358F               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1649  000458  0100               	movlb	0	; () banked
  1650  00045A  3792               	rlcf	??___fttol& (0+255),f,b
  1651  00045C  E301               	bnc	u591
  1652  00045E  8193               	bsf	(??___fttol+1)& (0+255),0,b
  1653  000460                     u591:
  1654  000460  0100               	movlb	0	; () banked
  1655  000462  5192               	movf	??___fttol& (0+255),w,b
  1656  000464  0100               	movlb	0	; () banked
  1657  000466  6F9C               	movwf	___fttol@exp1& (0+255),b
  1658  000468  0100               	movlb	0	; () banked
  1659  00046A  519C               	movf	___fttol@exp1& (0+255),w,b
  1660  00046C  A4D8               	btfss	status,2,c
  1661  00046E  D002               	goto	l1562
  1662  000470  D051               	goto	l1586
  1663                           
  1664                           ; BSR set to: 0
  1665                           
  1666                           ; BSR set to: 0
  1667  000472  D083               	goto	l745
  1668  000474                     l1562:
  1669                           
  1670                           ; BSR set to: 0
  1671  000474  0E17               	movlw	23
  1672  000476  0100               	movlb	0	; () banked
  1673  000478  6F92               	movwf	??___fttol& (0+255),b
  1674  00047A  C08E  F093         	movff	___fttol@f1,??___fttol+1
  1675  00047E  C08F  F094         	movff	___fttol@f1+1,??___fttol+2
  1676  000482  C090  F095         	movff	___fttol@f1+2,??___fttol+3
  1677  000486  0100               	movlb	0	; () banked
  1678  000488  2992               	incf	??___fttol& (0+255),w,b
  1679  00048A  0100               	movlb	0	; () banked
  1680  00048C  6F96               	movwf	(??___fttol+4)& (0+255),b
  1681  00048E  D005               	goto	u610
  1682  000490                     u615:
  1683  000490  0100               	movlb	0	; () banked
  1684  000492  90D8               	bcf	status,0,c
  1685  000494  3395               	rrcf	(??___fttol+3)& (0+255),f,b
  1686  000496  3394               	rrcf	(??___fttol+2)& (0+255),f,b
  1687  000498  3393               	rrcf	(??___fttol+1)& (0+255),f,b
  1688  00049A                     u610:
  1689  00049A  0100               	movlb	0	; () banked
  1690  00049C  2F96               	decfsz	(??___fttol+4)& (0+255),f,b
  1691  00049E  D7F8               	goto	u615
  1692  0004A0  0100               	movlb	0	; () banked
  1693  0004A2  5193               	movf	(??___fttol+1)& (0+255),w,b
  1694  0004A4  0100               	movlb	0	; () banked
  1695  0004A6  6F97               	movwf	___fttol@sign1& (0+255),b
  1696                           
  1697                           ; BSR set to: 0
  1698  0004A8  0100               	movlb	0	; () banked
  1699  0004AA  8F8F               	bsf	(___fttol@f1+1)& (0+255),7,b
  1700                           
  1701                           ; BSR set to: 0
  1702  0004AC  0EFF               	movlw	255
  1703  0004AE  0100               	movlb	0	; () banked
  1704  0004B0  178E               	andwf	___fttol@f1& (0+255),f,b
  1705  0004B2  0EFF               	movlw	255
  1706  0004B4  0100               	movlb	0	; () banked
  1707  0004B6  178F               	andwf	(___fttol@f1+1)& (0+255),f,b
  1708  0004B8  0E00               	movlw	0
  1709  0004BA  0100               	movlb	0	; () banked
  1710  0004BC  1790               	andwf	(___fttol@f1+2)& (0+255),f,b
  1711                           
  1712                           ; BSR set to: 0
  1713  0004BE  0100               	movlb	0	; () banked
  1714  0004C0  518E               	movf	___fttol@f1& (0+255),w,b
  1715  0004C2  0100               	movlb	0	; () banked
  1716  0004C4  6F98               	movwf	___fttol@lval& (0+255),b
  1717  0004C6  0100               	movlb	0	; () banked
  1718  0004C8  518F               	movf	(___fttol@f1+1)& (0+255),w,b
  1719  0004CA  0100               	movlb	0	; () banked
  1720  0004CC  6F99               	movwf	(___fttol@lval+1)& (0+255),b
  1721  0004CE  0100               	movlb	0	; () banked
  1722  0004D0  5190               	movf	(___fttol@f1+2)& (0+255),w,b
  1723  0004D2  0100               	movlb	0	; () banked
  1724  0004D4  6F9A               	movwf	(___fttol@lval+2)& (0+255),b
  1725  0004D6  0100               	movlb	0	; () banked
  1726  0004D8  6B9B               	clrf	(___fttol@lval+3)& (0+255),b
  1727                           
  1728                           ; BSR set to: 0
  1729  0004DA  0E8E               	movlw	142
  1730  0004DC  0100               	movlb	0	; () banked
  1731  0004DE  5F9C               	subwf	___fttol@exp1& (0+255),f,b
  1732                           
  1733                           ; BSR set to: 0
  1734  0004E0  0100               	movlb	0	; () banked
  1735  0004E2  AF9C               	btfss	___fttol@exp1& (0+255),7,b
  1736  0004E4  D013               	goto	l1584
  1737                           
  1738                           ; BSR set to: 0
  1739  0004E6  0100               	movlb	0	; () banked
  1740  0004E8  519C               	movf	___fttol@exp1& (0+255),w,b
  1741  0004EA  0A80               	xorlw	128
  1742  0004EC  0F8F               	addlw	143
  1743  0004EE  B0D8               	btfsc	status,0,c
  1744  0004F0  D003               	goto	l1580
  1745  0004F2  D010               	goto	l1586
  1746                           
  1747                           ; BSR set to: 0
  1748                           
  1749                           ; BSR set to: 0
  1750  0004F4  D042               	goto	l745
  1751                           
  1752                           ; BSR set to: 0
  1753  0004F6  D000               	goto	l1580
  1754  0004F8                     l1580:
  1755                           
  1756                           ; BSR set to: 0
  1757  0004F8  0100               	movlb	0	; () banked
  1758  0004FA  90D8               	bcf	status,0,c
  1759  0004FC  339B               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1760  0004FE  339A               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1761  000500  3399               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1762  000502  3398               	rrcf	___fttol@lval& (0+255),f,b
  1763                           
  1764                           ; BSR set to: 0
  1765  000504  0100               	movlb	0	; () banked
  1766  000506  3F9C               	incfsz	___fttol@exp1& (0+255),f,b
  1767  000508  D7F7               	goto	l1580
  1768                           
  1769                           ; BSR set to: 0
  1770  00050A  D01F               	goto	l1594
  1771  00050C                     l1584:
  1772                           
  1773                           ; BSR set to: 0
  1774  00050C  0E17               	movlw	23
  1775  00050E  0100               	movlb	0	; () banked
  1776  000510  659C               	cpfsgt	___fttol@exp1& (0+255),b
  1777  000512  D014               	goto	l1592
  1778  000514                     l1586:
  1779                           
  1780                           ; BSR set to: 0
  1781  000514  0E00               	movlw	0
  1782  000516  0100               	movlb	0	; () banked
  1783  000518  6F8E               	movwf	?___fttol& (0+255),b
  1784  00051A  0E00               	movlw	0
  1785  00051C  6F8F               	movwf	(?___fttol+1)& (0+255),b
  1786  00051E  0E00               	movlw	0
  1787  000520  6F90               	movwf	(?___fttol+2)& (0+255),b
  1788  000522  0E00               	movlw	0
  1789  000524  6F91               	movwf	(?___fttol+3)& (0+255),b
  1790                           
  1791                           ; BSR set to: 0
  1792  000526  D029               	goto	l745
  1793                           
  1794                           ; BSR set to: 0
  1795  000528  D009               	goto	l1592
  1796  00052A                     l1590:
  1797                           
  1798                           ; BSR set to: 0
  1799  00052A  0100               	movlb	0	; () banked
  1800  00052C  90D8               	bcf	status,0,c
  1801  00052E  3798               	rlcf	___fttol@lval& (0+255),f,b
  1802  000530  3799               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1803  000532  379A               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1804  000534  379B               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1805  000536  0100               	movlb	0	; () banked
  1806  000538  079C               	decf	___fttol@exp1& (0+255),f,b
  1807  00053A  D000               	goto	l1592
  1808  00053C                     l1592:
  1809                           
  1810                           ; BSR set to: 0
  1811  00053C  0100               	movlb	0	; () banked
  1812  00053E  519C               	movf	___fttol@exp1& (0+255),w,b
  1813  000540  0100               	movlb	0	; () banked
  1814  000542  B4D8               	btfsc	status,2,c
  1815  000544  D002               	goto	l1594
  1816  000546  D7F1               	goto	l1590
  1817                           
  1818                           ; BSR set to: 0
  1819  000548  D000               	goto	l1594
  1820  00054A                     l1594:
  1821                           
  1822                           ; BSR set to: 0
  1823  00054A  0100               	movlb	0	; () banked
  1824  00054C  5197               	movf	___fttol@sign1& (0+255),w,b
  1825  00054E  0100               	movlb	0	; () banked
  1826  000550  B4D8               	btfsc	status,2,c
  1827  000552  D00A               	goto	l1598
  1828                           
  1829                           ; BSR set to: 0
  1830  000554  0100               	movlb	0	; () banked
  1831  000556  1F9B               	comf	(___fttol@lval+3)& (0+255),f,b
  1832  000558  1F9A               	comf	(___fttol@lval+2)& (0+255),f,b
  1833  00055A  1F99               	comf	(___fttol@lval+1)& (0+255),f,b
  1834  00055C  6D98               	negf	___fttol@lval& (0+255),b
  1835  00055E  0E00               	movlw	0
  1836  000560  2399               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1837  000562  239A               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1838  000564  239B               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1839  000566  D000               	goto	l1598
  1840  000568                     l1598:
  1841                           
  1842                           ; BSR set to: 0
  1843  000568  C098  F08E         	movff	___fttol@lval,?___fttol
  1844  00056C  C099  F08F         	movff	___fttol@lval+1,?___fttol+1
  1845  000570  C09A  F090         	movff	___fttol@lval+2,?___fttol+2
  1846  000574  C09B  F091         	movff	___fttol@lval+3,?___fttol+3
  1847  000578  D000               	goto	l745
  1848  00057A                     l745:
  1849                           
  1850                           ; BSR set to: 0
  1851  00057A  0012               	return		;funcret
  1852  00057C                     __end_of___fttol:
  1853                           	opt stack 0
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1l	equ	0xFE1
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function ___ftdiv *****************
  1866 ;; Defined at:
  1867 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  f1              3   31[BANK0 ] float 
  1870 ;;  f2              3   34[BANK0 ] float 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  f3              3   41[BANK0 ] float 
  1873 ;;  sign            1   45[BANK0 ] unsigned char 
  1874 ;;  exp             1   44[BANK0 ] unsigned char 
  1875 ;;  cntr            1   40[BANK0 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  3   31[BANK0 ] float 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1885 ;;      Params:         0       6       0       0
  1886 ;;      Locals:         0       6       0       0
  1887 ;;      Temps:          0       3       0       0
  1888 ;;      Totals:         0      15       0       0
  1889 ;;Total ram usage:       15 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    5
  1892 ;; This function calls:
  1893 ;;		___ftpack
  1894 ;; This function is called by:
  1895 ;;		_SetDCBrake_NominalVoltage
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text9
  1900  000308                     __ptext9:
  1901                           	opt stack 0
  1902  000308                     ___ftdiv:
  1903                           	opt stack 24
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;incstack = 0
  1907  000308  C081  F085         	movff	___ftdiv@f1+2,??___ftdiv
  1908  00030C  0100               	movlb	0	; () banked
  1909  00030E  6B86               	clrf	(??___ftdiv+1)& (0+255),b
  1910  000310  6B87               	clrf	(??___ftdiv+2)& (0+255),b
  1911  000312  0100               	movlb	0	; () banked
  1912  000314  3580               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1913  000316  0100               	movlb	0	; () banked
  1914  000318  3785               	rlcf	??___ftdiv& (0+255),f,b
  1915  00031A  E301               	bnc	u911
  1916  00031C  8186               	bsf	(??___ftdiv+1)& (0+255),0,b
  1917  00031E                     u911:
  1918  00031E  0100               	movlb	0	; () banked
  1919  000320  5185               	movf	??___ftdiv& (0+255),w,b
  1920  000322  0100               	movlb	0	; () banked
  1921  000324  6F8C               	movwf	___ftdiv@exp& (0+255),b
  1922  000326  0100               	movlb	0	; () banked
  1923  000328  518C               	movf	___ftdiv@exp& (0+255),w,b
  1924  00032A  A4D8               	btfss	status,2,c
  1925  00032C  D002               	goto	l2136
  1926  00032E  D014               	goto	l2138
  1927                           
  1928                           ; BSR set to: 0
  1929                           
  1930                           ; BSR set to: 0
  1931  000330  D08B               	goto	l709
  1932  000332                     l2136:
  1933                           
  1934                           ; BSR set to: 0
  1935  000332  C084  F085         	movff	___ftdiv@f2+2,??___ftdiv
  1936  000336  0100               	movlb	0	; () banked
  1937  000338  6B86               	clrf	(??___ftdiv+1)& (0+255),b
  1938  00033A  6B87               	clrf	(??___ftdiv+2)& (0+255),b
  1939  00033C  0100               	movlb	0	; () banked
  1940  00033E  3583               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  1941  000340  0100               	movlb	0	; () banked
  1942  000342  3785               	rlcf	??___ftdiv& (0+255),f,b
  1943  000344  E301               	bnc	u931
  1944  000346  8186               	bsf	(??___ftdiv+1)& (0+255),0,b
  1945  000348                     u931:
  1946  000348  0100               	movlb	0	; () banked
  1947  00034A  5185               	movf	??___ftdiv& (0+255),w,b
  1948  00034C  0100               	movlb	0	; () banked
  1949  00034E  6F8D               	movwf	___ftdiv@sign& (0+255),b
  1950  000350  0100               	movlb	0	; () banked
  1951  000352  518D               	movf	___ftdiv@sign& (0+255),w,b
  1952  000354  A4D8               	btfss	status,2,c
  1953  000356  D00A               	goto	l2142
  1954  000358                     l2138:
  1955                           
  1956                           ; BSR set to: 0
  1957  000358  0E00               	movlw	0
  1958  00035A  0100               	movlb	0	; () banked
  1959  00035C  6F7F               	movwf	?___ftdiv& (0+255),b
  1960  00035E  0E00               	movlw	0
  1961  000360  0100               	movlb	0	; () banked
  1962  000362  6F80               	movwf	(?___ftdiv+1)& (0+255),b
  1963  000364  0E00               	movlw	0
  1964  000366  0100               	movlb	0	; () banked
  1965  000368  6F81               	movwf	(?___ftdiv+2)& (0+255),b
  1966                           
  1967                           ; BSR set to: 0
  1968  00036A  D06E               	goto	l709
  1969  00036C                     l2142:
  1970                           
  1971                           ; BSR set to: 0
  1972  00036C  0E00               	movlw	0
  1973  00036E  0100               	movlb	0	; () banked
  1974  000370  6F89               	movwf	___ftdiv@f3& (0+255),b
  1975  000372  0E00               	movlw	0
  1976  000374  0100               	movlb	0	; () banked
  1977  000376  6F8A               	movwf	(___ftdiv@f3+1)& (0+255),b
  1978  000378  0E00               	movlw	0
  1979  00037A  0100               	movlb	0	; () banked
  1980  00037C  6F8B               	movwf	(___ftdiv@f3+2)& (0+255),b
  1981                           
  1982                           ; BSR set to: 0
  1983  00037E  0100               	movlb	0	; () banked
  1984  000380  518D               	movf	___ftdiv@sign& (0+255),w,b
  1985  000382  0F89               	addlw	137
  1986  000384  0100               	movlb	0	; () banked
  1987  000386  5F8C               	subwf	___ftdiv@exp& (0+255),f,b
  1988                           
  1989                           ; BSR set to: 0
  1990  000388  C081  F08D         	movff	___ftdiv@f1+2,___ftdiv@sign
  1991                           
  1992                           ; BSR set to: 0
  1993  00038C  0100               	movlb	0	; () banked
  1994  00038E  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1995  000390  0100               	movlb	0	; () banked
  1996  000392  1B8D               	xorwf	___ftdiv@sign& (0+255),f,b
  1997                           
  1998                           ; BSR set to: 0
  1999  000394  0E80               	movlw	128
  2000  000396  0100               	movlb	0	; () banked
  2001  000398  178D               	andwf	___ftdiv@sign& (0+255),f,b
  2002                           
  2003                           ; BSR set to: 0
  2004  00039A  0100               	movlb	0	; () banked
  2005  00039C  8F80               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2006                           
  2007                           ; BSR set to: 0
  2008  00039E  0EFF               	movlw	255
  2009  0003A0  0100               	movlb	0	; () banked
  2010  0003A2  177F               	andwf	___ftdiv@f1& (0+255),f,b
  2011  0003A4  0EFF               	movlw	255
  2012  0003A6  0100               	movlb	0	; () banked
  2013  0003A8  1780               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2014  0003AA  0E00               	movlw	0
  2015  0003AC  0100               	movlb	0	; () banked
  2016  0003AE  1781               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2017                           
  2018                           ; BSR set to: 0
  2019  0003B0  0100               	movlb	0	; () banked
  2020  0003B2  8F83               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2021                           
  2022                           ; BSR set to: 0
  2023  0003B4  0EFF               	movlw	255
  2024  0003B6  0100               	movlb	0	; () banked
  2025  0003B8  1782               	andwf	___ftdiv@f2& (0+255),f,b
  2026  0003BA  0EFF               	movlw	255
  2027  0003BC  0100               	movlb	0	; () banked
  2028  0003BE  1783               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2029  0003C0  0E00               	movlw	0
  2030  0003C2  0100               	movlb	0	; () banked
  2031  0003C4  1784               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2032                           
  2033                           ; BSR set to: 0
  2034  0003C6  0E18               	movlw	24
  2035  0003C8  0100               	movlb	0	; () banked
  2036  0003CA  6F88               	movwf	___ftdiv@cntr& (0+255),b
  2037  0003CC  D000               	goto	l2162
  2038  0003CE                     l2162:
  2039                           
  2040                           ; BSR set to: 0
  2041  0003CE  0100               	movlb	0	; () banked
  2042  0003D0  90D8               	bcf	status,0,c
  2043  0003D2  3789               	rlcf	___ftdiv@f3& (0+255),f,b
  2044  0003D4  378A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2045  0003D6  378B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2046                           
  2047                           ; BSR set to: 0
  2048  0003D8  0100               	movlb	0	; () banked
  2049  0003DA  5182               	movf	___ftdiv@f2& (0+255),w,b
  2050  0003DC  0100               	movlb	0	; () banked
  2051  0003DE  5D7F               	subwf	___ftdiv@f1& (0+255),w,b
  2052  0003E0  0100               	movlb	0	; () banked
  2053  0003E2  5183               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2054  0003E4  0100               	movlb	0	; () banked
  2055  0003E6  5980               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2056  0003E8  0100               	movlb	0	; () banked
  2057  0003EA  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2058  0003EC  0100               	movlb	0	; () banked
  2059  0003EE  5981               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2060  0003F0  A0D8               	btfss	status,0,c
  2061  0003F2  D00E               	goto	l712
  2062                           
  2063                           ; BSR set to: 0
  2064  0003F4  0100               	movlb	0	; () banked
  2065  0003F6  5182               	movf	___ftdiv@f2& (0+255),w,b
  2066  0003F8  0100               	movlb	0	; () banked
  2067  0003FA  5F7F               	subwf	___ftdiv@f1& (0+255),f,b
  2068  0003FC  0100               	movlb	0	; () banked
  2069  0003FE  5183               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2070  000400  0100               	movlb	0	; () banked
  2071  000402  5B80               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2072  000404  0100               	movlb	0	; () banked
  2073  000406  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2074  000408  0100               	movlb	0	; () banked
  2075  00040A  5B81               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2076                           
  2077                           ; BSR set to: 0
  2078  00040C  0100               	movlb	0	; () banked
  2079  00040E  8189               	bsf	___ftdiv@f3& (0+255),0,b
  2080  000410                     l712:
  2081                           
  2082                           ; BSR set to: 0
  2083  000410  0100               	movlb	0	; () banked
  2084  000412  90D8               	bcf	status,0,c
  2085  000414  377F               	rlcf	___ftdiv@f1& (0+255),f,b
  2086  000416  3780               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2087  000418  3781               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2088                           
  2089                           ; BSR set to: 0
  2090  00041A  0100               	movlb	0	; () banked
  2091  00041C  2F88               	decfsz	___ftdiv@cntr& (0+255),f,b
  2092  00041E  D7D7               	goto	l2162
  2093  000420  D000               	goto	l2172
  2094  000422                     l2172:
  2095                           
  2096                           ; BSR set to: 0
  2097  000422  C089  F077         	movff	___ftdiv@f3,___ftpack@arg
  2098  000426  C08A  F078         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2099  00042A  C08B  F079         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2100  00042E  C08C  F07A         	movff	___ftdiv@exp,___ftpack@exp
  2101  000432  C08D  F07B         	movff	___ftdiv@sign,___ftpack@sign
  2102  000436  EC56  F003         	call	___ftpack	;wreg free
  2103  00043A  C077  F07F         	movff	?___ftpack,?___ftdiv
  2104  00043E  C078  F080         	movff	?___ftpack+1,?___ftdiv+1
  2105  000442  C079  F081         	movff	?___ftpack+2,?___ftdiv+2
  2106  000446  D000               	goto	l709
  2107  000448                     l709:
  2108  000448  0012               	return		;funcret
  2109  00044A                     __end_of___ftdiv:
  2110                           	opt stack 0
  2111                           tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           intcon	equ	0xFF2
  2116                           postinc0	equ	0xFEE
  2117                           wreg	equ	0xFE8
  2118                           postdec1	equ	0xFE5
  2119                           fsr1l	equ	0xFE1
  2120                           status	equ	0xFD8
  2121                           
  2122 ;; *************** function ___ftpack *****************
  2123 ;; Defined at:
  2124 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  arg             3   23[BANK0 ] unsigned um
  2127 ;;  exp             1   26[BANK0 ] unsigned char 
  2128 ;;  sign            1   27[BANK0 ] unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  3   23[BANK0 ] float 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2140 ;;      Params:         0       5       0       0
  2141 ;;      Locals:         0       0       0       0
  2142 ;;      Temps:          3       0       0       0
  2143 ;;      Totals:         3       5       0       0
  2144 ;;Total ram usage:        8 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    4
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		___ftdiv
  2151 ;;		___lwtoft
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text10
  2156  0006AC                     __ptext10:
  2157                           	opt stack 0
  2158  0006AC                     ___ftpack:
  2159                           	opt stack 24
  2160                           
  2161                           ;incstack = 0
  2162  0006AC  0100               	movlb	0	; () banked
  2163  0006AE  517A               	movf	___ftpack@exp& (0+255),w,b
  2164  0006B0  0100               	movlb	0	; () banked
  2165  0006B2  B4D8               	btfsc	status,2,c
  2166  0006B4  D008               	goto	l2062
  2167                           
  2168                           ; BSR set to: 0
  2169  0006B6  0100               	movlb	0	; () banked
  2170  0006B8  5177               	movf	___ftpack@arg& (0+255),w,b
  2171  0006BA  0100               	movlb	0	; () banked
  2172  0006BC  1178               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2173  0006BE  0100               	movlb	0	; () banked
  2174  0006C0  1179               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2175  0006C2  A4D8               	btfss	status,2,c
  2176  0006C4  D013               	goto	l2068
  2177  0006C6                     l2062:
  2178                           
  2179                           ; BSR set to: 0
  2180  0006C6  0E00               	movlw	0
  2181  0006C8  0100               	movlb	0	; () banked
  2182  0006CA  6F77               	movwf	?___ftpack& (0+255),b
  2183  0006CC  0E00               	movlw	0
  2184  0006CE  0100               	movlb	0	; () banked
  2185  0006D0  6F78               	movwf	(?___ftpack+1)& (0+255),b
  2186  0006D2  0E00               	movlw	0
  2187  0006D4  0100               	movlb	0	; () banked
  2188  0006D6  6F79               	movwf	(?___ftpack+2)& (0+255),b
  2189                           
  2190                           ; BSR set to: 0
  2191  0006D8  D06C               	goto	l637
  2192                           
  2193                           ; BSR set to: 0
  2194  0006DA  D008               	goto	l2068
  2195  0006DC                     l2066:
  2196                           
  2197                           ; BSR set to: 0
  2198  0006DC  0100               	movlb	0	; () banked
  2199  0006DE  2B7A               	incf	___ftpack@exp& (0+255),f,b
  2200  0006E0  0100               	movlb	0	; () banked
  2201  0006E2  90D8               	bcf	status,0,c
  2202  0006E4  3379               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2203  0006E6  3378               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2204  0006E8  3377               	rrcf	___ftpack@arg& (0+255),f,b
  2205  0006EA  D000               	goto	l2068
  2206  0006EC                     l2068:
  2207                           
  2208                           ; BSR set to: 0
  2209  0006EC  0E00               	movlw	0
  2210  0006EE  0100               	movlb	0	; () banked
  2211  0006F0  1577               	andwf	___ftpack@arg& (0+255),w,b
  2212  0006F2  6E41               	movwf	??___ftpack& (0+255),c
  2213  0006F4  0E00               	movlw	0
  2214  0006F6  0100               	movlb	0	; () banked
  2215  0006F8  1578               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2216  0006FA  6E42               	movwf	(??___ftpack+1)& (0+255),c
  2217  0006FC  0EFE               	movlw	254
  2218  0006FE  0100               	movlb	0	; () banked
  2219  000700  1579               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2220  000702  6E43               	movwf	(??___ftpack+2)& (0+255),c
  2221  000704  5041               	movf	??___ftpack,w,c
  2222  000706  1042               	iorwf	??___ftpack+1,w,c
  2223  000708  1043               	iorwf	??___ftpack+2,w,c
  2224  00070A  B4D8               	btfsc	status,2,c
  2225  00070C  D013               	goto	l2074
  2226  00070E  D7E6               	goto	l2066
  2227                           
  2228                           ; BSR set to: 0
  2229  000710  D011               	goto	l2074
  2230  000712                     l2070:
  2231                           
  2232                           ; BSR set to: 0
  2233  000712  0100               	movlb	0	; () banked
  2234  000714  2B7A               	incf	___ftpack@exp& (0+255),f,b
  2235                           
  2236                           ; BSR set to: 0
  2237  000716  0E01               	movlw	1
  2238  000718  0100               	movlb	0	; () banked
  2239  00071A  2777               	addwf	___ftpack@arg& (0+255),f,b
  2240  00071C  0E00               	movlw	0
  2241  00071E  0100               	movlb	0	; () banked
  2242  000720  2378               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2243  000722  0E00               	movlw	0
  2244  000724  0100               	movlb	0	; () banked
  2245  000726  2379               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2246  000728  0100               	movlb	0	; () banked
  2247  00072A  90D8               	bcf	status,0,c
  2248  00072C  3379               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2249  00072E  3378               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2250  000730  3377               	rrcf	___ftpack@arg& (0+255),f,b
  2251  000732  D000               	goto	l2074
  2252  000734                     l2074:
  2253                           
  2254                           ; BSR set to: 0
  2255  000734  0E00               	movlw	0
  2256  000736  0100               	movlb	0	; () banked
  2257  000738  1577               	andwf	___ftpack@arg& (0+255),w,b
  2258  00073A  6E41               	movwf	??___ftpack& (0+255),c
  2259  00073C  0E00               	movlw	0
  2260  00073E  0100               	movlb	0	; () banked
  2261  000740  1578               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2262  000742  6E42               	movwf	(??___ftpack+1)& (0+255),c
  2263  000744  0EFF               	movlw	255
  2264  000746  0100               	movlb	0	; () banked
  2265  000748  1579               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2266  00074A  6E43               	movwf	(??___ftpack+2)& (0+255),c
  2267  00074C  5041               	movf	??___ftpack,w,c
  2268  00074E  1042               	iorwf	??___ftpack+1,w,c
  2269  000750  1043               	iorwf	??___ftpack+2,w,c
  2270  000752  B4D8               	btfsc	status,2,c
  2271  000754  D00A               	goto	l2078
  2272  000756  D7DD               	goto	l2070
  2273                           
  2274                           ; BSR set to: 0
  2275  000758  D008               	goto	l2078
  2276  00075A                     l2076:
  2277                           
  2278                           ; BSR set to: 0
  2279  00075A  0100               	movlb	0	; () banked
  2280  00075C  077A               	decf	___ftpack@exp& (0+255),f,b
  2281  00075E  0100               	movlb	0	; () banked
  2282  000760  90D8               	bcf	status,0,c
  2283  000762  3777               	rlcf	___ftpack@arg& (0+255),f,b
  2284  000764  3778               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  2285  000766  3779               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  2286  000768  D000               	goto	l2078
  2287  00076A                     l2078:
  2288                           
  2289                           ; BSR set to: 0
  2290  00076A  0100               	movlb	0	; () banked
  2291  00076C  BF78               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  2292  00076E  D005               	goto	l648
  2293                           
  2294                           ; BSR set to: 0
  2295  000770  0E02               	movlw	2
  2296  000772  0100               	movlb	0	; () banked
  2297  000774  617A               	cpfslt	___ftpack@exp& (0+255),b
  2298  000776  D7F1               	goto	l2076
  2299  000778  D000               	goto	l648
  2300  00077A                     l648:
  2301                           
  2302                           ; BSR set to: 0
  2303  00077A  0100               	movlb	0	; () banked
  2304  00077C  B17A               	btfsc	___ftpack@exp& (0+255),0,b
  2305  00077E  D003               	goto	l2084
  2306                           
  2307                           ; BSR set to: 0
  2308  000780  0100               	movlb	0	; () banked
  2309  000782  9F78               	bcf	(___ftpack@arg+1)& (0+255),7,b
  2310  000784  D000               	goto	l2084
  2311  000786                     l2084:
  2312                           
  2313                           ; BSR set to: 0
  2314  000786  0100               	movlb	0	; () banked
  2315  000788  90D8               	bcf	status,0,c
  2316  00078A  337A               	rrcf	___ftpack@exp& (0+255),f,b
  2317  00078C  0100               	movlb	0	; () banked
  2318  00078E  517A               	movf	___ftpack@exp& (0+255),w,b
  2319  000790  0100               	movlb	0	; () banked
  2320  000792  1379               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  2321                           
  2322                           ; BSR set to: 0
  2323  000794  0100               	movlb	0	; () banked
  2324  000796  517B               	movf	___ftpack@sign& (0+255),w,b
  2325  000798  0100               	movlb	0	; () banked
  2326  00079A  B4D8               	btfsc	status,2,c
  2327  00079C  D003               	goto	l2090
  2328                           
  2329                           ; BSR set to: 0
  2330  00079E  0100               	movlb	0	; () banked
  2331  0007A0  8F79               	bsf	(___ftpack@arg+2)& (0+255),7,b
  2332  0007A2  D000               	goto	l2090
  2333  0007A4                     l2090:
  2334                           
  2335                           ; BSR set to: 0
  2336  0007A4  C077  F077         	movff	___ftpack@arg,?___ftpack
  2337  0007A8  C078  F078         	movff	___ftpack@arg+1,?___ftpack+1
  2338  0007AC  C079  F079         	movff	___ftpack@arg+2,?___ftpack+2
  2339  0007B0  D000               	goto	l637
  2340  0007B2                     l637:
  2341                           
  2342                           ; BSR set to: 0
  2343  0007B2  0012               	return		;funcret
  2344  0007B4                     __end_of___ftpack:
  2345                           	opt stack 0
  2346                           tblptru	equ	0xFF8
  2347                           tblptrh	equ	0xFF7
  2348                           tblptrl	equ	0xFF6
  2349                           tablat	equ	0xFF5
  2350                           intcon	equ	0xFF2
  2351                           postinc0	equ	0xFEE
  2352                           wreg	equ	0xFE8
  2353                           postdec1	equ	0xFE5
  2354                           fsr1l	equ	0xFE1
  2355                           status	equ	0xFD8
  2356                           
  2357 ;; *************** function _SetDCBrake_PWMDuty *****************
  2358 ;; Defined at:
  2359 ;;		line 22 in file "dc_brake.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  duty            2   61[BANK0 ] unsigned int 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2373 ;;      Params:         0       2       0       0
  2374 ;;      Locals:         0       0       0       0
  2375 ;;      Temps:          0       2       0       0
  2376 ;;      Totals:         0       4       0       0
  2377 ;;Total ram usage:        4 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    4
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_SetDCBrake_NominalVoltage
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text11
  2388  000BE2                     __ptext11:
  2389                           	opt stack 0
  2390  000BE2                     _SetDCBrake_PWMDuty:
  2391                           	opt stack 25
  2392                           
  2393                           ;dc_brake.c: 24: CCP1CONbits.DC1B0 = duty & 1;
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;incstack = 0
  2397  000BE2  C09D  F09F         	movff	SetDCBrake_PWMDuty@duty,??_SetDCBrake_PWMDuty
  2398  000BE6  0E01               	movlw	1
  2399  000BE8  0100               	movlb	0	; () banked
  2400  000BEA  179F               	andwf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2401  000BEC  0100               	movlb	0	; () banked
  2402  000BEE  3B9F               	swapf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2403  000BF0  50BD               	movf	4029,w,c	;volatile
  2404  000BF2  0100               	movlb	0	; () banked
  2405  000BF4  199F               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2406  000BF6  0BEF               	andlw	-17
  2407  000BF8  199F               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2408  000BFA  6EBD               	movwf	4029,c	;volatile
  2409                           
  2410                           ;dc_brake.c: 25: CCP1CONbits.DC1B1 = (duty >> 1) & 1;
  2411  000BFC  90D8               	bcf	status,0,c
  2412  000BFE  0100               	movlb	0	; () banked
  2413  000C00  319E               	rrcf	(SetDCBrake_PWMDuty@duty+1)& (0+255),w,b
  2414  000C02  0100               	movlb	0	; () banked
  2415  000C04  6FA0               	movwf	(??_SetDCBrake_PWMDuty+1)& (0+255),b
  2416  000C06  0100               	movlb	0	; () banked
  2417  000C08  319D               	rrcf	SetDCBrake_PWMDuty@duty& (0+255),w,b
  2418  000C0A  0100               	movlb	0	; () banked
  2419  000C0C  6F9F               	movwf	??_SetDCBrake_PWMDuty& (0+255),b
  2420  000C0E  0E01               	movlw	1
  2421  000C10  0100               	movlb	0	; () banked
  2422  000C12  179F               	andwf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2423  000C14  0100               	movlb	0	; () banked
  2424  000C16  3B9F               	swapf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2425  000C18  479F               	rlncf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2426  000C1A  50BD               	movf	4029,w,c	;volatile
  2427  000C1C  0100               	movlb	0	; () banked
  2428  000C1E  199F               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2429  000C20  0BDF               	andlw	-33
  2430  000C22  199F               	xorwf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2431  000C24  6EBD               	movwf	4029,c	;volatile
  2432                           
  2433                           ;dc_brake.c: 26: CCPR1L = (duty >> 2);
  2434  000C26  C09D  F09F         	movff	SetDCBrake_PWMDuty@duty,??_SetDCBrake_PWMDuty
  2435  000C2A  C09E  F0A0         	movff	SetDCBrake_PWMDuty@duty+1,??_SetDCBrake_PWMDuty+1
  2436  000C2E  0100               	movlb	0	; () banked
  2437  000C30  90D8               	bcf	status,0,c
  2438  000C32  33A0               	rrcf	(??_SetDCBrake_PWMDuty+1)& (0+255),f,b
  2439  000C34  339F               	rrcf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2440  000C36  0100               	movlb	0	; () banked
  2441  000C38  90D8               	bcf	status,0,c
  2442  000C3A  33A0               	rrcf	(??_SetDCBrake_PWMDuty+1)& (0+255),f,b
  2443  000C3C  339F               	rrcf	??_SetDCBrake_PWMDuty& (0+255),f,b
  2444  000C3E  0100               	movlb	0	; () banked
  2445  000C40  519F               	movf	??_SetDCBrake_PWMDuty& (0+255),w,b
  2446  000C42  6EBE               	movwf	4030,c	;volatile
  2447                           
  2448                           ; BSR set to: 0
  2449  000C44  0012               	return		;funcret
  2450  000C46                     __end_of_SetDCBrake_PWMDuty:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           intcon	equ	0xFF2
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1l	equ	0xFE1
  2461                           status	equ	0xFD8
  2462                           
  2463 ;; *************** function _Package_WriteDataByte *****************
  2464 ;; Defined at:
  2465 ;;		line 18 in file "comm_protocol.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  p               2   28[BANK0 ] PTR volatile struct pack
  2468 ;;		 -> out(39), in(39), 
  2469 ;;  d               1   30[BANK0 ] unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2481 ;;      Params:         0       3       0       0
  2482 ;;      Locals:         0       0       0       0
  2483 ;;      Temps:          0       0       0       0
  2484 ;;      Totals:         0       3       0       0
  2485 ;;Total ram usage:        3 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    5
  2488 ;; This function calls:
  2489 ;;		_Buffer_Write
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text12
  2496  000DE8                     __ptext12:
  2497                           	opt stack 0
  2498  000DE8                     _Package_WriteDataByte:
  2499                           	opt stack 25
  2500                           
  2501                           ;comm_protocol.c: 20: Buffer_Write(d, &p->DATA);
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;incstack = 0
  2505  000DE8  0E02               	movlw	2
  2506  000DEA  0100               	movlb	0	; () banked
  2507  000DEC  257C               	addwf	Package_WriteDataByte@p& (0+255),w,b
  2508  000DEE  0100               	movlb	0	; () banked
  2509  000DF0  6F77               	movwf	Buffer_Write@buff& (0+255),b
  2510  000DF2  0E00               	movlw	0
  2511  000DF4  0100               	movlb	0	; () banked
  2512  000DF6  217D               	addwfc	(Package_WriteDataByte@p+1)& (0+255),w,b
  2513  000DF8  0100               	movlb	0	; () banked
  2514  000DFA  6F78               	movwf	(Buffer_Write@buff+1)& (0+255),b
  2515  000DFC  0100               	movlb	0	; () banked
  2516  000DFE  517E               	movf	Package_WriteDataByte@d& (0+255),w,b
  2517  000E00  EC37  F005         	call	_Buffer_Write
  2518                           
  2519                           ;comm_protocol.c: 21: p->NUM_OF_BYTES++;
  2520  000E04  0100               	movlb	0	; () banked
  2521  000E06  EE20 F001          	lfsr	2,1
  2522  000E0A  517C               	movf	Package_WriteDataByte@p& (0+255),w,b
  2523  000E0C  26D9               	addwf	fsr2l,f,c
  2524  000E0E  517D               	movf	(Package_WriteDataByte@p+1)& (0+255),w,b
  2525  000E10  22DA               	addwfc	fsr2h,f,c
  2526  000E12  2ADF               	incf	indf2,f,c
  2527                           
  2528                           ; BSR set to: 0
  2529  000E14  0012               	return		;funcret
  2530  000E16                     __end_of_Package_WriteDataByte:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           intcon	equ	0xFF2
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           postdec1	equ	0xFE5
  2540                           fsr1l	equ	0xFE1
  2541                           indf2	equ	0xFDF
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function _Buffer_Write *****************
  2547 ;; Defined at:
  2548 ;;		line 4 in file "ring_buffer.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  data            1    wreg     unsigned char 
  2551 ;;  buff            2   23[BANK0 ] PTR volatile struct circ
  2552 ;;		 -> out(39), in(39), 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  data            1   25[BANK0 ] unsigned char 
  2555 ;;  next            2   26[BANK0 ] unsigned int 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;		None               void
  2558 ;; Registers used:
  2559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2565 ;;      Params:         0       2       0       0
  2566 ;;      Locals:         0       3       0       0
  2567 ;;      Temps:          2       0       0       0
  2568 ;;      Totals:         2       5       0       0
  2569 ;;Total ram usage:        7 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    4
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_Package_WriteDataByte
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text13
  2580  000A6E                     __ptext13:
  2581                           	opt stack 0
  2582  000A6E                     _Buffer_Write:
  2583                           	opt stack 25
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;incstack = 0
  2587                           ;Buffer_Write@data stored from wreg
  2588  000A6E  0100               	movlb	0	; () banked
  2589  000A70  6F79               	movwf	Buffer_Write@data& (0+255),b
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;ring_buffer.c: 6: unsigned int next = (unsigned int)(buff->head + 1) % 32;
  2593  000A72  0100               	movlb	0	; () banked
  2594  000A74  EE20 F020          	lfsr	2,32
  2595  000A78  5177               	movf	Buffer_Write@buff& (0+255),w,b
  2596  000A7A  26D9               	addwf	fsr2l,f,c
  2597  000A7C  5178               	movf	(Buffer_Write@buff+1)& (0+255),w,b
  2598  000A7E  22DA               	addwfc	fsr2h,f,c
  2599  000A80  CFDE F041          	movff	postinc2,??_Buffer_Write
  2600  000A84  CFDD F042          	movff	postdec2,??_Buffer_Write+1
  2601  000A88  0E01               	movlw	1
  2602  000A8A  2641               	addwf	??_Buffer_Write,f,c
  2603  000A8C  0E00               	movlw	0
  2604  000A8E  2242               	addwfc	??_Buffer_Write+1,f,c
  2605  000A90  0E1F               	movlw	31
  2606  000A92  1441               	andwf	??_Buffer_Write,w,c
  2607  000A94  0100               	movlb	0	; () banked
  2608  000A96  6F7A               	movwf	Buffer_Write@next& (0+255),b
  2609  000A98  0100               	movlb	0	; () banked
  2610  000A9A  6B7B               	clrf	(Buffer_Write@next+1)& (0+255),b
  2611                           
  2612                           ;ring_buffer.c: 7: if (next != buff->tail)
  2613  000A9C  0100               	movlb	0	; () banked
  2614  000A9E  EE20 F022          	lfsr	2,34
  2615  000AA2  5177               	movf	Buffer_Write@buff& (0+255),w,b
  2616  000AA4  26D9               	addwf	fsr2l,f,c
  2617  000AA6  5178               	movf	(Buffer_Write@buff+1)& (0+255),w,b
  2618  000AA8  22DA               	addwfc	fsr2h,f,c
  2619  000AAA  0100               	movlb	0	; () banked
  2620  000AAC  517A               	movf	Buffer_Write@next& (0+255),w,b
  2621  000AAE  18DE               	xorwf	postinc2,w,c
  2622  000AB0  E105               	bnz	u880
  2623  000AB2  0100               	movlb	0	; () banked
  2624  000AB4  517B               	movf	(Buffer_Write@next+1)& (0+255),w,b
  2625  000AB6  18DE               	xorwf	postinc2,w,c
  2626  000AB8  B4D8               	btfsc	status,2,c
  2627  000ABA  D021               	goto	l272
  2628  000ABC                     u880:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;ring_buffer.c: 8: {
  2632                           ;ring_buffer.c: 9: buff->buffer[buff->head] = data;
  2633  000ABC  0100               	movlb	0	; () banked
  2634  000ABE  EE20 F020          	lfsr	2,32
  2635  000AC2  5177               	movf	Buffer_Write@buff& (0+255),w,b
  2636  000AC4  26D9               	addwf	fsr2l,f,c
  2637  000AC6  5178               	movf	(Buffer_Write@buff+1)& (0+255),w,b
  2638  000AC8  22DA               	addwfc	fsr2h,f,c
  2639  000ACA  CFDE F041          	movff	postinc2,??_Buffer_Write
  2640  000ACE  CFDD F042          	movff	postdec2,??_Buffer_Write+1
  2641  000AD2  5041               	movf	??_Buffer_Write,w,c
  2642  000AD4  0100               	movlb	0	; () banked
  2643  000AD6  2577               	addwf	Buffer_Write@buff& (0+255),w,b
  2644  000AD8  6ED9               	movwf	fsr2l,c
  2645  000ADA  5042               	movf	??_Buffer_Write+1,w,c
  2646  000ADC  0100               	movlb	0	; () banked
  2647  000ADE  2178               	addwfc	(Buffer_Write@buff+1)& (0+255),w,b
  2648  000AE0  6EDA               	movwf	fsr2h,c
  2649  000AE2  C079  FFDF         	movff	Buffer_Write@data,indf2
  2650                           
  2651                           ;ring_buffer.c: 10: buff->head = next;
  2652  000AE6  0100               	movlb	0	; () banked
  2653  000AE8  EE20 F020          	lfsr	2,32
  2654  000AEC  5177               	movf	Buffer_Write@buff& (0+255),w,b
  2655  000AEE  26D9               	addwf	fsr2l,f,c
  2656  000AF0  5178               	movf	(Buffer_Write@buff+1)& (0+255),w,b
  2657  000AF2  22DA               	addwfc	fsr2h,f,c
  2658  000AF4  C07A  FFDE         	movff	Buffer_Write@next,postinc2
  2659  000AF8  C07B  FFDD         	movff	Buffer_Write@next+1,postdec2
  2660  000AFC  D000               	goto	l272
  2661  000AFE                     l272:
  2662                           
  2663                           ; BSR set to: 0
  2664  000AFE  0012               	return		;funcret
  2665  000B00                     __end_of_Buffer_Write:
  2666                           	opt stack 0
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           postdec1	equ	0xFE5
  2675                           fsr1l	equ	0xFE1
  2676                           indf2	equ	0xFDF
  2677                           postinc2	equ	0xFDE
  2678                           postdec2	equ	0xFDD
  2679                           fsr2h	equ	0xFDA
  2680                           fsr2l	equ	0xFD9
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _Package_Send *****************
  2684 ;; Defined at:
  2685 ;;		line 4 in file "comm_protocol.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  p               2   29[BANK0 ] PTR volatile struct pack
  2688 ;;		 -> out(39), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  i               1    0        unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2700 ;;      Params:         0       2       0       0
  2701 ;;      Locals:         0       0       0       0
  2702 ;;      Temps:          1       0       0       0
  2703 ;;      Totals:         1       2       0       0
  2704 ;;Total ram usage:        3 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    5
  2707 ;; This function calls:
  2708 ;;		_Buffer_GetCRC8
  2709 ;;		_Buffer_Read
  2710 ;;		_UARTSendByte
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text14
  2717  0009DA                     __ptext14:
  2718                           	opt stack 0
  2719  0009DA                     _Package_Send:
  2720                           	opt stack 25
  2721                           
  2722                           ;comm_protocol.c: 6: unsigned char i;
  2723                           ;comm_protocol.c: 7: p->CRC8 = Buffer_GetCRC8(&p->DATA);
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;incstack = 0
  2727  0009DA  0E02               	movlw	2
  2728  0009DC  0100               	movlb	0	; () banked
  2729  0009DE  257D               	addwf	Package_Send@p& (0+255),w,b
  2730  0009E0  0100               	movlb	0	; () banked
  2731  0009E2  6F77               	movwf	Buffer_GetCRC8@buff& (0+255),b
  2732  0009E4  0E00               	movlw	0
  2733  0009E6  0100               	movlb	0	; () banked
  2734  0009E8  217E               	addwfc	(Package_Send@p+1)& (0+255),w,b
  2735  0009EA  0100               	movlb	0	; () banked
  2736  0009EC  6F78               	movwf	(Buffer_GetCRC8@buff+1)& (0+255),b
  2737  0009EE  EC23  F006         	call	_Buffer_GetCRC8	;wreg free
  2738  0009F2  6E43               	movwf	??_Package_Send& (0+255),c
  2739  0009F4  0100               	movlb	0	; () banked
  2740  0009F6  EE20 F026          	lfsr	2,38
  2741  0009FA  517D               	movf	Package_Send@p& (0+255),w,b
  2742  0009FC  26D9               	addwf	fsr2l,f,c
  2743  0009FE  517E               	movf	(Package_Send@p+1)& (0+255),w,b
  2744  000A00  22DA               	addwfc	fsr2h,f,c
  2745  000A02  C043  FFDF         	movff	??_Package_Send,indf2
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;comm_protocol.c: 9: UARTSendByte(p->ADR);
  2749  000A06  C07D  FFD9         	movff	Package_Send@p,fsr2l
  2750  000A0A  C07E  FFDA         	movff	Package_Send@p+1,fsr2h
  2751  000A0E  50DF               	movf	indf2,w,c
  2752  000A10  EC70  F007         	call	_UARTSendByte
  2753                           
  2754                           ;comm_protocol.c: 10: while(p->NUM_OF_BYTES != 0)
  2755  000A14  D017               	goto	l2328
  2756  000A16                     l2324:
  2757                           
  2758                           ;comm_protocol.c: 11: {
  2759                           ;comm_protocol.c: 12: UARTSendByte(Buffer_Read(&p->DATA));
  2760  000A16  0E02               	movlw	2
  2761  000A18  0100               	movlb	0	; () banked
  2762  000A1A  257D               	addwf	Package_Send@p& (0+255),w,b
  2763  000A1C  0100               	movlb	0	; () banked
  2764  000A1E  6F77               	movwf	Buffer_Read@buff& (0+255),b
  2765  000A20  0E00               	movlw	0
  2766  000A22  0100               	movlb	0	; () banked
  2767  000A24  217E               	addwfc	(Package_Send@p+1)& (0+255),w,b
  2768  000A26  0100               	movlb	0	; () banked
  2769  000A28  6F78               	movwf	(Buffer_Read@buff+1)& (0+255),b
  2770  000A2A  EC4F  F004         	call	_Buffer_Read	;wreg free
  2771  000A2E  EC70  F007         	call	_UARTSendByte
  2772                           
  2773                           ;comm_protocol.c: 13: p->NUM_OF_BYTES--;
  2774  000A32  0100               	movlb	0	; () banked
  2775  000A34  EE20 F001          	lfsr	2,1
  2776  000A38  517D               	movf	Package_Send@p& (0+255),w,b
  2777  000A3A  26D9               	addwf	fsr2l,f,c
  2778  000A3C  517E               	movf	(Package_Send@p+1)& (0+255),w,b
  2779  000A3E  22DA               	addwfc	fsr2h,f,c
  2780  000A40  06DF               	decf	indf2,f,c
  2781  000A42  D000               	goto	l2328
  2782  000A44                     l2328:
  2783  000A44  0100               	movlb	0	; () banked
  2784  000A46  EE20 F001          	lfsr	2,1
  2785  000A4A  517D               	movf	Package_Send@p& (0+255),w,b
  2786  000A4C  26D9               	addwf	fsr2l,f,c
  2787  000A4E  517E               	movf	(Package_Send@p+1)& (0+255),w,b
  2788  000A50  22DA               	addwfc	fsr2h,f,c
  2789  000A52  50DF               	movf	indf2,w,c
  2790  000A54  A4D8               	btfss	status,2,c
  2791  000A56  D7DF               	goto	l2324
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;comm_protocol.c: 14: }
  2795                           ;comm_protocol.c: 15: UARTSendByte(p->CRC8);
  2796                           
  2797                           ; BSR set to: 0
  2798  000A58  0100               	movlb	0	; () banked
  2799  000A5A  EE20 F026          	lfsr	2,38
  2800  000A5E  517D               	movf	Package_Send@p& (0+255),w,b
  2801  000A60  26D9               	addwf	fsr2l,f,c
  2802  000A62  517E               	movf	(Package_Send@p+1)& (0+255),w,b
  2803  000A64  22DA               	addwfc	fsr2h,f,c
  2804  000A66  50DF               	movf	indf2,w,c
  2805  000A68  EC70  F007         	call	_UARTSendByte
  2806  000A6C  0012               	return		;funcret
  2807  000A6E                     __end_of_Package_Send:
  2808                           	opt stack 0
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           intcon	equ	0xFF2
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           postdec1	equ	0xFE5
  2817                           fsr1l	equ	0xFE1
  2818                           indf2	equ	0xFDF
  2819                           postinc2	equ	0xFDE
  2820                           postdec2	equ	0xFDD
  2821                           fsr2h	equ	0xFDA
  2822                           fsr2l	equ	0xFD9
  2823                           status	equ	0xFD8
  2824                           
  2825 ;; *************** function _UARTSendByte *****************
  2826 ;; Defined at:
  2827 ;;		line 56 in file "uart.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  data            1    wreg     unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  data            1   25[COMRAM] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;		None               void
  2834 ;; Registers used:
  2835 ;;		wreg
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2841 ;;      Params:         0       0       0       0
  2842 ;;      Locals:         1       0       0       0
  2843 ;;      Temps:          0       0       0       0
  2844 ;;      Totals:         1       0       0       0
  2845 ;;Total ram usage:        1 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    4
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;;		_Package_Send
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text15
  2857  000EE0                     __ptext15:
  2858                           	opt stack 0
  2859  000EE0                     _UARTSendByte:
  2860                           	opt stack 26
  2861                           
  2862                           ;incstack = 0
  2863                           ;UARTSendByte@data stored from wreg
  2864  000EE0  6E41               	movwf	UARTSendByte@data,c
  2865                           
  2866                           ;uart.c: 58: while (!TXSTAbits.TRMT);
  2867  000EE2  D000               	goto	l130
  2868  000EE4                     l130:
  2869  000EE4  A2AC               	btfss	4012,1,c	;volatile
  2870  000EE6  D7FE               	goto	l130
  2871                           
  2872                           ;uart.c: 59: PORTDbits.RD4 = 1;
  2873  000EE8  8883               	bsf	3971,4,c	;volatile
  2874                           
  2875                           ;uart.c: 60: TXREG = data;
  2876  000EEA  C041  FFAD         	movff	UARTSendByte@data,4013	;volatile
  2877                           
  2878                           ;uart.c: 61: while (!TXSTAbits.TRMT);
  2879  000EEE  D000               	goto	l133
  2880  000EF0                     l133:
  2881  000EF0  A2AC               	btfss	4012,1,c	;volatile
  2882  000EF2  D7FE               	goto	l133
  2883                           
  2884                           ;uart.c: 62: PORTDbits.RD4 = 0;
  2885  000EF4  9883               	bcf	3971,4,c	;volatile
  2886  000EF6  0012               	return		;funcret
  2887  000EF8                     __end_of_UARTSendByte:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           intcon	equ	0xFF2
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           postdec1	equ	0xFE5
  2897                           fsr1l	equ	0xFE1
  2898                           indf2	equ	0xFDF
  2899                           postinc2	equ	0xFDE
  2900                           postdec2	equ	0xFDD
  2901                           fsr2h	equ	0xFDA
  2902                           fsr2l	equ	0xFD9
  2903                           status	equ	0xFD8
  2904                           
  2905 ;; *************** function _Buffer_Read *****************
  2906 ;; Defined at:
  2907 ;;		line 14 in file "ring_buffer.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  buff            2   23[BANK0 ] PTR volatile struct circ
  2910 ;;		 -> out(39), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  data            1   25[COMRAM] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      unsigned char 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2922 ;;      Params:         0       2       0       0
  2923 ;;      Locals:         1       0       0       0
  2924 ;;      Temps:          0       4       0       0
  2925 ;;      Totals:         1       6       0       0
  2926 ;;Total ram usage:        7 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    4
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_Package_Send
  2933 ;;		_Package_ReadDataByte
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text16
  2938  00089E                     __ptext16:
  2939                           	opt stack 0
  2940  00089E                     _Buffer_Read:
  2941                           	opt stack 25
  2942                           
  2943                           ;ring_buffer.c: 16: if (buff->head == buff->tail)
  2944                           
  2945                           ;incstack = 0
  2946  00089E  0100               	movlb	0	; () banked
  2947  0008A0  EE20 F022          	lfsr	2,34
  2948  0008A4  5177               	movf	Buffer_Read@buff& (0+255),w,b
  2949  0008A6  26D9               	addwf	fsr2l,f,c
  2950  0008A8  5178               	movf	(Buffer_Read@buff+1)& (0+255),w,b
  2951  0008AA  22DA               	addwfc	fsr2h,f,c
  2952  0008AC  0100               	movlb	0	; () banked
  2953  0008AE  EE10 F020          	lfsr	1,32
  2954  0008B2  5177               	movf	Buffer_Read@buff& (0+255),w,b
  2955  0008B4  26E1               	addwf	fsr1l,f,c
  2956  0008B6  5178               	movf	(Buffer_Read@buff+1)& (0+255),w,b
  2957  0008B8  22E2               	addwfc	fsr1h,f,c
  2958  0008BA  50DE               	movf	postinc2,w,c
  2959  0008BC  18E6               	xorwf	postinc1,w,c
  2960  0008BE  E106               	bnz	l2110
  2961  0008C0  50DE               	movf	postinc2,w,c
  2962  0008C2  18E6               	xorwf	postinc1,w,c
  2963  0008C4  A4D8               	btfss	status,2,c
  2964  0008C6  D002               	goto	l2110
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;ring_buffer.c: 17: return -1;
  2968  0008C8  0EFF               	movlw	255
  2969                           
  2970                           ; BSR set to: 0
  2971                           
  2972                           ; BSR set to: 0
  2973  0008CA  D039               	goto	l276
  2974  0008CC                     l2110:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;ring_buffer.c: 18: else
  2978                           ;ring_buffer.c: 19: {
  2979                           ;ring_buffer.c: 20: char data = buff->buffer[buff->tail];
  2980  0008CC  0100               	movlb	0	; () banked
  2981  0008CE  EE20 F022          	lfsr	2,34
  2982  0008D2  5177               	movf	Buffer_Read@buff& (0+255),w,b
  2983  0008D4  26D9               	addwf	fsr2l,f,c
  2984  0008D6  5178               	movf	(Buffer_Read@buff+1)& (0+255),w,b
  2985  0008D8  22DA               	addwfc	fsr2h,f,c
  2986  0008DA  CFDE F079          	movff	postinc2,??_Buffer_Read
  2987  0008DE  CFDD F07A          	movff	postdec2,??_Buffer_Read+1
  2988  0008E2  0100               	movlb	0	; () banked
  2989  0008E4  5179               	movf	??_Buffer_Read& (0+255),w,b
  2990  0008E6  0100               	movlb	0	; () banked
  2991  0008E8  2577               	addwf	Buffer_Read@buff& (0+255),w,b
  2992  0008EA  6ED9               	movwf	fsr2l,c
  2993  0008EC  0100               	movlb	0	; () banked
  2994  0008EE  517A               	movf	(??_Buffer_Read+1)& (0+255),w,b
  2995  0008F0  0100               	movlb	0	; () banked
  2996  0008F2  2178               	addwfc	(Buffer_Read@buff+1)& (0+255),w,b
  2997  0008F4  6EDA               	movwf	fsr2h,c
  2998  0008F6  50DF               	movf	indf2,w,c
  2999  0008F8  6E41               	movwf	Buffer_Read@data,c
  3000                           
  3001                           ;ring_buffer.c: 21: buff->tail = (unsigned int)(buff->tail + 1) % 32;
  3002  0008FA  0100               	movlb	0	; () banked
  3003  0008FC  EE20 F022          	lfsr	2,34
  3004  000900  5177               	movf	Buffer_Read@buff& (0+255),w,b
  3005  000902  26D9               	addwf	fsr2l,f,c
  3006  000904  5178               	movf	(Buffer_Read@buff+1)& (0+255),w,b
  3007  000906  22DA               	addwfc	fsr2h,f,c
  3008  000908  CFDE F079          	movff	postinc2,??_Buffer_Read
  3009  00090C  CFDD F07A          	movff	postdec2,??_Buffer_Read+1
  3010  000910  0E01               	movlw	1
  3011  000912  0100               	movlb	0	; () banked
  3012  000914  2779               	addwf	??_Buffer_Read& (0+255),f,b
  3013  000916  0E00               	movlw	0
  3014  000918  237A               	addwfc	(??_Buffer_Read+1)& (0+255),f,b
  3015  00091A  0E1F               	movlw	31
  3016  00091C  0100               	movlb	0	; () banked
  3017  00091E  1779               	andwf	??_Buffer_Read& (0+255),f,b
  3018  000920  0E00               	movlw	0
  3019  000922  177A               	andwf	(??_Buffer_Read+1)& (0+255),f,b
  3020  000924  0100               	movlb	0	; () banked
  3021  000926  EE20 F022          	lfsr	2,34
  3022  00092A  5177               	movf	Buffer_Read@buff& (0+255),w,b
  3023  00092C  26D9               	addwf	fsr2l,f,c
  3024  00092E  5178               	movf	(Buffer_Read@buff+1)& (0+255),w,b
  3025  000930  22DA               	addwfc	fsr2h,f,c
  3026  000932  C079  FFDE         	movff	??_Buffer_Read,postinc2
  3027  000936  C07A  FFDD         	movff	??_Buffer_Read+1,postdec2
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;ring_buffer.c: 22: return data;
  3031  00093A  5041               	movf	Buffer_Read@data,w,c
  3032                           
  3033                           ; BSR set to: 0
  3034  00093C  D000               	goto	l276
  3035  00093E                     l276:
  3036                           
  3037                           ; BSR set to: 0
  3038  00093E  0012               	return		;funcret
  3039  000940                     __end_of_Buffer_Read:
  3040                           	opt stack 0
  3041                           tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           intcon	equ	0xFF2
  3046                           postinc0	equ	0xFEE
  3047                           wreg	equ	0xFE8
  3048                           postinc1	equ	0xFE6
  3049                           postdec1	equ	0xFE5
  3050                           fsr1h	equ	0xFE2
  3051                           fsr1l	equ	0xFE1
  3052                           indf2	equ	0xFDF
  3053                           postinc2	equ	0xFDE
  3054                           postdec2	equ	0xFDD
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _Buffer_GetCRC8 *****************
  3060 ;; Defined at:
  3061 ;;		line 26 in file "ring_buffer.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  buff            2   23[BANK0 ] PTR volatile struct circ
  3064 ;;		 -> out(39), in(39), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  CRC             1   26[COMRAM] unsigned char 
  3067 ;;  i               1   25[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      unsigned char 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3077 ;;      Params:         0       2       0       0
  3078 ;;      Locals:         2       0       0       0
  3079 ;;      Temps:          0       4       0       0
  3080 ;;      Totals:         2       6       0       0
  3081 ;;Total ram usage:        8 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    4
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_Package_Send
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text17
  3092  000C46                     __ptext17:
  3093                           	opt stack 0
  3094  000C46                     _Buffer_GetCRC8:
  3095                           	opt stack 25
  3096                           
  3097                           ;ring_buffer.c: 28: unsigned char i;
  3098                           ;ring_buffer.c: 29: unsigned char CRC = 0;
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;incstack = 0
  3102  000C46  0E00               	movlw	0
  3103  000C48  6E42               	movwf	Buffer_GetCRC8@CRC,c
  3104                           
  3105                           ;ring_buffer.c: 30: for (i=buff->tail; i<buff->head; i++)
  3106  000C4A  0100               	movlb	0	; () banked
  3107  000C4C  EE20 F022          	lfsr	2,34
  3108  000C50  5177               	movf	Buffer_GetCRC8@buff& (0+255),w,b
  3109  000C52  26D9               	addwf	fsr2l,f,c
  3110  000C54  5178               	movf	(Buffer_GetCRC8@buff+1)& (0+255),w,b
  3111  000C56  22DA               	addwfc	fsr2h,f,c
  3112  000C58  50DF               	movf	indf2,w,c
  3113  000C5A  6E41               	movwf	Buffer_GetCRC8@i,c
  3114  000C5C  D00F               	goto	l2124
  3115  000C5E                     l2120:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;ring_buffer.c: 31: {
  3119                           ;ring_buffer.c: 32: CRC = CRC ^ buff->buffer[i];
  3120  000C5E  5041               	movf	Buffer_GetCRC8@i,w,c
  3121  000C60  0D01               	mullw	1
  3122  000C62  50F3               	movf	prodl,w,c
  3123  000C64  0100               	movlb	0	; () banked
  3124  000C66  2577               	addwf	Buffer_GetCRC8@buff& (0+255),w,b
  3125  000C68  6ED9               	movwf	fsr2l,c
  3126  000C6A  50F4               	movf	prodh,w,c
  3127  000C6C  0100               	movlb	0	; () banked
  3128  000C6E  2178               	addwfc	(Buffer_GetCRC8@buff+1)& (0+255),w,b
  3129  000C70  6EDA               	movwf	fsr2h,c
  3130  000C72  50DF               	movf	indf2,w,c
  3131  000C74  1842               	xorwf	Buffer_GetCRC8@CRC,w,c
  3132  000C76  6E42               	movwf	Buffer_GetCRC8@CRC,c
  3133                           
  3134                           ; BSR set to: 0
  3135  000C78  2A41               	incf	Buffer_GetCRC8@i,f,c
  3136  000C7A  D000               	goto	l2124
  3137  000C7C                     l2124:
  3138                           
  3139                           ; BSR set to: 0
  3140  000C7C  0100               	movlb	0	; () banked
  3141  000C7E  EE20 F020          	lfsr	2,32
  3142  000C82  5177               	movf	Buffer_GetCRC8@buff& (0+255),w,b
  3143  000C84  26D9               	addwf	fsr2l,f,c
  3144  000C86  5178               	movf	(Buffer_GetCRC8@buff+1)& (0+255),w,b
  3145  000C88  22DA               	addwfc	fsr2h,f,c
  3146  000C8A  5041               	movf	Buffer_GetCRC8@i,w,c
  3147  000C8C  0100               	movlb	0	; () banked
  3148  000C8E  6F7B               	movwf	(??_Buffer_GetCRC8+2)& (0+255),b
  3149  000C90  6B7C               	clrf	(??_Buffer_GetCRC8+3)& (0+255),b
  3150  000C92  50DE               	movf	postinc2,w,c
  3151  000C94  0100               	movlb	0	; () banked
  3152  000C96  5D7B               	subwf	(??_Buffer_GetCRC8+2)& (0+255),w,b
  3153  000C98  50DE               	movf	postinc2,w,c
  3154  000C9A  0100               	movlb	0	; () banked
  3155  000C9C  597C               	subwfb	(??_Buffer_GetCRC8+3)& (0+255),w,b
  3156  000C9E  A0D8               	btfss	status,0,c
  3157  000CA0  D7DE               	goto	l2120
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;ring_buffer.c: 33: }
  3161                           ;ring_buffer.c: 34: return CRC;
  3162                           
  3163                           ; BSR set to: 0
  3164  000CA2  5042               	movf	Buffer_GetCRC8@CRC,w,c
  3165  000CA4  D000               	goto	l283
  3166  000CA6                     l283:
  3167                           
  3168                           ; BSR set to: 0
  3169  000CA6  0012               	return		;funcret
  3170  000CA8                     __end_of_Buffer_GetCRC8:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           intcon	equ	0xFF2
  3179                           postinc0	equ	0xFEE
  3180                           wreg	equ	0xFE8
  3181                           postinc1	equ	0xFE6
  3182                           postdec1	equ	0xFE5
  3183                           fsr1h	equ	0xFE2
  3184                           fsr1l	equ	0xFE1
  3185                           indf2	equ	0xFDF
  3186                           postinc2	equ	0xFDE
  3187                           postdec2	equ	0xFDD
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _InputInit *****************
  3193 ;; Defined at:
  3194 ;;		line 7 in file "input.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;		None               void
  3201 ;; Registers used:
  3202 ;;		None
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3208 ;;      Params:         0       0       0       0
  3209 ;;      Locals:         0       0       0       0
  3210 ;;      Temps:          0       0       0       0
  3211 ;;      Totals:         0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    4
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text18
  3223  000F44                     __ptext18:
  3224                           	opt stack 0
  3225  000F44                     _InputInit:
  3226                           	opt stack 26
  3227                           
  3228                           ;input.c: 10: TRISDbits.RD5 = 1;
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;incstack = 0
  3232  000F44  8A95               	bsf	3989,5,c	;volatile
  3233                           
  3234                           ;input.c: 11: TRISDbits.RD6 = 1;
  3235  000F46  8C95               	bsf	3989,6,c	;volatile
  3236  000F48  0012               	return		;funcret
  3237  000F4A                     __end_of_InputInit:
  3238                           	opt stack 0
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           prodh	equ	0xFF4
  3244                           prodl	equ	0xFF3
  3245                           intcon	equ	0xFF2
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           postinc1	equ	0xFE6
  3249                           postdec1	equ	0xFE5
  3250                           fsr1h	equ	0xFE2
  3251                           fsr1l	equ	0xFE1
  3252                           indf2	equ	0xFDF
  3253                           postinc2	equ	0xFDE
  3254                           postdec2	equ	0xFDD
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function _InitQEI *****************
  3260 ;; Defined at:
  3261 ;;		line 10 in file "qei.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  _QEICON         1    wreg     unsigned char 
  3264 ;;  _DFLTCON        1   23[BANK0 ] unsigned char 
  3265 ;;  _MAXCNT         2   24[BANK0 ] unsigned int 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  _QEICON         1   25[COMRAM] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;		None               void
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3277 ;;      Params:         0       3       0       0
  3278 ;;      Locals:         1       0       0       0
  3279 ;;      Temps:          0       0       0       0
  3280 ;;      Totals:         1       3       0       0
  3281 ;;Total ram usage:        4 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    4
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text19
  3292  000E16                     __ptext19:
  3293                           	opt stack 0
  3294  000E16                     _InitQEI:
  3295                           	opt stack 26
  3296                           
  3297                           ;incstack = 0
  3298                           ;InitQEI@_QEICON stored from wreg
  3299  000E16  6E41               	movwf	InitQEI@_QEICON,c
  3300                           
  3301                           ;qei.c: 16: ANSEL0 = ANSEL0 & 0b11000000;
  3302  000E18  50B8               	movf	4024,w,c	;volatile
  3303  000E1A  0BC0               	andlw	192
  3304  000E1C  6EB8               	movwf	4024,c	;volatile
  3305                           
  3306                           ;qei.c: 17: ANSEL1 = ANSEL1 & 0b00000000;
  3307  000E1E  0E00               	movlw	0
  3308  000E20  6EB9               	movwf	4025,c	;volatile
  3309                           
  3310                           ;qei.c: 22: TRISAbits.RA2 = 1;
  3311  000E22  8492               	bsf	3986,2,c	;volatile
  3312                           
  3313                           ;qei.c: 23: TRISAbits.RA3 = 1;
  3314  000E24  8692               	bsf	3986,3,c	;volatile
  3315                           
  3316                           ;qei.c: 24: TRISAbits.RA4 = 1;
  3317  000E26  8892               	bsf	3986,4,c	;volatile
  3318                           
  3319                           ;qei.c: 26: QEICON = _QEICON;
  3320  000E28  C041  FFB6         	movff	InitQEI@_QEICON,4022	;volatile
  3321                           
  3322                           ;qei.c: 27: DFLTCON = _DFLTCON;
  3323  000E2C  C077  FF60         	movff	InitQEI@_DFLTCON,3936	;volatile
  3324                           
  3325                           ;qei.c: 28: MAXCNTL = _MAXCNT;
  3326  000E30  C078  FF64         	movff	InitQEI@_MAXCNT,3940	;volatile
  3327                           
  3328                           ;qei.c: 29: MAXCNTH = _MAXCNT >> 8;
  3329  000E34  0100               	movlb	0	; () banked
  3330  000E36  5179               	movf	(InitQEI@_MAXCNT+1)& (0+255),w,b
  3331  000E38  6E65               	movwf	3941,c	;volatile
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;qei.c: 32: POSCNTH = 0;
  3335  000E3A  0E00               	movlw	0
  3336  000E3C  6E67               	movwf	3943,c	;volatile
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;qei.c: 33: POSCNTL = 0;
  3340  000E3E  0E00               	movlw	0
  3341  000E40  6E66               	movwf	3942,c	;volatile
  3342                           
  3343                           ; BSR set to: 0
  3344  000E42  0012               	return		;funcret
  3345  000E44                     __end_of_InitQEI:
  3346                           	opt stack 0
  3347                           tblptru	equ	0xFF8
  3348                           tblptrh	equ	0xFF7
  3349                           tblptrl	equ	0xFF6
  3350                           tablat	equ	0xFF5
  3351                           prodh	equ	0xFF4
  3352                           prodl	equ	0xFF3
  3353                           intcon	equ	0xFF2
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           postinc1	equ	0xFE6
  3357                           postdec1	equ	0xFE5
  3358                           fsr1h	equ	0xFE2
  3359                           fsr1l	equ	0xFE1
  3360                           indf2	equ	0xFDF
  3361                           postinc2	equ	0xFDE
  3362                           postdec2	equ	0xFDD
  3363                           fsr2h	equ	0xFDA
  3364                           fsr2l	equ	0xFD9
  3365                           status	equ	0xFD8
  3366                           
  3367 ;; *************** function _InitPCPWM *****************
  3368 ;; Defined at:
  3369 ;;		line 6 in file "pcpwm.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;		None               void
  3376 ;; Registers used:
  3377 ;;		wreg, status,2
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3383 ;;      Params:         0       0       0       0
  3384 ;;      Locals:         0       0       0       0
  3385 ;;      Temps:          0       0       0       0
  3386 ;;      Totals:         0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    4
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_main
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text20
  3398  000D4C                     __ptext20:
  3399                           	opt stack 0
  3400  000D4C                     _InitPCPWM:
  3401                           	opt stack 26
  3402                           
  3403                           ;pcpwm.c: 9: TRISB = 0x00;
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;incstack = 0
  3407  000D4C  0E00               	movlw	0
  3408  000D4E  6E93               	movwf	3987,c	;volatile
  3409                           
  3410                           ;pcpwm.c: 11: TRISDbits.RD7 = 0;
  3411  000D50  9E95               	bcf	3989,7,c	;volatile
  3412                           
  3413                           ;pcpwm.c: 13: PORTDbits.RD7 = 0;
  3414  000D52  9E83               	bcf	3971,7,c	;volatile
  3415                           
  3416                           ;pcpwm.c: 18: PTCON0 = 0b00000010;
  3417  000D54  0E02               	movlw	2
  3418  000D56  6E7F               	movwf	3967,c	;volatile
  3419                           
  3420                           ;pcpwm.c: 22: PWMCON0 = 0b00110000;
  3421  000D58  0E30               	movlw	48
  3422  000D5A  6E6F               	movwf	3951,c	;volatile
  3423                           
  3424                           ;pcpwm.c: 29: PWMCON1 = 0b00000000;
  3425  000D5C  0E00               	movlw	0
  3426  000D5E  6E6E               	movwf	3950,c	;volatile
  3427                           
  3428                           ;pcpwm.c: 33: OVDCOND = 0b11111111;
  3429  000D60  686B               	setf	3947,c	;volatile
  3430                           
  3431                           ;pcpwm.c: 37: OVDCONS = 0b00000000;
  3432  000D62  0E00               	movlw	0
  3433  000D64  6E6A               	movwf	3946,c	;volatile
  3434                           
  3435                           ;pcpwm.c: 42: FLTCONFIG = 0b00000000;
  3436  000D66  0E00               	movlw	0
  3437  000D68  6E6C               	movwf	3948,c	;volatile
  3438                           
  3439                           ;pcpwm.c: 46: PTPERL = 0x00;
  3440  000D6A  0E00               	movlw	0
  3441  000D6C  6E7B               	movwf	3963,c	;volatile
  3442                           
  3443                           ;pcpwm.c: 47: PTPERH = 0x02;
  3444  000D6E  0E02               	movlw	2
  3445  000D70  6E7A               	movwf	3962,c	;volatile
  3446                           
  3447                           ;pcpwm.c: 51: DTCON = 0b00101000;
  3448  000D72  0E28               	movlw	40
  3449  000D74  6E6D               	movwf	3949,c	;volatile
  3450                           
  3451                           ;pcpwm.c: 55: PDC0H = 0x03;
  3452  000D76  0E03               	movlw	3
  3453  000D78  6E78               	movwf	3960,c	;volatile
  3454                           
  3455                           ;pcpwm.c: 56: PDC0L = 0xff;
  3456  000D7A  6879               	setf	3961,c	;volatile
  3457                           
  3458                           ;pcpwm.c: 60: PDC1H = 0x03;
  3459  000D7C  0E03               	movlw	3
  3460  000D7E  6E76               	movwf	3958,c	;volatile
  3461                           
  3462                           ;pcpwm.c: 61: PDC1L = 0xff;
  3463  000D80  6877               	setf	3959,c	;volatile
  3464                           
  3465                           ;pcpwm.c: 65: PTCON1bits.PTEN = 1;
  3466  000D82  8E7E               	bsf	3966,7,c	;volatile
  3467  000D84  0012               	return		;funcret
  3468  000D86                     __end_of_InitPCPWM:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           tblptrh	equ	0xFF7
  3472                           tblptrl	equ	0xFF6
  3473                           tablat	equ	0xFF5
  3474                           prodh	equ	0xFF4
  3475                           prodl	equ	0xFF3
  3476                           intcon	equ	0xFF2
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postinc1	equ	0xFE6
  3480                           postdec1	equ	0xFE5
  3481                           fsr1h	equ	0xFE2
  3482                           fsr1l	equ	0xFE1
  3483                           indf2	equ	0xFDF
  3484                           postinc2	equ	0xFDE
  3485                           postdec2	equ	0xFDD
  3486                           fsr2h	equ	0xFDA
  3487                           fsr2l	equ	0xFD9
  3488                           status	equ	0xFD8
  3489                           
  3490 ;; *************** function _IR2110Disable *****************
  3491 ;; Defined at:
  3492 ;;		line 99 in file "pcpwm.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;		None               void
  3499 ;; Registers used:
  3500 ;;		None
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3506 ;;      Params:         0       0       0       0
  3507 ;;      Locals:         0       0       0       0
  3508 ;;      Temps:          0       0       0       0
  3509 ;;      Totals:         0       0       0       0
  3510 ;;Total ram usage:        0 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    4
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text21
  3521  000F4E                     __ptext21:
  3522                           	opt stack 0
  3523  000F4E                     _IR2110Disable:
  3524                           	opt stack 26
  3525                           
  3526                           ;pcpwm.c: 101: PORTDbits.RD7 = 0;
  3527                           
  3528                           ;incstack = 0
  3529  000F4E  9E83               	bcf	3971,7,c	;volatile
  3530  000F50  0012               	return		;funcret
  3531  000F52                     __end_of_IR2110Disable:
  3532                           	opt stack 0
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           prodh	equ	0xFF4
  3538                           prodl	equ	0xFF3
  3539                           intcon	equ	0xFF2
  3540                           postinc0	equ	0xFEE
  3541                           wreg	equ	0xFE8
  3542                           postinc1	equ	0xFE6
  3543                           postdec1	equ	0xFE5
  3544                           fsr1h	equ	0xFE2
  3545                           fsr1l	equ	0xFE1
  3546                           indf2	equ	0xFDF
  3547                           postinc2	equ	0xFDE
  3548                           postdec2	equ	0xFDD
  3549                           fsr2h	equ	0xFDA
  3550                           fsr2l	equ	0xFD9
  3551                           status	equ	0xFD8
  3552                           
  3553 ;; *************** function _DCBrake_PWMInit *****************
  3554 ;; Defined at:
  3555 ;;		line 8 in file "dc_brake.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;		None               void
  3562 ;; Registers used:
  3563 ;;		wreg, status,2
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3569 ;;      Params:         0       0       0       0
  3570 ;;      Locals:         0       0       0       0
  3571 ;;      Temps:          0       0       0       0
  3572 ;;      Totals:         0       0       0       0
  3573 ;;Total ram usage:        0 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    4
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text22
  3584  000EF8                     __ptext22:
  3585                           	opt stack 0
  3586  000EF8                     _DCBrake_PWMInit:
  3587                           	opt stack 26
  3588                           
  3589                           ;dc_brake.c: 10: TRISCbits.RC2 = 1;
  3590                           
  3591                           ;incstack = 0
  3592  000EF8  8494               	bsf	3988,2,c	;volatile
  3593                           
  3594                           ;dc_brake.c: 11: PR2 = 127;
  3595  000EFA  0E7F               	movlw	127
  3596  000EFC  6ECB               	movwf	4043,c	;volatile
  3597                           
  3598                           ;dc_brake.c: 12: CCP1CON = 0b00001100;
  3599  000EFE  0E0C               	movlw	12
  3600  000F00  6EBD               	movwf	4029,c	;volatile
  3601                           
  3602                           ;dc_brake.c: 13: CCPR1L = 0x00;
  3603  000F02  0E00               	movlw	0
  3604  000F04  6EBE               	movwf	4030,c	;volatile
  3605                           
  3606                           ;dc_brake.c: 14: T2CON = 0b00000101;
  3607  000F06  0E05               	movlw	5
  3608  000F08  6ECA               	movwf	4042,c	;volatile
  3609  000F0A  0012               	return		;funcret
  3610  000F0C                     __end_of_DCBrake_PWMInit:
  3611                           	opt stack 0
  3612                           tblptru	equ	0xFF8
  3613                           tblptrh	equ	0xFF7
  3614                           tblptrl	equ	0xFF6
  3615                           tablat	equ	0xFF5
  3616                           prodh	equ	0xFF4
  3617                           prodl	equ	0xFF3
  3618                           intcon	equ	0xFF2
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           postinc1	equ	0xFE6
  3622                           postdec1	equ	0xFE5
  3623                           fsr1h	equ	0xFE2
  3624                           fsr1l	equ	0xFE1
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           postdec2	equ	0xFDD
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function _DCBrake_Catch *****************
  3633 ;; Defined at:
  3634 ;;		line 40 in file "dc_brake.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;		None               void
  3641 ;; Registers used:
  3642 ;;		None
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3648 ;;      Params:         0       0       0       0
  3649 ;;      Locals:         0       0       0       0
  3650 ;;      Temps:          0       0       0       0
  3651 ;;      Totals:         0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    4
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text23
  3663  000F52                     __ptext23:
  3664                           	opt stack 0
  3665  000F52                     _DCBrake_Catch:
  3666                           	opt stack 26
  3667                           
  3668                           ;dc_brake.c: 42: TRISCbits.RC2 = 1;
  3669                           
  3670                           ;incstack = 0
  3671  000F52  8494               	bsf	3988,2,c	;volatile
  3672  000F54  0012               	return		;funcret
  3673  000F56                     __end_of_DCBrake_Catch:
  3674                           	opt stack 0
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           prodh	equ	0xFF4
  3680                           prodl	equ	0xFF3
  3681                           intcon	equ	0xFF2
  3682                           postinc0	equ	0xFEE
  3683                           wreg	equ	0xFE8
  3684                           postinc1	equ	0xFE6
  3685                           postdec1	equ	0xFE5
  3686                           fsr1h	equ	0xFE2
  3687                           fsr1l	equ	0xFE1
  3688                           indf2	equ	0xFDF
  3689                           postinc2	equ	0xFDE
  3690                           postdec2	equ	0xFDD
  3691                           fsr2h	equ	0xFDA
  3692                           fsr2l	equ	0xFD9
  3693                           status	equ	0xFD8
  3694                           
  3695 ;; *************** function _LowIsr *****************
  3696 ;; Defined at:
  3697 ;;		line 58 in file "main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;		None               void
  3704 ;; Registers used:
  3705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3711 ;;      Params:         0       0       0       0
  3712 ;;      Locals:         0       0       0       0
  3713 ;;      Temps:          0      23       0       0
  3714 ;;      Totals:         0      23       0       0
  3715 ;;Total ram usage:       23 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    3
  3718 ;; This function calls:
  3719 ;;		_Package_CalculateCRC8
  3720 ;;		_Package_GetADR
  3721 ;;		_Package_GetLength
  3722 ;;		_UARTAddressDetection_ON
  3723 ;;		i1_Package_WriteDataByte
  3724 ;;		i1_UARTAddressDetection_OFF
  3725 ;; This function is called by:
  3726 ;;		Interrupt level 1
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	intcodelo
  3731  000018                     __pintcodelo:
  3732                           	opt stack 0
  3733  000018                     _LowIsr:
  3734                           	opt stack 24
  3735                           
  3736                           ;incstack = 0
  3737  000018  CFD8 F066          	movff	status,??_LowIsr+6
  3738  00001C  CFE8 F067          	movff	wreg,??_LowIsr+7
  3739  000020  CFE0 F068          	movff	bsr,??_LowIsr+8
  3740  000024  CFFA F069          	movff	pclath,??_LowIsr+9
  3741  000028  CFFB F06A          	movff	pclatu,??_LowIsr+10
  3742  00002C  CFE9 F06B          	movff	fsr0l,??_LowIsr+11
  3743  000030  CFEA F06C          	movff	fsr0h,??_LowIsr+12
  3744  000034  CFE1 F06D          	movff	fsr1l,??_LowIsr+13
  3745  000038  CFE2 F06E          	movff	fsr1h,??_LowIsr+14
  3746  00003C  CFD9 F06F          	movff	fsr2l,??_LowIsr+15
  3747  000040  CFDA F070          	movff	fsr2h,??_LowIsr+16
  3748  000044  CFF3 F071          	movff	prodl,??_LowIsr+17
  3749  000048  CFF4 F072          	movff	prodh,??_LowIsr+18
  3750  00004C  CFF6 F073          	movff	tblptrl,??_LowIsr+19
  3751  000050  CFF7 F074          	movff	tblptrh,??_LowIsr+20
  3752  000054  CFF8 F075          	movff	tblptru,??_LowIsr+21
  3753  000058  CFF5 F076          	movff	tablat,??_LowIsr+22
  3754                           
  3755                           ;main.c: 60: if (PIR1bits.RCIF && PIE1bits.RCIE)
  3756  00005C  AA9E               	btfss	3998,5,c	;volatile
  3757  00005E  D066               	goto	i1l73
  3758  000060  BA9D               	btfsc	3997,5,c	;volatile
  3759  000062  D056               	goto	i1l2362
  3760  000064  D063               	goto	i1l73
  3761                           
  3762                           ;main.c: 61: {
  3763                           ;main.c: 62: switch (RCV_STATE)
  3764  000066  D054               	goto	i1l2362
  3765  000068                     i1l2338:
  3766                           
  3767                           ;main.c: 65: if (Package_GetADR(&in) == RCREG)
  3768  000068  0E01               	movlw	low _in
  3769  00006A  6E36               	movwf	Package_GetADR@p,c
  3770  00006C  0E00               	movlw	high _in
  3771  00006E  6E37               	movwf	Package_GetADR@p+1,c
  3772  000070  EC8F  F007         	call	_Package_GetADR	;wreg free
  3773  000074  18AE               	xorwf	4014,w,c	;volatile
  3774  000076  A4D8               	btfss	status,2,c
  3775  000078  D059               	goto	i1l73
  3776                           
  3777                           ;main.c: 66: {
  3778                           ;main.c: 67: UARTAddressDetection_OFF();
  3779  00007A  ECAB  F007         	call	i1_UARTAddressDetection_OFF	;wreg free
  3780                           
  3781                           ;main.c: 68: RCV_STATE = DATA_LENGTH_RECEIVING;
  3782  00007E  0E01               	movlw	1
  3783  000080  D004               	goto	L5
  3784                           
  3785                           ;main.c: 69: }
  3786                           ;main.c: 70: break;
  3787  000082  D054               	goto	i1l73
  3788  000084                     i1l68:
  3789                           
  3790                           ;main.c: 72: RCV_LENGTH = RCREG;
  3791  000084  CFAE F044          	movff	4014,_RCV_LENGTH	;volatile
  3792                           
  3793                           ;main.c: 73: RCV_STATE = DATA_RECEIVING;
  3794  000088  0E02               	movlw	2
  3795  00008A                     L5:
  3796  00008A  6E45               	movwf	_RCV_STATE,c
  3797                           
  3798                           ;main.c: 74: break;
  3799  00008C  D04F               	goto	i1l73
  3800  00008E                     i1l2346:
  3801                           
  3802                           ;main.c: 76: if(Package_GetLength(&in) == RCV_LENGTH-1)
  3803  00008E  0E01               	movlw	low _in
  3804  000090  6E36               	movwf	Package_GetLength@p,c
  3805  000092  0E00               	movlw	high _in
  3806  000094  6E37               	movwf	Package_GetLength@p+1,c
  3807  000096  EC86  F007         	call	_Package_GetLength	;wreg free
  3808  00009A  0100               	movlb	0	; () banked
  3809  00009C  6F60               	movwf	??_LowIsr& (0+255),b
  3810  00009E  6B61               	clrf	(??_LowIsr+1)& (0+255),b
  3811  0000A0  0EFF               	movlw	255
  3812  0000A2  0100               	movlb	0	; () banked
  3813  0000A4  6F62               	movwf	(??_LowIsr+2)& (0+255),b
  3814  0000A6  0EFF               	movlw	255
  3815  0000A8  0100               	movlb	0	; () banked
  3816  0000AA  6F63               	movwf	(??_LowIsr+3)& (0+255),b
  3817  0000AC  5044               	movf	_RCV_LENGTH,w,c
  3818  0000AE  0100               	movlb	0	; () banked
  3819  0000B0  6F64               	movwf	(??_LowIsr+4)& (0+255),b
  3820  0000B2  6B65               	clrf	(??_LowIsr+5)& (0+255),b
  3821  0000B4  0100               	movlb	0	; () banked
  3822  0000B6  5162               	movf	(??_LowIsr+2)& (0+255),w,b
  3823  0000B8  0100               	movlb	0	; () banked
  3824  0000BA  2764               	addwf	(??_LowIsr+4)& (0+255),f,b
  3825  0000BC  0100               	movlb	0	; () banked
  3826  0000BE  5163               	movf	(??_LowIsr+3)& (0+255),w,b
  3827  0000C0  0100               	movlb	0	; () banked
  3828  0000C2  2365               	addwfc	(??_LowIsr+5)& (0+255),f,b
  3829  0000C4  0100               	movlb	0	; () banked
  3830  0000C6  5160               	movf	??_LowIsr& (0+255),w,b
  3831  0000C8  0100               	movlb	0	; () banked
  3832  0000CA  1964               	xorwf	(??_LowIsr+4)& (0+255),w,b
  3833  0000CC  E109               	bnz	i1l2350
  3834  0000CE  0100               	movlb	0	; () banked
  3835  0000D0  5161               	movf	(??_LowIsr+1)& (0+255),w,b
  3836  0000D2  0100               	movlb	0	; () banked
  3837  0000D4  1965               	xorwf	(??_LowIsr+5)& (0+255),w,b
  3838  0000D6  A4D8               	btfss	status,2,c
  3839  0000D8  D003               	goto	i1l2350
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;main.c: 77: RCV_STATE = CRC8_RECEIVING;
  3843  0000DA  0E03               	movlw	3
  3844  0000DC  6E45               	movwf	_RCV_STATE,c
  3845  0000DE  D000               	goto	i1l2350
  3846  0000E0                     i1l2350:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;main.c: 78: Package_WriteDataByte(&in, RCREG);
  3850  0000E0  0E01               	movlw	low _in
  3851  0000E2  6E3D               	movwf	i1Package_WriteDataByte@p,c
  3852  0000E4  0E00               	movlw	high _in
  3853  0000E6  6E3E               	movwf	i1Package_WriteDataByte@p+1,c
  3854  0000E8  CFAE F03F          	movff	4014,i1Package_WriteDataByte@d	;volatile
  3855  0000EC  EC5F  F007         	call	i1_Package_WriteDataByte	;wreg free
  3856                           
  3857                           ;main.c: 79: break;
  3858  0000F0  D01D               	goto	i1l73
  3859  0000F2                     i1l2352:
  3860                           
  3861                           ;main.c: 81: if(RCREG == Package_CalculateCRC8(&in))
  3862  0000F2  0E01               	movlw	low _in
  3863  0000F4  6E3E               	movwf	Package_CalculateCRC8@p,c
  3864  0000F6  0E00               	movlw	high _in
  3865  0000F8  6E3F               	movwf	Package_CalculateCRC8@p+1,c
  3866  0000FA  ECC3  F006         	call	_Package_CalculateCRC8	;wreg free
  3867  0000FE  18AE               	xorwf	4014,w,c	;volatile
  3868  000100  A4D8               	btfss	status,2,c
  3869  000102  D014               	goto	i1l73
  3870                           
  3871                           ;main.c: 82: {
  3872                           ;main.c: 83: RCV_STATE = ADDRESING;
  3873  000104  0E00               	movlw	0
  3874  000106  6E45               	movwf	_RCV_STATE,c
  3875                           
  3876                           ;main.c: 84: NEW_PACKAGE_RECEIVED = 1;
  3877  000108  8046               	bsf	_NEW_PACKAGE_RECEIVED/(0+8),_NEW_PACKAGE_RECEIVED& (0+7),c
  3878                           
  3879                           ;main.c: 85: UARTAddressDetection_ON();
  3880  00010A  ECAD  F007         	call	_UARTAddressDetection_ON	;wreg free
  3881                           
  3882                           ;main.c: 88: }
  3883                           
  3884                           ;main.c: 86: }
  3885                           ;main.c: 87: break;
  3886  00010E  D00E               	goto	i1l73
  3887  000110                     i1l2362:
  3888  000110  5045               	movf	_RCV_STATE,w,c
  3889                           
  3890                           ; Switch size 1, requested type "space"
  3891                           ; Number of cases is 4, Range of values is 0 to 3
  3892                           ; switch strategies available:
  3893                           ; Name         Instructions Cycles
  3894                           ; simple_byte           13     7 (average)
  3895                           ;	Chosen strategy is simple_byte
  3896  000112  0A00               	xorlw	0	; case 0
  3897  000114  B4D8               	btfsc	status,2,c
  3898  000116  D7A8               	goto	i1l2338
  3899  000118  0A01               	xorlw	1	; case 1
  3900  00011A  B4D8               	btfsc	status,2,c
  3901  00011C  D7B3               	goto	i1l68
  3902  00011E  0A03               	xorlw	3	; case 2
  3903  000120  B4D8               	btfsc	status,2,c
  3904  000122  D7B5               	goto	i1l2346
  3905  000124  0A01               	xorlw	1	; case 3
  3906  000126  B4D8               	btfsc	status,2,c
  3907  000128  D7E4               	goto	i1l2352
  3908  00012A  D000               	goto	i1l73
  3909  00012C                     i1l73:
  3910  00012C  C076  FFF5         	movff	??_LowIsr+22,tablat
  3911  000130  C075  FFF8         	movff	??_LowIsr+21,tblptru
  3912  000134  C074  FFF7         	movff	??_LowIsr+20,tblptrh
  3913  000138  C073  FFF6         	movff	??_LowIsr+19,tblptrl
  3914  00013C  C072  FFF4         	movff	??_LowIsr+18,prodh
  3915  000140  C071  FFF3         	movff	??_LowIsr+17,prodl
  3916  000144  C070  FFDA         	movff	??_LowIsr+16,fsr2h
  3917  000148  C06F  FFD9         	movff	??_LowIsr+15,fsr2l
  3918  00014C  C06E  FFE2         	movff	??_LowIsr+14,fsr1h
  3919  000150  C06D  FFE1         	movff	??_LowIsr+13,fsr1l
  3920  000154  C06C  FFEA         	movff	??_LowIsr+12,fsr0h
  3921  000158  C06B  FFE9         	movff	??_LowIsr+11,fsr0l
  3922  00015C  C06A  FFFB         	movff	??_LowIsr+10,pclatu
  3923  000160  C069  FFFA         	movff	??_LowIsr+9,pclath
  3924  000164  C068  FFE0         	movff	??_LowIsr+8,bsr
  3925  000168  C067  FFE8         	movff	??_LowIsr+7,wreg
  3926  00016C  C066  FFD8         	movff	??_LowIsr+6,status
  3927  000170  0010               	retfie	
  3928  000172                     __end_of_LowIsr:
  3929                           	opt stack 0
  3930                           pclatu	equ	0xFFB
  3931                           pclath	equ	0xFFA
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           postinc0	equ	0xFEE
  3940                           fsr0h	equ	0xFEA
  3941                           fsr0l	equ	0xFE9
  3942                           wreg	equ	0xFE8
  3943                           postinc1	equ	0xFE6
  3944                           postdec1	equ	0xFE5
  3945                           fsr1h	equ	0xFE2
  3946                           fsr1l	equ	0xFE1
  3947                           bsr	equ	0xFE0
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function i1_UARTAddressDetection_OFF *****************
  3956 ;; Defined at:
  3957 ;;		line 95 in file "uart.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		None
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3971 ;;      Params:         0       0       0       0
  3972 ;;      Locals:         0       0       0       0
  3973 ;;      Temps:          0       0       0       0
  3974 ;;      Totals:         0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_LowIsr
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text25
  3986  000F56                     __ptext25:
  3987                           	opt stack 0
  3988  000F56                     i1_UARTAddressDetection_OFF:
  3989                           	opt stack 25
  3990                           
  3991                           ;uart.c: 97: RCSTAbits.ADDEN = 0;
  3992                           
  3993                           ;incstack = 0
  3994  000F56  96AB               	bcf	4011,3,c	;volatile
  3995  000F58  0012               	return		;funcret
  3996  000F5A                     __end_ofi1_UARTAddressDetection_OFF:
  3997                           	opt stack 0
  3998                           pclatu	equ	0xFFB
  3999                           pclath	equ	0xFFA
  4000                           tblptru	equ	0xFF8
  4001                           tblptrh	equ	0xFF7
  4002                           tblptrl	equ	0xFF6
  4003                           tablat	equ	0xFF5
  4004                           prodh	equ	0xFF4
  4005                           prodl	equ	0xFF3
  4006                           intcon	equ	0xFF2
  4007                           postinc0	equ	0xFEE
  4008                           fsr0h	equ	0xFEA
  4009                           fsr0l	equ	0xFE9
  4010                           wreg	equ	0xFE8
  4011                           postinc1	equ	0xFE6
  4012                           postdec1	equ	0xFE5
  4013                           fsr1h	equ	0xFE2
  4014                           fsr1l	equ	0xFE1
  4015                           bsr	equ	0xFE0
  4016                           indf2	equ	0xFDF
  4017                           postinc2	equ	0xFDE
  4018                           postdec2	equ	0xFDD
  4019                           fsr2h	equ	0xFDA
  4020                           fsr2l	equ	0xFD9
  4021                           status	equ	0xFD8
  4022                           
  4023 ;; *************** function i1_Package_WriteDataByte *****************
  4024 ;; Defined at:
  4025 ;;		line 18 in file "comm_protocol.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  p               2   21[COMRAM] PTR volatile struct pack
  4028 ;;		 -> out(39), in(39), 
  4029 ;;  d               1   23[COMRAM] unsigned char 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;		None               void
  4034 ;; Registers used:
  4035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4041 ;;      Params:         3       0       0       0
  4042 ;;      Locals:         0       0       0       0
  4043 ;;      Temps:          0       0       0       0
  4044 ;;      Totals:         3       0       0       0
  4045 ;;Total ram usage:        3 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    2
  4048 ;; This function calls:
  4049 ;;		i1_Buffer_Write
  4050 ;; This function is called by:
  4051 ;;		_LowIsr
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text26
  4056  000EBE                     __ptext26:
  4057                           	opt stack 0
  4058  000EBE                     i1_Package_WriteDataByte:
  4059                           	opt stack 24
  4060                           
  4061                           ;comm_protocol.c: 20: Buffer_Write(d, &p->DATA);
  4062                           
  4063                           ;incstack = 0
  4064  000EBE  0E02               	movlw	2
  4065  000EC0  243D               	addwf	i1Package_WriteDataByte@p,w,c
  4066  000EC2  6E36               	movwf	i1Buffer_Write@buff,c
  4067  000EC4  0E00               	movlw	0
  4068  000EC6  203E               	addwfc	i1Package_WriteDataByte@p+1,w,c
  4069  000EC8  6E37               	movwf	i1Buffer_Write@buff+1,c
  4070  000ECA  503F               	movf	i1Package_WriteDataByte@d,w,c
  4071  000ECC  EC80  F005         	call	i1_Buffer_Write
  4072                           
  4073                           ;comm_protocol.c: 21: p->NUM_OF_BYTES++;
  4074  000ED0  EE20 F001          	lfsr	2,1
  4075  000ED4  503D               	movf	i1Package_WriteDataByte@p,w,c
  4076  000ED6  26D9               	addwf	fsr2l,f,c
  4077  000ED8  503E               	movf	i1Package_WriteDataByte@p+1,w,c
  4078  000EDA  22DA               	addwfc	fsr2h,f,c
  4079  000EDC  2ADF               	incf	indf2,f,c
  4080  000EDE  0012               	return		;funcret
  4081  000EE0                     __end_ofi1_Package_WriteDataByte:
  4082                           	opt stack 0
  4083                           pclatu	equ	0xFFB
  4084                           pclath	equ	0xFFA
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           postinc0	equ	0xFEE
  4093                           fsr0h	equ	0xFEA
  4094                           fsr0l	equ	0xFE9
  4095                           wreg	equ	0xFE8
  4096                           postinc1	equ	0xFE6
  4097                           postdec1	equ	0xFE5
  4098                           fsr1h	equ	0xFE2
  4099                           fsr1l	equ	0xFE1
  4100                           bsr	equ	0xFE0
  4101                           indf2	equ	0xFDF
  4102                           postinc2	equ	0xFDE
  4103                           postdec2	equ	0xFDD
  4104                           fsr2h	equ	0xFDA
  4105                           fsr2l	equ	0xFD9
  4106                           status	equ	0xFD8
  4107                           
  4108 ;; *************** function i1_Buffer_Write *****************
  4109 ;; Defined at:
  4110 ;;		line 4 in file "ring_buffer.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  data            1    wreg     unsigned char 
  4113 ;;  buff            2   14[COMRAM] PTR volatile struct circ
  4114 ;;		 -> out(39), in(39), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  data            1   18[COMRAM] unsigned char 
  4117 ;;  Buffer_Write    2   19[COMRAM] unsigned int 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;		None               void
  4120 ;; Registers used:
  4121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4127 ;;      Params:         2       0       0       0
  4128 ;;      Locals:         3       0       0       0
  4129 ;;      Temps:          2       0       0       0
  4130 ;;      Totals:         7       0       0       0
  4131 ;;Total ram usage:        7 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		i1_Package_WriteDataByte
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text27
  4142  000B00                     __ptext27:
  4143                           	opt stack 0
  4144  000B00                     i1_Buffer_Write:
  4145                           	opt stack 24
  4146                           
  4147                           ;incstack = 0
  4148                           ;i1Buffer_Write@data stored from wreg
  4149  000B00  6E3A               	movwf	i1Buffer_Write@data,c
  4150                           
  4151                           ;ring_buffer.c: 6: unsigned int next = (unsigned int)(buff->head + 1) % 32;
  4152  000B02  EE20 F020          	lfsr	2,32
  4153  000B06  5036               	movf	i1Buffer_Write@buff,w,c
  4154  000B08  26D9               	addwf	fsr2l,f,c
  4155  000B0A  5037               	movf	i1Buffer_Write@buff+1,w,c
  4156  000B0C  22DA               	addwfc	fsr2h,f,c
  4157  000B0E  CFDE F038          	movff	postinc2,??i1_Buffer_Write
  4158  000B12  CFDD F039          	movff	postdec2,??i1_Buffer_Write+1
  4159  000B16  0E01               	movlw	1
  4160  000B18  2638               	addwf	??i1_Buffer_Write,f,c
  4161  000B1A  0E00               	movlw	0
  4162  000B1C  2239               	addwfc	??i1_Buffer_Write+1,f,c
  4163  000B1E  0E1F               	movlw	31
  4164  000B20  1438               	andwf	??i1_Buffer_Write,w,c
  4165  000B22  6E3B               	movwf	i1Buffer_Write@next,c
  4166  000B24  6A3C               	clrf	i1Buffer_Write@next+1,c
  4167                           
  4168                           ;ring_buffer.c: 7: if (next != buff->tail)
  4169  000B26  EE20 F022          	lfsr	2,34
  4170  000B2A  5036               	movf	i1Buffer_Write@buff,w,c
  4171  000B2C  26D9               	addwf	fsr2l,f,c
  4172  000B2E  5037               	movf	i1Buffer_Write@buff+1,w,c
  4173  000B30  22DA               	addwfc	fsr2h,f,c
  4174  000B32  503B               	movf	i1Buffer_Write@next,w,c
  4175  000B34  18DE               	xorwf	postinc2,w,c
  4176  000B36  E104               	bnz	i1u67_20
  4177  000B38  503C               	movf	i1Buffer_Write@next+1,w,c
  4178  000B3A  18DE               	xorwf	postinc2,w,c
  4179  000B3C  B4D8               	btfsc	status,2,c
  4180  000B3E  D01D               	goto	i1l272
  4181  000B40                     i1u67_20:
  4182                           
  4183                           ;ring_buffer.c: 8: {
  4184                           ;ring_buffer.c: 9: buff->buffer[buff->head] = data;
  4185  000B40  EE20 F020          	lfsr	2,32
  4186  000B44  5036               	movf	i1Buffer_Write@buff,w,c
  4187  000B46  26D9               	addwf	fsr2l,f,c
  4188  000B48  5037               	movf	i1Buffer_Write@buff+1,w,c
  4189  000B4A  22DA               	addwfc	fsr2h,f,c
  4190  000B4C  CFDE F038          	movff	postinc2,??i1_Buffer_Write
  4191  000B50  CFDD F039          	movff	postdec2,??i1_Buffer_Write+1
  4192  000B54  5038               	movf	??i1_Buffer_Write,w,c
  4193  000B56  2436               	addwf	i1Buffer_Write@buff,w,c
  4194  000B58  6ED9               	movwf	fsr2l,c
  4195  000B5A  5039               	movf	??i1_Buffer_Write+1,w,c
  4196  000B5C  2037               	addwfc	i1Buffer_Write@buff+1,w,c
  4197  000B5E  6EDA               	movwf	fsr2h,c
  4198  000B60  C03A  FFDF         	movff	i1Buffer_Write@data,indf2
  4199                           
  4200                           ;ring_buffer.c: 10: buff->head = next;
  4201  000B64  EE20 F020          	lfsr	2,32
  4202  000B68  5036               	movf	i1Buffer_Write@buff,w,c
  4203  000B6A  26D9               	addwf	fsr2l,f,c
  4204  000B6C  5037               	movf	i1Buffer_Write@buff+1,w,c
  4205  000B6E  22DA               	addwfc	fsr2h,f,c
  4206  000B70  C03B  FFDE         	movff	i1Buffer_Write@next,postinc2
  4207  000B74  C03C  FFDD         	movff	i1Buffer_Write@next+1,postdec2
  4208  000B78  D000               	goto	i1l272
  4209  000B7A                     i1l272:
  4210  000B7A  0012               	return		;funcret
  4211  000B7C                     __end_ofi1_Buffer_Write:
  4212                           	opt stack 0
  4213                           pclatu	equ	0xFFB
  4214                           pclath	equ	0xFFA
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           intcon	equ	0xFF2
  4222                           postinc0	equ	0xFEE
  4223                           fsr0h	equ	0xFEA
  4224                           fsr0l	equ	0xFE9
  4225                           wreg	equ	0xFE8
  4226                           postinc1	equ	0xFE6
  4227                           postdec1	equ	0xFE5
  4228                           fsr1h	equ	0xFE2
  4229                           fsr1l	equ	0xFE1
  4230                           bsr	equ	0xFE0
  4231                           indf2	equ	0xFDF
  4232                           postinc2	equ	0xFDE
  4233                           postdec2	equ	0xFDD
  4234                           fsr2h	equ	0xFDA
  4235                           fsr2l	equ	0xFD9
  4236                           status	equ	0xFD8
  4237                           
  4238 ;; *************** function _UARTAddressDetection_ON *****************
  4239 ;; Defined at:
  4240 ;;		line 87 in file "uart.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;		None               void
  4247 ;; Registers used:
  4248 ;;		None
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4254 ;;      Params:         0       0       0       0
  4255 ;;      Locals:         0       0       0       0
  4256 ;;      Temps:          0       0       0       0
  4257 ;;      Totals:         0       0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_LowIsr
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text28
  4269  000F5A                     __ptext28:
  4270                           	opt stack 0
  4271  000F5A                     _UARTAddressDetection_ON:
  4272                           	opt stack 25
  4273                           
  4274                           ;uart.c: 89: RCSTAbits.ADDEN = 1;
  4275                           
  4276                           ;incstack = 0
  4277  000F5A  86AB               	bsf	4011,3,c	;volatile
  4278  000F5C  0012               	return		;funcret
  4279  000F5E                     __end_of_UARTAddressDetection_ON:
  4280                           	opt stack 0
  4281                           pclatu	equ	0xFFB
  4282                           pclath	equ	0xFFA
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           prodh	equ	0xFF4
  4288                           prodl	equ	0xFF3
  4289                           intcon	equ	0xFF2
  4290                           postinc0	equ	0xFEE
  4291                           fsr0h	equ	0xFEA
  4292                           fsr0l	equ	0xFE9
  4293                           wreg	equ	0xFE8
  4294                           postinc1	equ	0xFE6
  4295                           postdec1	equ	0xFE5
  4296                           fsr1h	equ	0xFE2
  4297                           fsr1l	equ	0xFE1
  4298                           bsr	equ	0xFE0
  4299                           indf2	equ	0xFDF
  4300                           postinc2	equ	0xFDE
  4301                           postdec2	equ	0xFDD
  4302                           fsr2h	equ	0xFDA
  4303                           fsr2l	equ	0xFD9
  4304                           status	equ	0xFD8
  4305                           
  4306 ;; *************** function _Package_GetLength *****************
  4307 ;; Defined at:
  4308 ;;		line 30 in file "comm_protocol.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  p               2   14[COMRAM] PTR volatile struct pack
  4311 ;;		 -> in(39), 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      unsigned char 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4323 ;;      Params:         2       0       0       0
  4324 ;;      Locals:         0       0       0       0
  4325 ;;      Temps:          0       0       0       0
  4326 ;;      Totals:         2       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    1
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_LowIsr
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text29
  4338  000F0C                     __ptext29:
  4339                           	opt stack 0
  4340  000F0C                     _Package_GetLength:
  4341                           	opt stack 25
  4342                           
  4343                           ;comm_protocol.c: 32: return p->NUM_OF_BYTES;
  4344                           
  4345                           ;incstack = 0
  4346  000F0C  EE20 F001          	lfsr	2,1
  4347  000F10  5036               	movf	Package_GetLength@p,w,c
  4348  000F12  26D9               	addwf	fsr2l,f,c
  4349  000F14  5037               	movf	Package_GetLength@p+1,w,c
  4350  000F16  22DA               	addwfc	fsr2h,f,c
  4351  000F18  50DF               	movf	indf2,w,c
  4352  000F1A  D000               	goto	i1l314
  4353  000F1C                     i1l314:
  4354  000F1C  0012               	return		;funcret
  4355  000F1E                     __end_of_Package_GetLength:
  4356                           	opt stack 0
  4357                           pclatu	equ	0xFFB
  4358                           pclath	equ	0xFFA
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           intcon	equ	0xFF2
  4366                           postinc0	equ	0xFEE
  4367                           fsr0h	equ	0xFEA
  4368                           fsr0l	equ	0xFE9
  4369                           wreg	equ	0xFE8
  4370                           postinc1	equ	0xFE6
  4371                           postdec1	equ	0xFE5
  4372                           fsr1h	equ	0xFE2
  4373                           fsr1l	equ	0xFE1
  4374                           bsr	equ	0xFE0
  4375                           indf2	equ	0xFDF
  4376                           postinc2	equ	0xFDE
  4377                           postdec2	equ	0xFDD
  4378                           fsr2h	equ	0xFDA
  4379                           fsr2l	equ	0xFD9
  4380                           status	equ	0xFD8
  4381                           
  4382 ;; *************** function _Package_GetADR *****************
  4383 ;; Defined at:
  4384 ;;		line 40 in file "comm_protocol.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  p               2   14[COMRAM] PTR volatile struct pack
  4387 ;;		 -> in(39), 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      unsigned char 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr2l, fsr2h
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4399 ;;      Params:         2       0       0       0
  4400 ;;      Locals:         0       0       0       0
  4401 ;;      Temps:          0       0       0       0
  4402 ;;      Totals:         2       0       0       0
  4403 ;;Total ram usage:        2 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    1
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_LowIsr
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text30
  4414  000F1E                     __ptext30:
  4415                           	opt stack 0
  4416  000F1E                     _Package_GetADR:
  4417                           	opt stack 25
  4418                           
  4419                           ;comm_protocol.c: 42: return p->ADR;
  4420                           
  4421                           ;incstack = 0
  4422  000F1E  C036  FFD9         	movff	Package_GetADR@p,fsr2l
  4423  000F22  C037  FFDA         	movff	Package_GetADR@p+1,fsr2h
  4424  000F26  50DF               	movf	indf2,w,c
  4425  000F28  D000               	goto	i1l320
  4426  000F2A                     i1l320:
  4427  000F2A  0012               	return		;funcret
  4428  000F2C                     __end_of_Package_GetADR:
  4429                           	opt stack 0
  4430                           pclatu	equ	0xFFB
  4431                           pclath	equ	0xFFA
  4432                           tblptru	equ	0xFF8
  4433                           tblptrh	equ	0xFF7
  4434                           tblptrl	equ	0xFF6
  4435                           tablat	equ	0xFF5
  4436                           prodh	equ	0xFF4
  4437                           prodl	equ	0xFF3
  4438                           intcon	equ	0xFF2
  4439                           postinc0	equ	0xFEE
  4440                           fsr0h	equ	0xFEA
  4441                           fsr0l	equ	0xFE9
  4442                           wreg	equ	0xFE8
  4443                           postinc1	equ	0xFE6
  4444                           postdec1	equ	0xFE5
  4445                           fsr1h	equ	0xFE2
  4446                           fsr1l	equ	0xFE1
  4447                           bsr	equ	0xFE0
  4448                           indf2	equ	0xFDF
  4449                           postinc2	equ	0xFDE
  4450                           postdec2	equ	0xFDD
  4451                           fsr2h	equ	0xFDA
  4452                           fsr2l	equ	0xFD9
  4453                           status	equ	0xFD8
  4454                           
  4455 ;; *************** function _Package_CalculateCRC8 *****************
  4456 ;; Defined at:
  4457 ;;		line 50 in file "comm_protocol.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  p               2   22[COMRAM] PTR volatile struct pack
  4460 ;;		 -> in(39), 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      unsigned char 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4472 ;;      Params:         2       0       0       0
  4473 ;;      Locals:         0       0       0       0
  4474 ;;      Temps:          1       0       0       0
  4475 ;;      Totals:         3       0       0       0
  4476 ;;Total ram usage:        3 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    2
  4479 ;; This function calls:
  4480 ;;		i1_Buffer_GetCRC8
  4481 ;; This function is called by:
  4482 ;;		_LowIsr
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text31
  4487  000D86                     __ptext31:
  4488                           	opt stack 0
  4489  000D86                     _Package_CalculateCRC8:
  4490                           	opt stack 24
  4491                           
  4492                           ;comm_protocol.c: 52: p->CRC8 = Buffer_GetCRC8(&p->DATA);
  4493                           
  4494                           ;incstack = 0
  4495  000D86  0E02               	movlw	2
  4496  000D88  243E               	addwf	Package_CalculateCRC8@p,w,c
  4497  000D8A  6E36               	movwf	i1Buffer_GetCRC8@buff,c
  4498  000D8C  0E00               	movlw	0
  4499  000D8E  203F               	addwfc	Package_CalculateCRC8@p+1,w,c
  4500  000D90  6E37               	movwf	i1Buffer_GetCRC8@buff+1,c
  4501  000D92  EC54  F006         	call	i1_Buffer_GetCRC8	;wreg free
  4502  000D96  6E40               	movwf	??_Package_CalculateCRC8& (0+255),c
  4503  000D98  EE20 F026          	lfsr	2,38
  4504  000D9C  503E               	movf	Package_CalculateCRC8@p,w,c
  4505  000D9E  26D9               	addwf	fsr2l,f,c
  4506  000DA0  503F               	movf	Package_CalculateCRC8@p+1,w,c
  4507  000DA2  22DA               	addwfc	fsr2h,f,c
  4508  000DA4  C040  FFDF         	movff	??_Package_CalculateCRC8,indf2
  4509                           
  4510                           ;comm_protocol.c: 53: return p->CRC8;
  4511  000DA8  EE20 F026          	lfsr	2,38
  4512  000DAC  503E               	movf	Package_CalculateCRC8@p,w,c
  4513  000DAE  26D9               	addwf	fsr2l,f,c
  4514  000DB0  503F               	movf	Package_CalculateCRC8@p+1,w,c
  4515  000DB2  22DA               	addwfc	fsr2h,f,c
  4516  000DB4  50DF               	movf	indf2,w,c
  4517  000DB6  D000               	goto	i1l326
  4518  000DB8                     i1l326:
  4519  000DB8  0012               	return		;funcret
  4520  000DBA                     __end_of_Package_CalculateCRC8:
  4521                           	opt stack 0
  4522                           pclatu	equ	0xFFB
  4523                           pclath	equ	0xFFA
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           intcon	equ	0xFF2
  4531                           postinc0	equ	0xFEE
  4532                           fsr0h	equ	0xFEA
  4533                           fsr0l	equ	0xFE9
  4534                           wreg	equ	0xFE8
  4535                           postinc1	equ	0xFE6
  4536                           postdec1	equ	0xFE5
  4537                           fsr1h	equ	0xFE2
  4538                           fsr1l	equ	0xFE1
  4539                           bsr	equ	0xFE0
  4540                           indf2	equ	0xFDF
  4541                           postinc2	equ	0xFDE
  4542                           postdec2	equ	0xFDD
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function i1_Buffer_GetCRC8 *****************
  4548 ;; Defined at:
  4549 ;;		line 26 in file "ring_buffer.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  buff            2   14[COMRAM] PTR volatile struct circ
  4552 ;;		 -> out(39), in(39), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  Buffer_GetCR    1   21[COMRAM] unsigned char 
  4555 ;;  Buffer_GetCR    1   20[COMRAM] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      unsigned char 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4565 ;;      Params:         2       0       0       0
  4566 ;;      Locals:         2       0       0       0
  4567 ;;      Temps:          4       0       0       0
  4568 ;;      Totals:         8       0       0       0
  4569 ;;Total ram usage:        8 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_Package_CalculateCRC8
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text32
  4580  000CA8                     __ptext32:
  4581                           	opt stack 0
  4582  000CA8                     i1_Buffer_GetCRC8:
  4583                           	opt stack 24
  4584                           
  4585                           ;ring_buffer.c: 28: unsigned char i;
  4586                           ;ring_buffer.c: 29: unsigned char CRC = 0;
  4587                           
  4588                           ;incstack = 0
  4589  000CA8  0E00               	movlw	0
  4590  000CAA  6E3D               	movwf	i1Buffer_GetCRC8@CRC,c
  4591                           
  4592                           ;ring_buffer.c: 30: for (i=buff->tail; i<buff->head; i++)
  4593  000CAC  EE20 F022          	lfsr	2,34
  4594  000CB0  5036               	movf	i1Buffer_GetCRC8@buff,w,c
  4595  000CB2  26D9               	addwf	fsr2l,f,c
  4596  000CB4  5037               	movf	i1Buffer_GetCRC8@buff+1,w,c
  4597  000CB6  22DA               	addwfc	fsr2h,f,c
  4598  000CB8  50DF               	movf	indf2,w,c
  4599  000CBA  6E3C               	movwf	i1Buffer_GetCRC8@i,c
  4600  000CBC  D00D               	goto	i1l1618
  4601  000CBE                     i1l1614:
  4602                           
  4603                           ;ring_buffer.c: 31: {
  4604                           ;ring_buffer.c: 32: CRC = CRC ^ buff->buffer[i];
  4605  000CBE  503C               	movf	i1Buffer_GetCRC8@i,w,c
  4606  000CC0  0D01               	mullw	1
  4607  000CC2  50F3               	movf	prodl,w,c
  4608  000CC4  2436               	addwf	i1Buffer_GetCRC8@buff,w,c
  4609  000CC6  6ED9               	movwf	fsr2l,c
  4610  000CC8  50F4               	movf	prodh,w,c
  4611  000CCA  2037               	addwfc	i1Buffer_GetCRC8@buff+1,w,c
  4612  000CCC  6EDA               	movwf	fsr2h,c
  4613  000CCE  50DF               	movf	indf2,w,c
  4614  000CD0  183D               	xorwf	i1Buffer_GetCRC8@CRC,w,c
  4615  000CD2  6E3D               	movwf	i1Buffer_GetCRC8@CRC,c
  4616  000CD4  2A3C               	incf	i1Buffer_GetCRC8@i,f,c
  4617  000CD6  D000               	goto	i1l1618
  4618  000CD8                     i1l1618:
  4619  000CD8  EE20 F020          	lfsr	2,32
  4620  000CDC  5036               	movf	i1Buffer_GetCRC8@buff,w,c
  4621  000CDE  26D9               	addwf	fsr2l,f,c
  4622  000CE0  5037               	movf	i1Buffer_GetCRC8@buff+1,w,c
  4623  000CE2  22DA               	addwfc	fsr2h,f,c
  4624  000CE4  503C               	movf	i1Buffer_GetCRC8@i,w,c
  4625  000CE6  6E3A               	movwf	(??i1_Buffer_GetCRC8+2)& (0+255),c
  4626  000CE8  6A3B               	clrf	(??i1_Buffer_GetCRC8+3)& (0+255),c
  4627  000CEA  50DE               	movf	postinc2,w,c
  4628  000CEC  5C3A               	subwf	??i1_Buffer_GetCRC8+2,w,c
  4629  000CEE  50DE               	movf	postinc2,w,c
  4630  000CF0  583B               	subwfb	??i1_Buffer_GetCRC8+3,w,c
  4631  000CF2  A0D8               	btfss	status,0,c
  4632  000CF4  D7E4               	goto	i1l1614
  4633                           
  4634                           ;ring_buffer.c: 33: }
  4635                           ;ring_buffer.c: 34: return CRC;
  4636  000CF6  503D               	movf	i1Buffer_GetCRC8@CRC,w,c
  4637  000CF8  D000               	goto	i1l283
  4638  000CFA                     i1l283:
  4639  000CFA  0012               	return		;funcret
  4640  000CFC                     __end_ofi1_Buffer_GetCRC8:
  4641                           	opt stack 0
  4642                           pclatu	equ	0xFFB
  4643                           pclath	equ	0xFFA
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           prodh	equ	0xFF4
  4649                           prodl	equ	0xFF3
  4650                           intcon	equ	0xFF2
  4651                           postinc0	equ	0xFEE
  4652                           fsr0h	equ	0xFEA
  4653                           fsr0l	equ	0xFE9
  4654                           wreg	equ	0xFE8
  4655                           postinc1	equ	0xFE6
  4656                           postdec1	equ	0xFE5
  4657                           fsr1h	equ	0xFE2
  4658                           fsr1l	equ	0xFE1
  4659                           bsr	equ	0xFE0
  4660                           indf2	equ	0xFDF
  4661                           postinc2	equ	0xFDE
  4662                           postdec2	equ	0xFDD
  4663                           fsr2h	equ	0xFDA
  4664                           fsr2l	equ	0xFD9
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _HighIsr *****************
  4668 ;; Defined at:
  4669 ;;		line 92 in file "main.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;		None               void
  4676 ;; Registers used:
  4677 ;;		None
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4683 ;;      Params:         0       0       0       0
  4684 ;;      Locals:         0       0       0       0
  4685 ;;      Temps:         14       0       0       0
  4686 ;;      Totals:        14       0       0       0
  4687 ;;Total ram usage:       14 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		Interrupt level 2
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	intcode
  4697  000008                     __pintcode:
  4698                           	opt stack 0
  4699  000008                     _HighIsr:
  4700                           	opt stack 24
  4701                           
  4702                           ;incstack = 0
  4703  000008  CFFA F028          	movff	pclath,??_HighIsr
  4704  00000C  CFFB F029          	movff	pclatu,??_HighIsr+1
  4705  000010  CFE9 F02A          	movff	fsr0l,??_HighIsr+2
  4706  000014  EFBE  F005         	goto	int_func
  4707                           pclatu	equ	0xFFB
  4708                           pclath	equ	0xFFA
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           postinc0	equ	0xFEE
  4717                           fsr0h	equ	0xFEA
  4718                           fsr0l	equ	0xFE9
  4719                           wreg	equ	0xFE8
  4720                           postinc1	equ	0xFE6
  4721                           postdec1	equ	0xFE5
  4722                           fsr1h	equ	0xFE2
  4723                           fsr1l	equ	0xFE1
  4724                           bsr	equ	0xFE0
  4725                           indf2	equ	0xFDF
  4726                           postinc2	equ	0xFDE
  4727                           postdec2	equ	0xFDD
  4728                           fsr2h	equ	0xFDA
  4729                           fsr2l	equ	0xFD9
  4730                           status	equ	0xFD8
  4731                           
  4732                           	psect	intcode_body
  4733  000B7C                     __pintcode_body:
  4734                           	opt stack 24
  4735  000B7C                     int_func:
  4736                           	opt stack 24
  4737  000B7C  CFEA F02B          	movff	fsr0h,??_HighIsr+3
  4738  000B80  CFE1 F02C          	movff	fsr1l,??_HighIsr+4
  4739  000B84  CFE2 F02D          	movff	fsr1h,??_HighIsr+5
  4740  000B88  CFD9 F02E          	movff	fsr2l,??_HighIsr+6
  4741  000B8C  CFDA F02F          	movff	fsr2h,??_HighIsr+7
  4742  000B90  CFF3 F030          	movff	prodl,??_HighIsr+8
  4743  000B94  CFF4 F031          	movff	prodh,??_HighIsr+9
  4744  000B98  CFF6 F032          	movff	tblptrl,??_HighIsr+10
  4745  000B9C  CFF7 F033          	movff	tblptrh,??_HighIsr+11
  4746  000BA0  CFF8 F034          	movff	tblptru,??_HighIsr+12
  4747  000BA4  CFF5 F035          	movff	tablat,??_HighIsr+13
  4748  000BA8  C035  FFF5         	movff	??_HighIsr+13,tablat
  4749  000BAC  C034  FFF8         	movff	??_HighIsr+12,tblptru
  4750  000BB0  C033  FFF7         	movff	??_HighIsr+11,tblptrh
  4751  000BB4  C032  FFF6         	movff	??_HighIsr+10,tblptrl
  4752  000BB8  C031  FFF4         	movff	??_HighIsr+9,prodh
  4753  000BBC  C030  FFF3         	movff	??_HighIsr+8,prodl
  4754  000BC0  C02F  FFDA         	movff	??_HighIsr+7,fsr2h
  4755  000BC4  C02E  FFD9         	movff	??_HighIsr+6,fsr2l
  4756  000BC8  C02D  FFE2         	movff	??_HighIsr+5,fsr1h
  4757  000BCC  C02C  FFE1         	movff	??_HighIsr+4,fsr1l
  4758  000BD0  C02B  FFEA         	movff	??_HighIsr+3,fsr0h
  4759  000BD4  C02A  FFE9         	movff	??_HighIsr+2,fsr0l
  4760  000BD8  C029  FFFB         	movff	??_HighIsr+1,pclatu
  4761  000BDC  C028  FFFA         	movff	??_HighIsr,pclath
  4762  000BE0  0011               	retfie		f
  4763  000BE2                     __end_of_HighIsr:
  4764                           	opt stack 0
  4765                           pclatu	equ	0xFFB
  4766                           pclath	equ	0xFFA
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           intcon	equ	0xFF2
  4774                           postinc0	equ	0xFEE
  4775                           fsr0h	equ	0xFEA
  4776                           fsr0l	equ	0xFE9
  4777                           wreg	equ	0xFE8
  4778                           postinc1	equ	0xFE6
  4779                           postdec1	equ	0xFE5
  4780                           fsr1h	equ	0xFE2
  4781                           fsr1l	equ	0xFE1
  4782                           bsr	equ	0xFE0
  4783                           indf2	equ	0xFDF
  4784                           postinc2	equ	0xFDE
  4785                           postdec2	equ	0xFDD
  4786                           fsr2h	equ	0xFDA
  4787                           fsr2l	equ	0xFD9
  4788                           status	equ	0xFD8
  4789                           pclatu	equ	0xFFB
  4790                           pclath	equ	0xFFA
  4791                           tblptru	equ	0xFF8
  4792                           tblptrh	equ	0xFF7
  4793                           tblptrl	equ	0xFF6
  4794                           tablat	equ	0xFF5
  4795                           prodh	equ	0xFF4
  4796                           prodl	equ	0xFF3
  4797                           intcon	equ	0xFF2
  4798                           postinc0	equ	0xFEE
  4799                           fsr0h	equ	0xFEA
  4800                           fsr0l	equ	0xFE9
  4801                           wreg	equ	0xFE8
  4802                           postinc1	equ	0xFE6
  4803                           postdec1	equ	0xFE5
  4804                           fsr1h	equ	0xFE2
  4805                           fsr1l	equ	0xFE1
  4806                           bsr	equ	0xFE0
  4807                           indf2	equ	0xFDF
  4808                           postinc2	equ	0xFDE
  4809                           postdec2	equ	0xFDD
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814                           	psect	rparam
  4815  0000                     pclatu	equ	0xFFB
  4816                           pclath	equ	0xFFA
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           postinc0	equ	0xFEE
  4825                           fsr0h	equ	0xFEA
  4826                           fsr0l	equ	0xFE9
  4827                           wreg	equ	0xFE8
  4828                           postinc1	equ	0xFE6
  4829                           postdec1	equ	0xFE5
  4830                           fsr1h	equ	0xFE2
  4831                           fsr1l	equ	0xFE1
  4832                           bsr	equ	0xFE0
  4833                           indf2	equ	0xFDF
  4834                           postinc2	equ	0xFDE
  4835                           postdec2	equ	0xFDD
  4836                           fsr2h	equ	0xFDA
  4837                           fsr2l	equ	0xFD9
  4838                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    5
    Data        78
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      70
    BANK0           160     72     111
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    Package_CalculateCRC8@p	PTR volatile struct package size(2) Largest target is 39
		 -> in(COMRAM[39]), 

    Package_GetADR@p	PTR volatile struct package size(2) Largest target is 39
		 -> in(COMRAM[39]), 

    Package_GetLength@p	PTR volatile struct package size(2) Largest target is 39
		 -> in(COMRAM[39]), 

    Package_WriteDataByte@p	PTR volatile struct package size(2) Largest target is 39
		 -> out(BANK0[39]), in(COMRAM[39]), 

    Package_Send@p	PTR volatile struct package size(2) Largest target is 39
		 -> out(BANK0[39]), 

    Buffer_GetCRC8@buff	PTR volatile struct circular_buffer size(2) Largest target is 39
		 -> out(BANK0[39]), in(COMRAM[39]), 

    Buffer_Read@buff	PTR volatile struct circular_buffer size(2) Largest target is 39
		 -> out(BANK0[39]), 

    Buffer_Write@buff	PTR volatile struct circular_buffer size(2) Largest target is 39
		 -> out(BANK0[39]), in(COMRAM[39]), 


Critical Paths under _main in COMRAM

    _main->_Package_Send
    _main->_delay_ms
    ___lwtoft->___ftpack
    ___ftdiv->___ftpack
    _Package_WriteDataByte->_Buffer_Write
    _Package_Send->_Buffer_GetCRC8

Critical Paths under _LowIsr in COMRAM

    _LowIsr->_Package_CalculateCRC8
    i1_Package_WriteDataByte->i1_Buffer_Write
    _Package_CalculateCRC8->i1_Buffer_GetCRC8

Critical Paths under _HighIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_SetDCBrake_NominalVoltage
    _SetDCBrake_NominalVoltage->_SetDCBrake_PWMDuty
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft
    _SetDCBrake_PWMDuty->___fttol
    _Package_WriteDataByte->_Buffer_Write
    _Package_Send->_Buffer_GetCRC8
    _Package_Send->_Buffer_Read

Critical Paths under _LowIsr in BANK0

    None.

Critical Paths under _HighIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowIsr in BANK1

    None.

Critical Paths under _HighIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowIsr in BANK2

    None.

Critical Paths under _HighIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9635
                      _DCBrake_Catch
                    _DCBrake_PWMInit
                      _IR2110Disable
                          _InitPCPWM
                            _InitQEI
                          _InputInit
                       _Package_Send
              _Package_WriteDataByte
          _SetDCBrake_NominalVoltage
                        _SetPWM1Duty
                        _SetPWM2Duty
           _UARTAddressDetection_OFF
                           _UARTInit
                       _UARTSendByte
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     222
                                             25 COMRAM     3     3      0
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                            10     6      4     185
                                             25 COMRAM     2     2      0
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _UARTAddressDetection_OFF                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPWM2Duty                                          2     0      2     139
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetPWM1Duty                                          2     0      2     139
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetDCBrake_NominalVoltage                            7     3      4    6473
                                             65 BANK0      7     3      4
                 _SetDCBrake_PWMDuty
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2529
                                             28 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             46 BANK0     15    11      4
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3186
                                             31 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             25 COMRAM     3     3      0
                                             23 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _SetDCBrake_PWMDuty                                   4     2      2     130
                                             61 BANK0      4     2      2
                            ___ftdiv (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _Package_WriteDataByte                                3     0      3    1121
                                             28 BANK0      3     0      3
                       _Buffer_Write
 ---------------------------------------------------------------------------------
 (2) _Buffer_Write                                         7     5      2     328
                                             25 COMRAM     2     2      0
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Package_Send                                         4     2      2    1047
                                             27 COMRAM     1     1      0
                                             29 BANK0      2     0      2
                     _Buffer_GetCRC8
                        _Buffer_Read
                       _UARTSendByte
 ---------------------------------------------------------------------------------
 (1) _UARTSendByte                                         1     1      0      31
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Buffer_Read                                          7     5      2     374
                                             25 COMRAM     1     1      0
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Buffer_GetCRC8                                       8     6      2     348
                                             25 COMRAM     2     2      0
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InputInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitQEI                                              4     1      3     278
                                             25 COMRAM     1     1      0
                                             23 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _InitPCPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR2110Disable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCBrake_PWMInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCBrake_Catch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowIsr                                              23    23      0     807
                                              0 BANK0     23    23      0
              _Package_CalculateCRC8
                     _Package_GetADR
                  _Package_GetLength
            _UARTAddressDetection_ON
            i1_Package_WriteDataByte
         i1_UARTAddressDetection_OFF
 ---------------------------------------------------------------------------------
 (5) i1_UARTAddressDetection_OFF                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_Package_WriteDataByte                              3     0      3     321
                                             21 COMRAM     3     0      3
                     i1_Buffer_Write
 ---------------------------------------------------------------------------------
 (6) i1_Buffer_Write                                       7     5      2     203
                                             14 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _UARTAddressDetection_ON                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Package_GetLength                                    2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Package_GetADR                                       2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Package_CalculateCRC8                                3     1      2     314
                                             22 COMRAM     3     1      2
                   i1_Buffer_GetCRC8
 ---------------------------------------------------------------------------------
 (6) i1_Buffer_GetCRC8                                     8     6      2     184
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighIsr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DCBrake_Catch
   _DCBrake_PWMInit
   _IR2110Disable
   _InitPCPWM
   _InitQEI
   _InputInit
   _Package_Send
     _Buffer_GetCRC8
     _Buffer_Read
     _UARTSendByte
   _Package_WriteDataByte
     _Buffer_Write
   _SetDCBrake_NominalVoltage
     _SetDCBrake_PWMDuty
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _SetPWM1Duty
   _SetPWM2Duty
   _UARTAddressDetection_OFF
   _UARTInit
   _UARTSendByte
   _delay_ms

 _LowIsr (ROOT)
   _Package_CalculateCRC8
     i1_Buffer_GetCRC8
   _Package_GetADR
   _Package_GetLength
   _UARTAddressDetection_ON
   i1_Package_WriteDataByte
     i1_Buffer_Write
   i1_UARTAddressDetection_OFF

 _HighIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     48      6F       4       69.4%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     1C      46       1       73.7%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B5       5        0.0%
DATA                 0      0      B5      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 04 00:52:09 2015

                              UARTInit@baudrate 0077                     ??_SetDCBrake_NominalVoltage 0044  
                                            l79 0DD6                          __end_of_Package_GetADR 0F2C  
                                            _in 0001                                              bsr 000FE0  
                      __end_ofi1_Buffer_GetCRC8 0CFC                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                             l130 0EE4  
                                           l122 0890                                             l133 0EF0  
                                           l244 09D8                                             l272 0AFE  
                                           l283 0CA6                                             l276 093E  
                                           l712 0410                                             l637 07B2  
                                           l709 0448                                             l648 077A  
                                           l745 057A                                             l874 0E6E  
                                 ?_Package_Send 007D                                    __CFG_CPB$OFF 000000  
                                           _PR2 000FCB                                             u610 049A  
                                  __CFG_CPD$OFF 000000                                             u615 0490  
                                           u911 031E                                             u591 0460  
                                           u931 0348                                             u880 0ABC  
                               Buffer_GetCRC8@i 0041                                             _out 00A8  
                                           wreg 000FE8                                    __CFG_IESO$ON 000000  
                       _UARTAddressDetection_ON 0F5A                                    __CFG_LVP$OFF 000000  
                                  ___ftdiv@cntr 0088                                    ___ftdiv@sign 008D  
                                          l2110 08CC                                            l2120 0C5E  
                                          l2210 07EC                                            l2202 07CC  
                                          l2124 0C7C                                            l2204 07D4  
                                          l2070 0712                                            l2062 06C6  
                                          l2142 036C                                            l2206 07DC  
                                          l2214 07F6                                            l2136 0332  
                                          l2208 07E4                                            l2090 07A4  
                                          l2074 0734                                            l2066 06DC  
                                          l2162 03CE                                            l2138 0358  
                                          l2324 0A16                                            l2084 0786  
                                          l2076 075A                                            l2068 06EC  
                                          l2172 0422                                            l2404 069A  
                                          l2078 076A                                            l2328 0A44  
                                          l2600 0864                                            l1562 0474  
                                          l2602 087A                                            l1580 04F8  
                                          l2268 0958                                            l2604 082A  
                                          l2188 0DC4                                            l1590 052A  
                                          l2606 0836                                            l1592 053C  
                                          l1584 050C                                            l2608 0842  
                                          l1586 0514                                            l1594 054A  
                                          l1598 0568                                            l2596 0812  
                                          l2598 084E                                            u1057 0DCA  
                                          i1l73 012C                                            i1l68 0084  
                                 __CFG_FCMEN$ON 000000                                            _main 057C  
                                  ___ftpack@arg 0077                                    ___ftpack@exp 007A  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          fsr0l 000FE9                                            fsr2h 000FDA  
                                          fsr1l 000FE1                                            indf2 000FDF  
                                          fsr2l 000FD9                       ??i1_Package_WriteDataByte 0040  
                                          pclat 000FFA                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0172  
                               __end_of_HighIsr 0BE2                                   __CFG_MCLRE$ON 000000  
                                  ___param_bank 000010                             __end_of_Buffer_Read 0940  
                               __end_of_InitQEI 0E44                        _UARTAddressDetection_OFF 0F4A  
                               Buffer_Read@data 0041                                 Buffer_Read@buff 0077  
                         _Package_WriteDataByte 0DE8                                    ___fttol@exp1 009C  
                                  ___fttol@lval 0098                                 ?_Package_GetADR 0036  
                        Package_CalculateCRC8@p 003E                                  ??_Package_Send 0043  
                                         ?_main 0028                                 __end_of___ftdiv 044A  
                               __end_of___fttol 057C                                           _T2CON 000FCA  
                                         _PDC0H 000F78                                           _PDC1H 000F76  
                                         _PDC0L 000F79                                           _DTCON 000F6D  
                                         _PDC1L 000F77                                           i1l320 0F2A  
                                         i1l314 0F1C                                           i1l326 0DB8  
                                         i1l272 0B7A                                           i1l283 0CFA  
                                         _RCREG 000FAE                                           _RCSTA 000FAB  
                                         _SPBRG 000FAF                               Buffer_GetCRC8@CRC 0042  
                                         _TRISB 000F93                                           _TXREG 000FAD  
                                         _TXSTA 000FAC                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                __end_of_UARTInit 089E  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                   ??_SetPWM1Duty 0041  
                                 ??_SetPWM2Duty 0041                                  __CFG_EBTRB$OFF 000000  
                     _SetDCBrake_NominalVoltage 0940                                   ___ftpack@sign 007B  
                                __pbitbssCOMRAM 0230                                  __CFG_BOREN$OFF 000000  
                                         tablat 000FF5              __end_ofi1_UARTAddressDetection_OFF 0F5A  
                    i1_UARTAddressDetection_OFF 0F56                                           status 000FD8  
                               __initialization 0CFC                                  __CFG_HPOL$HIGH 000000  
                                  __end_of_main 06AC                            __end_of_Buffer_Write 0B00  
                                __CFG_OSC$HSPLL 000000                                  __CFG_LPOL$HIGH 000000  
                                        ??_main 0044                                   ___fttol@sign1 0097  
                                 __activetblptr 000002                       ??_UARTAddressDetection_ON 0036  
                                        _CCPR1L 000FBE                                          _ANSEL0 000FB8  
                                        _ANSEL1 000FB9                                __end_of___ftpack 07B4  
                            __size_of_InitPCPWM 003A                                          i1l1614 0CBE  
                                        i1l2350 00E0                                          i1l2352 00F2  
                                        i1l1618 0CD8                                          i1l2346 008E  
                                        i1l2338 0068                                          i1l2362 0110  
                                __CFG_WDTEN$OFF 000000                                          _QEICON 000FB6  
                              __end_of_fVersion 0306                                __end_of___lwtoft 0E70  
                                        _PTCON0 000F7F                                  __CFG_WINEN$OFF 000000  
                                        _SPBRGH 000FB0                                       ??_HighIsr 0028  
                                        _PTPERH 000F7A                                          _PTPERL 000F7B  
                                   _Buffer_Read 089E                           __end_of_DCBrake_Catch 0F56  
                           __end_of_SetPWM1Duty 0F44                             __end_of_SetPWM2Duty 0F38  
                                     ??_InitQEI 0041                                __end_of_delay_ms 0DE8  
                            Buffer_GetCRC8@buff 0077                                  __CFG_PWRTEN$ON 000000  
                                __CFG_SSPMX$RD1 000000                                          _LowIsr 0018  
                            __size_of_InputInit 0006                           _Package_CalculateCRC8 0D86  
                        ?_Package_WriteDataByte 007C                                  __CFG_STVREN$ON 000000  
                                     ??___ftdiv 0085                                       ??___fttol 0092  
                                  __pdataCOMRAM 0001                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                 Package_Send@p 007D                                          tblptru 000FF8  
                      __size_of_DCBrake_PWMInit 0014                          __size_of_IR2110Disable 0004  
                                    __accesstop 0060                         __end_of__initialization 0D42  
                               __CFG_FLTAMX$RC1 000000                            __end_of_Package_Send 0A6E  
                       __size_ofi1_Buffer_Write 007C                                   ___rparam_used 000001  
                                    ___ftdiv@f1 007F                                      ___ftdiv@f2 0082  
                                    ___ftdiv@f3 0089                                 __CFG_T1OSCMX$ON 000000  
                            Package_GetLength@p 0036                                      ___fttol@f1 008E  
                                __pcstackCOMRAM 0028                                    __pidataBANK0 0E97  
                                     ?_UARTInit 0077                               __end_of_InitPCPWM 0D86  
                                InitQEI@_MAXCNT 0078                                Buffer_Write@data 0079  
                                InitQEI@_QEICON 0041                                Buffer_Write@buff 0077  
                                    ___lwtoft@c 007C                               ?i1_Buffer_GetCRC8 0036  
                              Buffer_Write@next 007A                         __size_of_Buffer_GetCRC8 0062  
                            ??i1_Buffer_GetCRC8 0038                        i1Package_WriteDataByte@d 003F  
                      i1Package_WriteDataByte@p 003D                               __end_of_InputInit 0F4A  
                                   _SetPWM1Duty 0F38                                     _SetPWM2Duty 0F2C  
                    ??_UARTAddressDetection_OFF 0041  SetDCBrake_NominalVoltage@DCBrakeNominalVoltage 00A1  
                   __size_of_SetDCBrake_PWMDuty 0064              __size_of_SetDCBrake_NominalVoltage 009A  
                        ?_Package_CalculateCRC8 003E                           __size_of_Buffer_Write 0092  
                                       ?_LowIsr 0028                                ??_Package_GetADR 0038  
                                 _IR2110Disable 0F4E                                      ??_UARTInit 007B  
                               __CFG_WDPS$32768 000000                                         _CCP1CON 000FBD  
                                     ?___ftpack 0077                                         _DFLTCON 000F60  
                                     ?___lwtoft 007C                                 __CFG_PWM4MX$RB5 000000  
                                       _MAXCNTH 000F65                                         _MAXCNTL 000F64  
                                     ?_delay_ms 0077                                         _OVDCOND 000F6B  
                                       _OVDCONS 000F6A                                         i1u67_20 0B40  
                                       _POSCNTH 000F67                                         _POSCNTL 000F66  
      SetDCBrake_NominalVoltage@HVSupplyVoltage 00A3                                         _PWMCON0 000F6F  
                                       _PWMCON1 000F6E                                    _Buffer_Write 0A6E  
                               __CFG_PWMPIN$OFF 000000                                   ?_UARTSendByte 0028  
                              UARTSendByte@data 0041                               ??_DCBrake_PWMInit 0041  
                                       _HighIsr 0008                     ?i1_UARTAddressDetection_OFF 0028  
                                       _InitQEI 0E16                                         __Hparam 0000  
                                       __Lparam 0000                                 __size_of_LowIsr 015A  
                                ?_IR2110Disable 0028                                         ___ftdiv 0308  
                                       ___fttol 044A                                    __psmallconst 0300  
                                       __pcinit 0CFC                                      ??___ftpack 0041  
                                       __ramtop 0300                                         __ptext0 057C  
                                       __ptext1 0DBA                                         __ptext2 07B4  
                                       __ptext3 0F4A                                         __ptext4 0F2C  
                                       __ptext5 0F38                                         __ptext6 0940  
                                       __ptext7 0E44                                         __ptext8 044A  
                                       __ptext9 0308                                      ??___lwtoft 0044  
                                     _FLTCONFIG 000F6C                          SetDCBrake_PWMDuty@duty 009D  
                                    ??_delay_ms 0041            SetDCBrake_NominalVoltage@sPWMQuantum 00A5  
                         __size_of_Package_Send 0094                                  __pintcode_body 0B7C  
                          end_of_initialization 0D42                        ?i1_Package_WriteDataByte 003D  
                                ??_UARTSendByte 0041                                   __Lmediumconst 0000  
                                i1_Buffer_Write 0B00                                         int_func 0B7C  
                                  ?_Buffer_Read 0077                         ??_Package_WriteDataByte 0043  
                           i1Buffer_GetCRC8@CRC 003D                              i1Buffer_Write@data 003A  
                            i1Buffer_Write@buff 0036                                       _RCSTAbits 000FAB  
                            i1Buffer_Write@next 003B                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                     _RCV_STATE 0045                                  _Buffer_GetCRC8 0C46  
                                     _PORTDbits 000F83                                    _Package_Send 09DA  
                                     _TRISAbits 000F92                                       _TRISCbits 000F94  
                                     _TRISDbits 000F95                                 UARTInit@divisor 0041  
                        __end_ofi1_Buffer_Write 0B7C                                     _CCP1CONbits 000FBD  
                                   ___ftdiv@exp 008C                                       _TXSTAbits 000FAC  
                               ??_IR2110Disable 0041                                  __end_of_LowIsr 0172  
                              __CFG_EXCLKMX$RC3 000000                          __end_of_Buffer_GetCRC8 0CA8  
                                 delay_ms@delay 0077                        ?_UARTAddressDetection_ON 0028  
                                   _BAUDCONbits 000FAA                                   __pidataCOMRAM 0E70  
                             __size_of_UARTInit 00EA                                     _BAUDCTLbits 000FAA  
                               InitQEI@_DFLTCON 0077                                       _InitPCPWM 0D4C  
                        __size_of_DCBrake_Catch 0004                             start_initialization 0CFC  
               __end_ofi1_Package_WriteDataByte 0EE0                                    ?_SetPWM1Duty 0077  
                                  ?_SetPWM2Duty 0077                                 ?i1_Buffer_Write 0036  
                        Package_WriteDataByte@d 007E                          Package_WriteDataByte@p 007C  
                                     _InputInit 0F44                       __size_ofi1_Buffer_GetCRC8 0054  
                       ??_Package_CalculateCRC8 0040                                        ??_LowIsr 0060  
                                   __pdataBANK0 00A8                                 ?_Buffer_GetCRC8 0077  
                          __end_of_UARTSendByte 0EF8                               i1Buffer_GetCRC8@i 003C  
                             __size_of___ftpack 0108                                      ?_InitPCPWM 0028  
                                   __pbssCOMRAM 0044                                 _DCBrake_PWMInit 0EF8  
                             __size_of___lwtoft 002C                                   __pcstackBANK0 0060  
                             __size_of_delay_ms 002E                                      ?_InputInit 0028  
                    __end_of_SetDCBrake_PWMDuty 0C46                                        ?_HighIsr 0028  
                             _Package_GetLength 0F0C                                        ?_InitQEI 0077  
                                 _DCBrake_Catch 0F52                            __size_of_Buffer_Read 00A2  
                            ?_Package_GetLength 0036                 __end_of_UARTAddressDetection_ON 0F5E  
                                     __pintcode 0008                                        ?___ftdiv 007F  
                                      ?___fttol 008E                             ??_Package_GetLength 0038  
                                   __pintcodelo 0018               __size_of_UARTAddressDetection_OFF 0004  
                     ?_UARTAddressDetection_OFF 0028                                     __smallconst 0300  
                     __end_of_Package_GetLength 0F1E                                  ?_DCBrake_Catch 0028  
                                     delay_ms@i 0042                                        _IPR1bits 000F9F  
                                      _PIE1bits 000F9D                                SetPWM1Duty@_PDC0 0077  
                __size_of_Package_WriteDataByte 002E                                        _PIR1bits 000F9E  
                 __end_of_Package_WriteDataByte 0E16                                        _RCONbits 000FD0  
              __size_ofi1_Package_WriteDataByte 0022                      ?_SetDCBrake_NominalVoltage 00A1  
                                      _UARTInit 07B4                         __end_of_DCBrake_PWMInit 0F0C  
                              SetPWM2Duty@_PDC1 0077                         __size_of_Package_GetADR 000E  
                                   ??_InitPCPWM 0041                                       copy_data0 0D16  
                                     copy_data1 0D36                                     ??_InputInit 0041  
                          __size_of_SetPWM1Duty 000C                            __size_of_SetPWM2Duty 000C  
                              i1_Buffer_GetCRC8 0CA8                                __size_of_HighIsr 0BDA  
                              __size_of_InitQEI 002E                                        __Hrparam 0000  
                                      __Lrparam 0000                           __size_of_UARTSendByte 0018  
             __end_of_SetDCBrake_NominalVoltage 09DA                                __size_of___ftdiv 0142  
                              __size_of___fttol 0132                                        ___ftpack 06AC  
                                      _fVersion 0301                                        ___lwtoft 0E44  
                              ??i1_Buffer_Write 0038                                        _delay_ms 0DBA  
                                      __ptext10 06AC                                        __ptext11 0BE2  
                                      __ptext20 0D4C                                        __ptext12 0DE8  
                                      __ptext21 0F4E                                        __ptext13 0A6E  
                                      __ptext30 0F1E                                        __ptext22 0EF8  
                                      __ptext14 09DA                                        __ptext31 0D86  
                                      __ptext23 0F52                                        __ptext15 0EE0  
                                      __ptext32 0CA8                                        __ptext16 089E  
                                      __ptext25 0F56                                        __ptext17 0C46  
                                      __ptext26 0EBE                                        __ptext18 0F44  
                                      __ptext27 0B00                                        __ptext19 0E16  
                                      __ptext28 0F5A                                        __ptext29 0F0C  
              __size_of_UARTAddressDetection_ON 0004                                 ??_DCBrake_Catch 0041  
                    __size_of_Package_GetLength 0012                                    _UARTSendByte 0EE0  
                                 __size_of_main 0130                  __size_of_Package_CalculateCRC8 0034  
                 __end_of_Package_CalculateCRC8 0DBA                                ??_Buffer_GetCRC8 0079  
                         __end_of_IR2110Disable 0F52                                ?_DCBrake_PWMInit 0028  
                                    _INTCONbits 000FF2                                 Package_GetADR@p 0036  
                                 ?_Buffer_Write 0077                                        intlevel1 0000  
                                      intlevel2 0000                __end_of_UARTAddressDetection_OFF 0F4E  
                  ??i1_UARTAddressDetection_OFF 0036                            i1Buffer_GetCRC8@buff 0036  
                       i1_Package_WriteDataByte 0EBE                              _SetDCBrake_PWMDuty 0BE2  
                                    _RCV_LENGTH 0044                                      _PTCON1bits 000F7E  
                                _Package_GetADR 0F1E                             ?_SetDCBrake_PWMDuty 009D  
                          _NEW_PACKAGE_RECEIVED 0230             __size_ofi1_UARTAddressDetection_OFF 0004  
                                ??_Buffer_Write 0041                                   ??_Buffer_Read 0079  
                          ??_SetDCBrake_PWMDuty 009F  
